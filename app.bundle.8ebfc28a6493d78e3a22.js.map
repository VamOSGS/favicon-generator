{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/bowser/src/bowser.js","webpack:///./node_modules/chain-function/index.js","webpack:///./node_modules/css-in-js-utils/lib/hyphenateProperty.js","webpack:///./node_modules/css-in-js-utils/lib/isPrefixedValue.js","webpack:///./node_modules/dom-helpers/class/addClass.js","webpack:///./node_modules/dom-helpers/class/hasClass.js","webpack:///./node_modules/dom-helpers/class/removeClass.js","webpack:///./node_modules/dom-helpers/transition/properties.js","webpack:///./node_modules/dom-helpers/util/inDOM.js","webpack:///./node_modules/dom-helpers/util/requestAnimationFrame.js","webpack:///./node_modules/fbjs/lib/ExecutionEnvironment.js","webpack:///./node_modules/fbjs/lib/containsNode.js","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/emptyObject.js","webpack:///./node_modules/fbjs/lib/getActiveElement.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/fbjs/lib/isNode.js","webpack:///./node_modules/fbjs/lib/isTextNode.js","webpack:///./node_modules/fbjs/lib/shallowEqual.js","webpack:///./node_modules/fetch-jsonp/build/fetch-jsonp.js","webpack:///./node_modules/hyphenate-style-name/index.js","webpack:///./node_modules/inline-style-prefixer/dynamic/createPrefixer.js","webpack:///./node_modules/inline-style-prefixer/dynamic/dynamicData.js","webpack:///./node_modules/inline-style-prefixer/dynamic/index.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/crossFade.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/cursor.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/filter.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/flex.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/flexboxOld.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/gradient.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/imageSet.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/position.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/sizing.js","webpack:///./node_modules/inline-style-prefixer/dynamic/plugins/transition.js","webpack:///./node_modules/inline-style-prefixer/static/createPrefixer.js","webpack:///./node_modules/inline-style-prefixer/static/index.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/crossFade.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/cursor.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/filter.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/flex.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/flexboxOld.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/gradient.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/imageSet.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/position.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/sizing.js","webpack:///./node_modules/inline-style-prefixer/static/plugins/transition.js","webpack:///./node_modules/inline-style-prefixer/static/staticData.js","webpack:///./node_modules/inline-style-prefixer/utils/addNewValuesOnly.js","webpack:///./node_modules/inline-style-prefixer/utils/capitalizeString.js","webpack:///./node_modules/inline-style-prefixer/utils/getBrowserInformation.js","webpack:///./node_modules/inline-style-prefixer/utils/getPrefixedKeyframes.js","webpack:///./node_modules/inline-style-prefixer/utils/getPrefixedValue.js","webpack:///./node_modules/inline-style-prefixer/utils/isObject.js","webpack:///./node_modules/inline-style-prefixer/utils/prefixProperty.js","webpack:///./node_modules/inline-style-prefixer/utils/prefixValue.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/konva/konva.js","webpack:///./node_modules/load-script/index.js","webpack:///./node_modules/lodash-es/_freeGlobal.js","webpack:///./node_modules/lodash-es/_root.js","webpack:///./node_modules/lodash-es/_Symbol.js","webpack:///./node_modules/lodash-es/_getRawTag.js","webpack:///./node_modules/lodash-es/_objectToString.js","webpack:///./node_modules/lodash-es/_baseGetTag.js","webpack:///./node_modules/lodash-es/_overArg.js","webpack:///./node_modules/lodash-es/_getPrototype.js","webpack:///./node_modules/lodash-es/isObjectLike.js","webpack:///./node_modules/lodash-es/isPlainObject.js","webpack:///./node_modules/lodash.omit/index.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/material-colors/dist/colors.es2015.js","webpack:///./node_modules/murmurhash-js/murmurhash3_gc.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/prismjs/components/prism-bash.min.js","webpack:///./node_modules/prismjs/components/prism-css.min.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./node_modules/prismjs/prism.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/redux/es/createStore.js","webpack:///./node_modules/redux/es/combineReducers.js","webpack:///./node_modules/redux/es/bindActionCreators.js","webpack:///./node_modules/redux/es/compose.js","webpack:///./node_modules/redux/es/applyMiddleware.js","webpack:///./node_modules/stackblur-canvas/src/stackblur.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./node_modules/tinycolor2/tinycolor.js","webpack:///./node_modules/warning/browser.js","webpack:///./node_modules/webfontloader/webfontloader.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/actions/index.js","webpack:///./src/assets/favicon.ico","webpack:///./src/assets/fonts.js","webpack:///./src/assets/index.js","webpack:///./src/components/App/App.jsx","webpack:///./src/components/App/index.js","webpack:///./src/components/Canvas/Canvas.jsx","webpack:///./src/components/Canvas/index.js","webpack:///./src/components/Form/Color.jsx","webpack:///./src/components/Form/Font.jsx","webpack:///./src/components/Form/Form.jsx","webpack:///./src/components/Form/Slider.jsx","webpack:///./src/components/Form/Text.jsx","webpack:///./src/components/Form/index.js","webpack:///./src/components/Loader/Loader.jsx","webpack:///./src/components/Loader/index.js","webpack:///./src/components/Root/index.jsx","webpack:///./src/constants/index.js","webpack:///./src/index.js","webpack:///./src/reducers/index.js","webpack:///./src/reducers/loadReducer.js","webpack:///./src/reducers/mainReducer.js","webpack:///./src/store/index.js","webpack:///./src/utils/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","definition","t","detect","ua","getFirstMatch","regex","match","getSecondMatch","iosdevice","toLowerCase","android","test","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","windows","mac","linux","edgeVersion","versionIdentifier","tablet","mobile","xbox","opera","version","samsungBrowser","coast","yandexbrowser","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","osname","msedge","msie","chromeBook","chrome","vivaldi","seamonkey","firefox","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","chromium","safari","googlebot","blink","webkit","gecko","ios","osVersion","getWindowsVersion","replace","osversion","osMajorVersion","split","a","x","bowser","navigator","userAgent","getVersionPrecision","map","arr","iterator","Array","compareVersions","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","browser","Error","String","browserList","browserItem","check","_detect","len","arguments","args","filter","fn","reduce","current","next","this","default","_hyphenateStyleName2","obj","_hyphenateStyleName","element","className","classList","add","_hasClass2","setAttribute","baseVal","_hasClass","contains","indexOf","replaceClassName","origClass","classToRemove","RegExp","remove","animationEnd","animationDelay","animationTiming","animationDuration","animationName","transitionEnd","transitionDuration","transitionDelay","transitionTiming","transitionProperty","transform","undefined","_inDOM","prefix","_getTransitionPropert","style","document","createElement","vendorMap","O","e","Moz","Webkit","ms","vendors","keys","vendor","getTransitionProperties","end","timing","delay","duration","compatRaf","cancel","raf","curr","Date","getTime","prev","req","setTimeout","getKey","k","toUpperCase","substr","some","rafKey","cb","id","canUseDOM","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","isTextNode","containsNode","outerNode","innerNode","parentNode","compareDocumentPosition","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","doc","activeElement","body","validateFormat","format","condition","b","f","error","argIndex","framesToPop","defaultView","ownerDocument","Node","nodeType","nodeName","isNode","is","y","objA","objB","keysA","keysB","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","defaultOptions","timeout","jsonpCallback","jsonpCallbackFunction","clearFunction","functionName","removeScript","scriptId","script","getElementById","getElementsByTagName","removeChild","_url","options","url","timeoutId","Promise","resolve","reject","callbackFunction","now","ceil","random","response","ok","json","clearTimeout","jsonpScript","charset","appendChild","onerror","uppercasePattern","msPattern","cache","string","_createClass","defineProperties","target","props","descriptor","writable","key","Constructor","protoProps","staticProps","_ref","prefixMap","plugins","fallback","Prefixer","instance","TypeError","_classCallCheck","defaultUserAgent","_userAgent","_keepUnprefixed","keepUnprefixed","_browserInfo","_getBrowserInformation2","cssPrefix","_useFallback","prefixedKeyframes","_getPrefixedKeyframes2","browserName","browserVersion","prefixData","_requiresPrefix","_hasPropsRequiringPrefix","_metaData","jsPrefix","requiresPrefix","_prefixStyle","_isObject2","isArray","combinedValue","processedValue","_prefixValue2","_addNewValuesOnly2","_processedValue","_capitalizeString2","styles","_interopRequireDefault","appearance","userSelect","textEmphasisPosition","textEmphasis","textEmphasisStyle","textEmphasisColor","boxDecorationBreak","clipPath","maskImage","maskMode","maskRepeat","maskPosition","maskClip","maskOrigin","maskSize","maskComposite","mask","maskBorderSource","maskBorderMode","maskBorderSlice","maskBorderWidth","maskBorderOutset","maskBorderRepeat","maskBorder","maskType","textDecorationStyle","textDecorationSkip","textDecorationLine","textDecorationColor","fontFeatureSettings","breakAfter","breakBefore","breakInside","columnCount","columnFill","columnGap","columnRule","columnRuleColor","columnRuleStyle","columnRuleWidth","columns","columnSpan","columnWidth","writingMode","flex","flexBasis","flexDirection","flexGrow","flexFlow","flexShrink","flexWrap","alignContent","alignItems","alignSelf","justifyContent","order","transformOrigin","transformOriginX","transformOriginY","backfaceVisibility","perspective","perspectiveOrigin","transformStyle","transformOriginZ","animation","animationDirection","animationFillMode","animationIterationCount","animationPlayState","animationTimingFunction","backdropFilter","fontKerning","scrollSnapType","scrollSnapPointsX","scrollSnapPointsY","scrollSnapDestination","scrollSnapCoordinate","shapeImageThreshold","shapeImageMargin","shapeImageOutside","hyphens","flowInto","flowFrom","regionFragment","textAlignLast","tabSize","ie","wrapFlow","wrapThrough","wrapMargin","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridTemplate","gridAutoColumns","gridAutoRows","gridAutoFlow","grid","gridRowStart","gridColumnStart","gridRowEnd","gridRow","gridColumn","gridColumnEnd","gridColumnGap","gridRowGap","gridArea","gridGap","textSizeAdjust","edge","ios_saf","borderImage","borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth","transition","transitionTimingFunction","and_chr","and_uc","op_mini","_createPrefixer2","_cursor2","_crossFade2","_filter2","_flex2","_flexboxOld2","_gradient2","_imageSet2","_position2","_sizing2","_transition2","_static2","_dynamicData2","_getPrefixedValue2","_getPrefixedValue","grabValues","zoomValues","grab","grabbing","zoom-in","zoom-out","values","inline-flex","properties","WebkitBoxOrient","WebkitBoxDirection","alternativeValues","alternativeProps","space-around","space-between","flex-start","flex-end","wrap-reverse","wrap","concat","maxHeight","maxWidth","width","height","minWidth","minHeight","min-content","max-content","fill-available","fit-content","contain-floats","requiresPrefixDashCased","prop","_hyphenateProperty2","multipleValues","forEach","val","index","_hyphenateProperty","WebkitTransition","WebkitTransitionProperty","MozTransition","MozTransitionProperty","prefixAll","_prefixProperty2","_staticData2","_isPrefixedValue2","prefixes","_isPrefixedValue","propertyPrefixMap","outputValue","singleValue","dashCaseProperty","pLen","unshift","prefixMapping","prefixValue","webkitOutput","mozOutput","w","wm","wms","wmms","addIfNew","list","str","charAt","browserInfo","_bowser2","prefixByBrowser","browserByCanIuseAlias","getBrowserName","parseFloat","parseInt","seamoney","firfox","prefixedValue","prefixProperties","requiredPrefixes","_capitalizeString","metaData","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","codes","aliases","charCodeAt","isEventKey","event","nameOrCode","code","backspace","tab","enter","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","left","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","fromCharCode","title","alias","global","PI_OVER_180","PI","Konva","stages","idCounter","ids","shapes","listenClickTap","inDblClickWindow","isBrowser","toString","enableTrace","traceArrMax","dblClickWindow","pixelRatio","dragDistance","angleDeg","showWarnings","Filters","isDragging","dd","DD","isDragReady","node","_addId","_removeId","_addName","_removeName","_id","nodes","getAngle","angle","_detectIE","substring","rv","_parseUA","exec","ieMobile","isIE","UA","glob","WorkerGlobalScope","self","console","Collection","each","func","toArray","toCollection","collection","_mapMethod","methodName","mapMethods","constructor","prot","Transform","copy","point","translate","scale","sx","sy","rotate","rad","cos","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","dx","dy","invert","m0","m1","m2","m3","m4","m5","getMatrix","setAbsolutePosition","yt","xt","PI_OVER_DEG180","DEG180_OVER_PI","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","Util","_isElement","_isFunction","_isObject","_isArray","_isNumber","_isString","isObject","isValidSelector","selector","firstChar","_sign","number","createCanvasElement","canvas","_nodeCanvas","_isInDocument","el","_simplifyArray","retArr","util","round","_getImage","callback","imageObj","Image","onload","src","getContext","putImageData","toDataURL","_getRGBAString","alpha","_rgbToHex","g","_hexToRgb","hex","bigint","getRandomColor","randColor","def","getRGB","color","rgb","colorToRGBA","_namedColorToRBA","_hex3ColorToRGBA","_hex6ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","parts","Number","_merge","o1","o2","retObj","_clone","haveIntersection","r1","r2","cloneObject","cloneArray","_degToRad","deg","_radToDeg","_capitalize","throw","warn","extend","child","parent","Ctor","oldProto","__super__","super","addMethods","methods","_getControlPoints","x0","y0","x1","y1","x2","y2","d01","sqrt","pow","d12","fa","fb","_expandPoints","tension","cp","allPoints","_removeLastLetter","_inRange","_getProjectionToSegment","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","start","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","getOwnPropertyDescriptor","_pixelRatio","Canvas","config","init","context","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getDevicePixelRatio","_canvas","padding","margin","border","background","position","top","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","_context","setHeight","mimeType","quality","err","message","SceneCanvas","conf","SceneContext","HitCanvas","HitContext","hitCanvas","CONTEXT_METHODS","Context","traceArr","_enableTrace","fillShape","shape","getFillEnabled","_fill","strokeShape","getStrokeEnabled","_stroke","fillStrokeShape","getTrace","relaxed","trace","method","clearTrace","_trace","reset","getCanvas","setTransform","clear","bounds","clearRect","_applyLineCap","lineCap","getLineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","getLineJoin","attr","arc","beginPath","bezierCurveTo","clip","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","isPointInPath","fill","fillRect","strokeRect","fillText","measureText","text","getImageData","lineTo","moveTo","rect","quadraticCurveTo","restore","save","setLineDash","mozDash","webkitLineDash","getLineDash","stroke","strokeText","that","origSetter","ret","origMethod","set","_fillColor","_fillFunc","_fillPattern","fillPatternX","getFillPatternX","fillPatternY","getFillPatternY","fillPatternScale","getFillPatternScale","fillPatternRotation","getFillPatternRotation","fillPatternOffset","getFillPatternOffset","getFillPatternImage","getFillPatternRepeat","_fillLinearGradient","getFillLinearGradientStartPoint","getFillLinearGradientEndPoint","colorStops","getFillLinearGradientColorStops","grd","addColorStop","_fillRadialGradient","getFillRadialGradientStartPoint","getFillRadialGradientEndPoint","startRadius","getFillRadialGradientStartRadius","endRadius","getFillRadialGradientEndRadius","getFillRadialGradientColorStops","hasColor","fillPriority","getFillPriority","hasPattern","hasLinearGradient","hasRadialGradient","_strokeLinearGradient","getStrokeLinearGradientStartPoint","getStrokeLinearGradientEndPoint","getStrokeLinearGradientColorStops","dash","strokeScaleEnabled","getStrokeScaleEnabled","Text","hasStroke","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","_applyGlobalCompositeOperation","globalCompositeOperation","getGlobalCompositeOperation","colorKey","_fillFuncHit","strokeHitEnabled","_strokeFuncHit","Factory","addGetterSetter","validator","after","addGetter","addSetter","addOverloadedGetterSetter","attrs","_setAttr","addComponentsGetterSetter","components","component","capitalize","setter","getAttr","oldVal","_fireChangeEvent","capitalizedAttr","addDeprecatedGetterSetter","backCompat","oldMethodName","newMethodName","afterSetFilter","_filterUpToDate","Validators","RGBComponent","alphaComponent","SHAPE","CLONE_BLACK_LIST","TRANSFORM_CHANGE_STR","SCALE_CHANGE_STR","_init","eventListeners","_cache","_isUnderCache","setAttrs","on","_clearCache","_clearSelfAndDescendantCache","_getCache","privateGetter","children","getChildren","clearCache","getClientRect","skipTransform","relativeTo","getParent","drawBorder","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","hitContext","isCache","drawScene","drawHit","scene","hit","_transformedRect","minX","minY","maxX","maxY","points","trans","getAbsoluteTransform","transformed","_drawCachedSceneCanvas","cacheCanvas","_getCachedSceneCanvas","_drawCachedHitCanvas","imageData","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","evtStr","handler","_delegate","baseEvent","events","off","_off","dispatchEvent","evt","type","fire","removeEventListener","stopNode","targets","findAncestors","currentTarget","_setChildrenIndices","destroy","getId","getName","subname","getAncestors","ancestors","getAttrs","isListening","_isListening","listening","getListening","isVisible","_isVisible","visible","getVisible","shouldDrawHit","layer","getLayer","hitGraphEnabled","show","setVisible","hide","getZIndex","getAbsoluteZIndex","depth","getDepth","addChildren","getStage","setPosition","pos","setX","setY","getPosition","getX","getY","getAbsolutePosition","absoluteMatrix","absoluteTransform","it","origTrans","_clearTransform","_setTransform","rotation","getRotation","getScaleX","getScaleY","offsetX","getOffsetX","offsetY","getOffsetY","skewX","getSkewX","skewY","getSkewY","move","change","changeX","changeY","_eachAncestorReverse","family","theta","setRotation","moveToTop","moveUp","moveDown","moveToBottom","setZIndex","zIndex","_getAbsoluteOpacity","getOpacity","newContainer","__originalRemove","toObject","defaultValue","getClassName","toJSON","JSON","stringify","includeSelf","res","_isMatch","ancestor","findAncestor","sel","selectorArr","hasName","_get","_getStage","eventType","bubble","_fireAndBubble","_fire","_getAbsoluteTransform","transformsEnabled","at","getTransform","_getAbsoluteScale","_getTransform","clone","allListeners","listener","_toKonvaCanvas","stage","toCanvas","toImage","img","size","getSize","getType","getDragDistance","evtName","evtListeners","newVal","setId","oldId","setName","oldNames","newNames","addName","oldName","newName","removeName","_setComponentAttr","compareShape","okayToRun","isAncestorOf","stopBubble","cancelBubble","draw","create","container","parse","_createNode","no","rotateDeg","setRotationDeg","getRotationDeg","Grayscale","brightness","Brighten","Invert","BlurStack","mul_table","shg_table","Blur","radius","blurRadius","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stack","stackIn","stackOut","mul_sum","shg_sum","filterGaussBlurRGBA","pixelAt","idata","idx","rgbDistance","Mask","threshold","rgbv_no","rgbv_ne","rgbv_so","rgbv_se","thres","mean","pTab","rgbMean","backgroundMask","applyMask","sw","sh","weights","side","halfSide","floor","maskResult","so","cy","cx","scy","scx","wt","smoothEdgeMask","dilateMask","erodeMask","RGB","nPixels","RGBA","ia","HSV","v","saturation","h","hue","vsu","vsw","rr","rg","rb","gr","gg","gb","br","bg","bb","HSL","luminance","Emboss","strength","embossStrength","greyLevel","embossWhiteLevel","direction","embossDirection","blend","embossBlend","dirY","dirX","w4","otherY","offsetYOther","otherX","offsetOther","dR","dG","dB","dif","absDif","remap","fromValue","fromMin","fromMax","toMin","toMax","fromRange","toRange","Enhance","nSubPixels","rMin","rMax","gMin","gMax","bMin","bMax","enhanceAmount","enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","Posterize","levels","Noise","amount","noise","half","Pixelate","xBinStart","xBinEnd","yBinStart","yBinEnd","xBin","yBin","pixelsInBin","pixelSize","nBinsX","nBinsY","Threshold","level","Sepia","or","og","ob","Solarize","Kaleidoscope","srcPos","dstPos","xSize","ySize","power","kaleidoscopePower","kaleidoscopeAngle","tempCanvas","scratchData","dst","opt","srcPixels","dstPixels","xMid","polarCenterX","yMid","polarCenterY","rSize","tSize","conversion","ToPolar","minSectionSize","sectionSize","xStart","xEnd","xDelta","phaseShift","polarRotation","atan2","FromPolar","Contrast","adjust","contrast","Container","__init","filterFunc","results","hasChildren","removeChildren","destroyChildren","_validateAdd","anim","setLayers","find","_generalFind","findOne","_findByString","_findByFunction","clen","_getNodeById","_getNodesByName","addItems","_getDescendants","getAllIntersections","intersects","can","caching","_applyTransform","_drawChildren","clearHitCache","drawMethod","skipBuffer","clipX","clipY","clipWidth","getClipWidth","clipHeight","getClipHeight","clipFunc","getClipFunc","hasClip","getClipX","getClipY","layerUnderDrag","getLayers","selfRect","hasVisible","HAS_SHADOW","SHADOW_RGBA","_clearHasShadowCache","_clearGetShadowRGBACache","Shape","hasShadow","_hasShadow","getShadowEnabled","getShadowOpacity","getShadowColor","getShadowOffsetX","getShadowOffsetY","_getShadowRGBA","rgba","shadowColor","hasFill","getFill","strokeEnabled","bufferHitCanvas","_useBufferCanvas","perfectDrawEnabled","getSelfRect","_centroid","fillAndStrokeWidth","fillAndStrokeHeight","shadowOffsetX","shadowOffsetY","preWidth","preHeight","shadowBlur","roundingOffset","bufferCanvas","bufferContext","drawFunc","sceneFunc","hitFunc","drawHitFromCache","alphaThreshold","hitImageData","hitData","rgbColorKey","hitWidth","hitHeight","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc","UNDERSCORE","EVENTS","eventsLength","addEvent","ctx","eventName","content","Stage","___init","_buildDOM","_bindContentEvents","_enableNestedTransforms","setContainer","getElementsByClassName","_resizeDOM","layers","getContainer","getPointerPosition","pointerPos","getContent","dataUrl","getIntersection","_setCanvasSize","_mouseover","_setPointerPosition","_mouseout","targetShape","_mousemove","_touchmove","movementX","movementY","cancelable","preventDefault","_mousedown","_touchstart","clickStartShape","_mouseup","_touchend","clickEndShape","fireDblClick","dblTimeout","justDragged","_contextmenu","tapStartShape","_wheel","contentPosition","_getContentPosition","touches","touch","clientX","clientY","getBoundingClientRect","innerHTML","_onContent","typesStr","types","BaseLayer","createPNGStream","getHitCanvas","_hitImageData","insertBefore","INTERSECTION_OFFSETS","INTERSECTION_OFFSETS_LEN","Layer","____init","intersectionOffset","spiralSearchDistance","continueSearch","_getIntersection","antialiased","_getImageData","p3","getClearBeforeDraw","display","enableHitGraph","setHitGraphEnabled","disableHitGraph","FastLayer","Group","performance","FRAF","RAF","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","requestAnimFrame","Animation","Anim","animIdCounter","frame","time","timeDiff","lastTime","lays","addLayer","isRunning","animations","stop","_addAnimation","_removeAnimation","_updateFrameObject","frameRate","animRunning","_handleAnimation","_runFrames","layersLen","layerHash","_animationLoop","batchDraw","batchAnim","blacklist","easing","onFinish","yoyo","colorAttrs","Tween","propFunc","begin","finish","_pos","_change","prevPos","_time","_position","_startTime","_finish","setTime","play","update","state","getTimer","onEnterFrame","seek","nodeId","Easings","Linear","tween","_tweenFunc","_addListeners","tweens","_addAttr","onReset","diff","tweenId","trueEnd","trueStart","closed","endRGBA","onPlay","onReverse","onPause","thisId","to","params","BackEaseIn","BackEaseOut","BackEaseInOut","ElasticEaseIn","asin","ElasticEaseOut","ElasticEaseInOut","BounceEaseOut","BounceEaseIn","BounceEaseInOut","EaseIn","EaseOut","EaseInOut","StrongEaseIn","StrongEaseOut","StrongEaseInOut","dirty","_drag","startPointerPos","_setDragPosition","_endDragBefore","dragEndNode","_endDragAfter","startDrag","ap","stopDrag","dbf","getDragBoundFunc","newNodePos","_lastPos","setDraggable","draggable","_dragChange","origRemove","_listenDrag","_dragCleanup","button","html","documentElement","Rect","_sceneFunc","cornerRadius","getCornerRadius","PIx2","Circle","getRadius","setRadius","Ellipse","rx","getRadiusX","ry","getRadiusY","Ring","getInnerRadius","getOuterRadius","outerRadius","setOuterRadius","Wedge","getClockwise","getAngleDeg","setAngleDeg","Arc","clockwise","_hitFunc","cropWidth","cropHeight","image","getImage","getCropWidth","getCropHeight","getCropX","getCropY","fromURL","crossOrigin","dummyContext","CONTEXT_2D","ATTR_CHANGE_LIST","attrChangeListLen","getDummyContext","partialText","fillLinearGradientColorStops","fillRadialGradientColorStops","_setTextData","getPadding","textHeight","getTextHeight","lineHeightPx","getLineHeight","textArr","textArrLen","align","getAlign","totalWidth","letterSpacing","getLetterSpacing","textDecoration","fontSize","_getContextFont","lineWidth","strokeStyle","spacesNumber","li","letter","_getTextSize","setText","getTextWidth","textWidth","metrics","getFontSize","font","getFontStyle","getFontFamily","getFontVariant","_addTextLine","trim","_getTextWidth","latterSpacing","lines","getText","fixedWidth","fixedHeight","maxHeightPx","currentHeightPx","getWrap","shouldWrap","wrapAtWord","shouldAddEllipsis","getEllipsis","additionalWidth","low","high","matchWidth","mid","substrWidth","wrapIndex","lastIndexOf","Line","tp","getPoints","getTension","getClosed","bezier","getBezier","getTensionPoints","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","middle","Sprite","_updated","updated","frameIndex","clearInterval","interval","_setInterval","getAnimation","ix4","getAnimations","offsets","frameOffsets","ix2","setInterval","_updateIndex","getFrameRate","getIndex","setIndex","Path","dataArray","parsePathData","getData","ca","dTheta","psi","fs","getLineLength","getPointOnLine","P1x","P1y","P2x","P2y","fromX","fromY","run","rise","ix","iy","pRise","pRun","getPointOnCubicBezier","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","getPointOnQuadraticBezier","QB1","QB2","QB3","getPointOnEllipticalArc","cosPsi","sinPsi","cs","cc","coords","cpx","cpy","re","jlen","parsed","isNaN","prevCmd","ctlPtx","ctlPty","startX","startY","convertEndpointToCenterParameterization","pathLength","calcLength","path","inc","psiDeg","xp","lambda","cxp","cyp","vMag","vRatio","vAngle","acos","TextPath","dummyCanvas","getKerning","getTextBaseline","glyphInfo","p0","textFullWidth","fullPathWidth","pathCmd","charArr","pIndex","currentT","getNextPathSegment","pathData","findSegmentToFitCharacter","glyphWidth","currLen","attempts","cumulativePathLength","needNewSegment","kern","midpoint","transposeX","transposeY","info","RegularPolygon","sides","Star","innerRadius","numPoints","Label","_sync","getTag","pointerDirection","pointerWidth","pointerHeight","tag","getPointerDirection","getPointerWidth","getPointerHeight","Tag","Arrow","PI2","radians","pointerLength","pointerAtBeginning","isDashEnabled","Transformer","RESIZERS_NAMES","warningShowed","_createElements","_handleMouseMove","_handleMouseUp","getNode","attachTo","setNode","_node","detach","_getNodeRect","__getNodeRect","MAX_SAFE_INTEGER","_createBack","_createAnchor","anchor","_handleMouseDown","tr","cdx","cdy","parentPos","center","cursor","anchorName","getCursor","back","rotateEnabled","rotateHandlerOffset","movingResizer","hypotenuse","_transforming","newHypotenuse","resizerNode","box","zeroPoint","newAbsPos","keepProportion","keepRatio","shiftKey","dAlpha","rot","newRotation","newAlpha","snaps","rotationSnaps","_fitNodeInto","absPos","_removeEvents","newAttrs","boundBoxFunc","getBoundBoxFunc","oldAttrs","_settings","pure","requestUpdate","forceUpdate","enabledHandlers","resizeEnabled","lineEnabled","isTransforming","stopTransform","stdOnEnd","ieOnEnd","onreadystatechange","readyState","opts","head","async","setAttributes","freeGlobal","__webpack_exports__","_root_freeSelf","_Symbol","_freeGlobal","Function","Symbol","_getRawTag_objectProto","_getRawTag_hasOwnProperty","_getRawTag_nativeObjectToString","_getRawTag_symToStringTag","toStringTag","_getRawTag","isOwn","unmasked","_objectToString_nativeObjectToString","_objectToString","_baseGetTag_nullTag","_baseGetTag_undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","_getPrototype","_overArg","getPrototypeOf","lodash_es_isObjectLike","isPlainObject_objectTag","isPlainObject_funcProto","isPlainObject_objectProto","isPlainObject_funcToString","isPlainObject_hasOwnProperty","isPlainObject_objectCtorString","proto","LARGE_ARRAY_SIZE","HASH_UNDEFINED","INFINITY","argsTag","funcTag","genTag","symbolTag","reIsHostCtor","reIsUint","freeSelf","root","arrayIncludes","array","fromIndex","predicate","fromRight","baseFindIndex","baseIsNaN","baseIndexOf","arrayIncludesWith","comparator","arrayMap","iteratee","arrayPush","cacheHas","has","overArg","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","IE_PROTO","funcToString","objectToString","reIsNative","getPrototype","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","nativeGetSymbols","getOwnPropertySymbols","nativeMax","Map","getNative","nativeCreate","Hash","entries","entry","ListCache","MapCache","SetCache","__data__","arrayLikeKeys","inherited","isArguments","baseTimes","skipIndexes","isIndex","assocIndexOf","other","baseIsNative","isFunction","isHostObject","toSource","baseKeysIn","nativeKeysIn","isProto","getAllKeysIn","keysFunc","symbolsFunc","baseGetAllKeys","keysIn","getSymbolsIn","getMapData","getValue","pop","hash","getSymbols","stubArray","isFlattenable","toKey","isObjectLike","isSymbol","isArrayLike","isArrayLikeObject","isLength","omit","baseFlatten","isStrict","basePickBy","basePick","includes","isCommon","valuesLength","outer","computed","valuesIndex","baseDifference","otherArgs","thisArg","block","newline","fences","noop","hr","heading","nptable","blockquote","table","lheading","paragraph","Lexer","tokens","links","marked","defaults","rules","normal","gfm","tables","_label","_title","edit","getRegex","bullet","item","source","_tag","merge","lex","token","loose","cap","bull","isordered","pedantic","lang","header","cells","ordered","smartLists","sanitize","pre","sanitizer","href","inline","autolink","link","reflink","nolink","strong","em","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","unescape","_","resolveUrl","base","baseUrls","_scheme","_email","_inside","_href","_backpedal","output","out","mangle","inLink","outputLink","codespan","smartypants","ch","escaped","highlight","langPrefix","quote","raw","headerPrefix","xhtml","listitem","tablerow","tablecell","flags","decodeURIComponent","baseUrl","originIndependentUrl","inlineText","tok","peek","parseText","row","cell","pending","done","silent","setOptions","parser","lexer","inlineLexer","50","100","200","300","400","500","600","700","800","900","a100","a200","a400","a700","deepPurple","lightBlue","lightGreen","amber","deepOrange","blueGrey","darkText","primary","secondary","disabled","dividers","lightText","darkIcons","active","inactive","lightIcons","seed","remainder","bytes","h1","h1b","c1","c2","k1","propIsEnumerable","assign","test1","getOwnPropertyNames","test2","test3","shouldUseNative","from","symbols","variable","pattern","inside","lookbehind","operator","punctuation","greedy","languages","bash","shebang","comment","function","keyword","boolean","shell","Prism","css","atrule","rule","important","rest","markup","style-attr","attr-name","attr-value","javascript","jsx","spread","script-punctuation","tagName","openedBraces","Token","hooks","language","_self","uniqueId","manual","disableWorkerMessageHandler","objId","visited","redef","before","grammar","newToken","DFS","highlightAll","highlightAllUnder","env","elements","querySelectorAll","highlightElement","textContent","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","tokenize","matchGrammar","strarr","startPos","oneshot","patterns","lookbehindLength","lastIndex","delNum","wrapped","all","callbacks","matchedStr","classes","attributes","close","currentScript","hasAttribute","prolog","doctype","cdata","namespace","entity","xml","mathml","svg","clike","class-name","function-variable","constant","template-string","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","ps1","psm1","bat","tex","getAttribute","extension","xhr","XMLHttpRequest","open","status","responseText","statusText","toolbar","registerButton","send","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","nextTick","argv","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","invariant","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","createStore_ActionTypes","INIT","createStore_createStore","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","isSubscribed","dispatch","action","isPlainObject","replaceReducer","nextReducer","es","outerSubscribe","observer","observeState","unsubscribe","combineReducers_getUndefinedStateErrorMessage","actionType","combineReducers_combineReducers","reducers","reducerKeys","finalReducers","finalReducerKeys","shapeAssertionError","combineReducers_assertReducerShape","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","applyMiddleware_extends","applyMiddleware_applyMiddleware","middlewares","createStore","chain","store","_dispatch","middlewareAPI","middleware","getImageDataFromCanvas","top_x","top_y","HTMLCanvasElement","processCanvasRGBA","processImageDataRGBA","processCanvasRGB","processImageDataRGB","blurAlphaChannel","HTMLImageElement","naturalWidth","naturalHeight","canvasRGBA","canvasRGB","imageDataRGBA","imageDataRGB","_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__","symbolObservablePonyfill","observable","trimLeft","trimRight","tinyCounter","mathRound","mathMin","mathMax","mathRandom","tinycolor","named","matchers","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","convertToPercentage","q","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","pad2","rgbaToArgbHex","convertDecimalToHex","desaturate","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","complement","triad","tetrad","splitcomplement","analogous","slices","part","monochromatic","toHsv","modification","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","setAlpha","toHsvString","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","_applyModification","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","isReadable","wcag2","wcag2Parms","parms","validateWCAG2Parms","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","burntsienna","flipped","flip","isOnePointZero","processPercent","isPercentage","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","aa","ba","da","FontFace","cssText","createTextNode","lastChild","z","rel","media","A","B","C","D","E","F","G","I","J","H","ga","L","K","M","aria-hidden","N","P","Q","fonts","load","then","race","R","S","T","la","U","offsetWidth","serif","V","ma","W","X","na","oa","qa","xa","ra","sa","ka","projectId","api","fontfamily","fontStyle","fontWeight","urls","families","testStrings","za","latin","latin-ext","cyrillic","greek","khmer","Hanuman","Aa","thin","extralight","extra-light","ultralight","ultra-light","light","regular","book","medium","semi-bold","semibold","demi-bold","demibold","bold","extra-bold","extrabold","ultra-bold","ultrabold","heavy","Ba","italic","Ca","Ea","Fa","Arimo","Cousine","Tinos","Ga","Ha","va","Da","encodeURIComponent","wa","Typekit","__webfontfontdeckmodule__","weight","hostname","ea","Y","custom","fontdeck","monotype","typekit","google","Z","eval","originalModule","webpackPolyfill","deprecate","paths","payload","_constants__WEBPACK_IMPORTED_MODULE_0__","GoogleFonts","_fonts__WEBPACK_IMPORTED_MODULE_1__","App","react__WEBPACK_IMPORTED_MODULE_0___default","_Loader__WEBPACK_IMPORTED_MODULE_4__","_Canvas__WEBPACK_IMPORTED_MODULE_2__","_Form__WEBPACK_IMPORTED_MODULE_3__","_App__WEBPACK_IMPORTED_MODULE_0__","Component","handleDownload","downloadButton","handleLoad","setState","loaded","_assets__WEBPACK_IMPORTED_MODULE_5__","render","fontFamily","settings","backgroundColor","react_konva__WEBPACK_IMPORTED_MODULE_1__","ref","onChange","log","_dr_kobros_react_webfont_loader__WEBPACK_IMPORTED_MODULE_2___default","onStatus","Fragment","download","react_uwp__WEBPACK_IMPORTED_MODULE_3__","icon","iconPosition","onClick","[object Object]","mapStateToProps","mainReducer","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_2__","CanvasContainer","react_redux__WEBPACK_IMPORTED_MODULE_0__","_Canvas__WEBPACK_IMPORTED_MODULE_1__","Color","_constants__WEBPACK_IMPORTED_MODULE_4__","react_uwp__WEBPACK_IMPORTED_MODULE_2__","checked","defaultToggled","react_uwp_Separator__WEBPACK_IMPORTED_MODULE_3___default","react_color__WEBPACK_IMPORTED_MODULE_1__","disableAlpha","fontList","_assets__WEBPACK_IMPORTED_MODULE_2__","Font","handleChange","react_uwp__WEBPACK_IMPORTED_MODULE_1__","itemHeight","itemWidth","onChangeValue","_constants__WEBPACK_IMPORTED_MODULE_3__","Form","_Text__WEBPACK_IMPORTED_MODULE_1__","_Slider__WEBPACK_IMPORTED_MODULE_2__","_Font__WEBPACK_IMPORTED_MODULE_3__","_Color__WEBPACK_IMPORTED_MODULE_4__","SliderComponent","_constants__WEBPACK_IMPORTED_MODULE_2__","FormContainer","_Form__WEBPACK_IMPORTED_MODULE_1__","Preloader","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1___default","loadReducer","LoaderContainer","_Loader__WEBPACK_IMPORTED_MODULE_1__","_store__WEBPACK_IMPORTED_MODULE_5__","Root","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_uwp_Theme__WEBPACK_IMPORTED_MODULE_2__","theme","themeName","accent","useFluentDesign","_App__WEBPACK_IMPORTED_MODULE_4__","react_hot_loader__WEBPACK_IMPORTED_MODULE_3__","UPDATE_TEXT","UPDATE_SIZE","UPDATE_COLOR","UPDATE_FONT","BACKGROUND","BACKGROUND_COLOR","LOAD","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_components_Root__WEBPACK_IMPORTED_MODULE_2__","rootReducer","redux__WEBPACK_IMPORTED_MODULE_0__","_loadReducer__WEBPACK_IMPORTED_MODULE_2__","_mainReducer__WEBPACK_IMPORTED_MODULE_1__","initialState","_assets__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","_extends","configureStore","_reducers__WEBPACK_IMPORTED_MODULE_1__","__REDUX_DEVTOOLS_EXTENSION__","calculateWidth","changeFavicon"],"mappings":"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","file":"app.bundle.8ebfc28a6493d78e3a22.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)os/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , osname: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , osname: 'Chrome OS'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , osname: 'Sailfish OS'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n        result.osname = 'Firefox OS'\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , osname: 'BlackBerry OS'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , osname: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , osname: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , osname: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t\n      result.osname = 'Android'\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n      result.osname = 'iOS'\n    } else if (mac) {\n      result.mac = t\n      result.osname = 'macOS'\n    } else if (xbox) {\n      result.xbox = t\n      result.osname = 'Xbox'\n    } else if (windows) {\n      result.windows = t\n      result.osname = 'Windows'\n    } else if (linux) {\n      result.linux = t\n      result.osname = 'Linux'\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n  bowser.detect = detect;\n  return bowser\n});\n","\r\nmodule.exports = function chain(){\r\n  var len = arguments.length\r\n  var args = [];\r\n\r\n  for (var i = 0; i < len; i++)\r\n    args[i] = arguments[i]\r\n\r\n  args = args.filter(function(fn){ return fn != null })\r\n\r\n  if (args.length === 0) return undefined\r\n  if (args.length === 1) return args[0]\r\n\r\n  return args.reduce(function(current, next){\r\n    return function chainedFunction() {\r\n      current.apply(this, arguments);\r\n      next.apply(this, arguments);\r\n    };\r\n  })\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hyphenateProperty;\n\nvar _hyphenateStyleName = require('hyphenate-style-name');\n\nvar _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction hyphenateProperty(property) {\n  return (0, _hyphenateStyleName2.default)(property);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPrefixedValue;\nvar regex = /-webkit-|-moz-|-ms-/;\n\nfunction isPrefixedValue(value) {\n  return typeof value === 'string' && regex.test(value);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = require('./hasClass');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar transform = 'transform';\nvar prefix = void 0,\n    transitionEnd = void 0,\n    animationEnd = void 0;\nvar transitionProperty = void 0,\n    transitionDuration = void 0,\n    transitionTiming = void 0,\n    transitionDelay = void 0;\nvar animationName = void 0,\n    animationDuration = void 0,\n    animationTiming = void 0,\n    animationDelay = void 0;\n\nif (_inDOM2.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n\n\n  exports.transform = transform = prefix + '-' + transform;\n  exports.transitionProperty = transitionProperty = prefix + '-transition-property';\n  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';\n  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';\n  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';\n\n  exports.animationName = animationName = prefix + '-animation-name';\n  exports.animationDuration = animationDuration = prefix + '-animation-duration';\n  exports.animationTiming = animationTiming = prefix + '-animation-delay';\n  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';\n}\n\nexports.transform = transform;\nexports.transitionProperty = transitionProperty;\nexports.transitionTiming = transitionTiming;\nexports.transitionDelay = transitionDelay;\nexports.transitionDuration = transitionDuration;\nexports.transitionEnd = transitionEnd;\nexports.animationName = animationName;\nexports.animationDuration = animationDuration;\nexports.animationTiming = animationTiming;\nexports.animationDelay = animationDelay;\nexports.animationEnd = animationEnd;\nexports.default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\n\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n\n  var vendorMap = {\n    O: function O(e) {\n      return 'o' + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return 'webkit' + e;\n    },\n    ms: function ms(e) {\n      return 'MS' + e;\n    }\n  };\n\n  var vendors = Object.keys(vendorMap);\n\n  var transitionEnd = void 0,\n      animationEnd = void 0;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + 'TransitionProperty' in style) {\n      prefix = '-' + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n\n  style = null;\n\n  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('./inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf = void 0;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM2.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n\n/* https://github.com/component/raf */\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\nexports.default = compatRaf;\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.fetchJsonp = mod.exports;\n  }\n})(this, function (exports, module) {\n  'use strict';\n\n  var defaultOptions = {\n    timeout: 5000,\n    jsonpCallback: 'callback',\n    jsonpCallbackFunction: null\n  };\n\n  function generateCallbackFunction() {\n    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n  }\n\n  function clearFunction(functionName) {\n    // IE8 throws an exception when you try to delete a property on window\n    // http://stackoverflow.com/a/1824228/751089\n    try {\n      delete window[functionName];\n    } catch (e) {\n      window[functionName] = undefined;\n    }\n  }\n\n  function removeScript(scriptId) {\n    var script = document.getElementById(scriptId);\n    if (script) {\n      document.getElementsByTagName('head')[0].removeChild(script);\n    }\n  }\n\n  function fetchJsonp(_url) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    // to avoid param reassign\n    var url = _url;\n    var timeout = options.timeout || defaultOptions.timeout;\n    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;\n\n    var timeoutId = undefined;\n\n    return new Promise(function (resolve, reject) {\n      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();\n      var scriptId = jsonpCallback + '_' + callbackFunction;\n\n      window[callbackFunction] = function (response) {\n        resolve({\n          ok: true,\n          // keep consistent with fetch API\n          json: function json() {\n            return Promise.resolve(response);\n          }\n        });\n\n        if (timeoutId) clearTimeout(timeoutId);\n\n        removeScript(scriptId);\n\n        clearFunction(callbackFunction);\n      };\n\n      // Check if the user set their own params, and if not add a ? to start a list of params\n      url += url.indexOf('?') === -1 ? '?' : '&';\n\n      var jsonpScript = document.createElement('script');\n      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);\n      if (options.charset) {\n        jsonpScript.setAttribute('charset', options.charset);\n      }\n      jsonpScript.id = scriptId;\n      document.getElementsByTagName('head')[0].appendChild(jsonpScript);\n\n      timeoutId = setTimeout(function () {\n        reject(new Error('JSONP request to ' + _url + ' timed out'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        window[callbackFunction] = function () {\n          clearFunction(callbackFunction);\n        };\n      }, timeout);\n\n      // Caught if got 404/500\n      jsonpScript.onerror = function () {\n        reject(new Error('JSONP request to ' + _url + ' failed'));\n\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    });\n  }\n\n  // export as global function\n  /*\n  let local;\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n  local.fetchJsonp = fetchJsonp;\n  */\n\n  module.exports = fetchJsonp;\n});","'use strict';\n\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction hyphenateStyleName(string) {\n    return string in cache\n    ? cache[string]\n    : cache[string] = string\n      .replace(uppercasePattern, '-$&')\n      .toLowerCase()\n      .replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = createPrefixer;\n\nvar _getBrowserInformation = require('../utils/getBrowserInformation');\n\nvar _getBrowserInformation2 = _interopRequireDefault(_getBrowserInformation);\n\nvar _getPrefixedKeyframes = require('../utils/getPrefixedKeyframes');\n\nvar _getPrefixedKeyframes2 = _interopRequireDefault(_getPrefixedKeyframes);\n\nvar _capitalizeString = require('../utils/capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nvar _addNewValuesOnly = require('../utils/addNewValuesOnly');\n\nvar _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);\n\nvar _isObject = require('../utils/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _prefixValue = require('../utils/prefixValue');\n\nvar _prefixValue2 = _interopRequireDefault(_prefixValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction createPrefixer(_ref) {\n  var prefixMap = _ref.prefixMap,\n      plugins = _ref.plugins;\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (style) {\n    return style;\n  };\n\n  return function () {\n    /**\n    * Instantiante a new prefixer\n    * @param {string} userAgent - userAgent to gather prefix information according to caniuse.com\n    * @param {string} keepUnprefixed - keeps unprefixed properties and values\n    */\n    function Prefixer() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, Prefixer);\n\n      var defaultUserAgent = typeof navigator !== 'undefined' ? navigator.userAgent : undefined;\n\n      this._userAgent = options.userAgent || defaultUserAgent;\n      this._keepUnprefixed = options.keepUnprefixed || false;\n\n      if (this._userAgent) {\n        this._browserInfo = (0, _getBrowserInformation2.default)(this._userAgent);\n      }\n\n      // Checks if the userAgent was resolved correctly\n      if (this._browserInfo && this._browserInfo.cssPrefix) {\n        this.prefixedKeyframes = (0, _getPrefixedKeyframes2.default)(this._browserInfo.browserName, this._browserInfo.browserVersion, this._browserInfo.cssPrefix);\n      } else {\n        this._useFallback = true;\n        return false;\n      }\n\n      var prefixData = this._browserInfo.browserName && prefixMap[this._browserInfo.browserName];\n      if (prefixData) {\n        this._requiresPrefix = {};\n\n        for (var property in prefixData) {\n          if (prefixData[property] >= this._browserInfo.browserVersion) {\n            this._requiresPrefix[property] = true;\n          }\n        }\n\n        this._hasPropsRequiringPrefix = Object.keys(this._requiresPrefix).length > 0;\n      } else {\n        this._useFallback = true;\n      }\n\n      this._metaData = {\n        browserVersion: this._browserInfo.browserVersion,\n        browserName: this._browserInfo.browserName,\n        cssPrefix: this._browserInfo.cssPrefix,\n        jsPrefix: this._browserInfo.jsPrefix,\n        keepUnprefixed: this._keepUnprefixed,\n        requiresPrefix: this._requiresPrefix\n      };\n    }\n\n    _createClass(Prefixer, [{\n      key: 'prefix',\n      value: function prefix(style) {\n        // use static prefixer as fallback if userAgent can not be resolved\n        if (this._useFallback) {\n          return fallback(style);\n        }\n\n        // only add prefixes if needed\n        if (!this._hasPropsRequiringPrefix) {\n          return style;\n        }\n\n        return this._prefixStyle(style);\n      }\n    }, {\n      key: '_prefixStyle',\n      value: function _prefixStyle(style) {\n        for (var property in style) {\n          var value = style[property];\n\n          // handle nested objects\n          if ((0, _isObject2.default)(value)) {\n            style[property] = this.prefix(value);\n            // handle array values\n          } else if (Array.isArray(value)) {\n            var combinedValue = [];\n\n            for (var i = 0, len = value.length; i < len; ++i) {\n              var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, this._metaData);\n              (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);\n            }\n\n            // only modify the value if it was touched\n            // by any plugin to prevent unnecessary mutations\n            if (combinedValue.length > 0) {\n              style[property] = combinedValue;\n            }\n          } else {\n            var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, this._metaData);\n\n            // only modify the value if it was touched\n            // by any plugin to prevent unnecessary mutations\n            if (_processedValue) {\n              style[property] = _processedValue;\n            }\n\n            // add prefixes to properties\n            if (this._requiresPrefix.hasOwnProperty(property)) {\n              style[this._browserInfo.jsPrefix + (0, _capitalizeString2.default)(property)] = value;\n              if (!this._keepUnprefixed) {\n                delete style[property];\n              }\n            }\n          }\n        }\n\n        return style;\n      }\n\n      /**\n      * Returns a prefixed version of the style object using all vendor prefixes\n      * @param {Object} styles - Style object that gets prefixed properties added\n      * @returns {Object} - Style object with prefixed properties and values\n      */\n\n    }], [{\n      key: 'prefixAll',\n      value: function prefixAll(styles) {\n        return fallback(styles);\n      }\n    }]);\n\n    return Prefixer;\n  }();\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  plugins: [],\n  prefixMap: { \"chrome\": { \"appearance\": 64, \"userSelect\": 53, \"textEmphasisPosition\": 64, \"textEmphasis\": 64, \"textEmphasisStyle\": 64, \"textEmphasisColor\": 64, \"boxDecorationBreak\": 64, \"clipPath\": 54, \"maskImage\": 64, \"maskMode\": 64, \"maskRepeat\": 64, \"maskPosition\": 64, \"maskClip\": 64, \"maskOrigin\": 64, \"maskSize\": 64, \"maskComposite\": 64, \"mask\": 64, \"maskBorderSource\": 64, \"maskBorderMode\": 64, \"maskBorderSlice\": 64, \"maskBorderWidth\": 64, \"maskBorderOutset\": 64, \"maskBorderRepeat\": 64, \"maskBorder\": 64, \"maskType\": 64, \"textDecorationStyle\": 56, \"textDecorationSkip\": 56, \"textDecorationLine\": 56, \"textDecorationColor\": 56, \"filter\": 52, \"fontFeatureSettings\": 47, \"breakAfter\": 49, \"breakBefore\": 49, \"breakInside\": 49, \"columnCount\": 49, \"columnFill\": 49, \"columnGap\": 49, \"columnRule\": 49, \"columnRuleColor\": 49, \"columnRuleStyle\": 49, \"columnRuleWidth\": 49, \"columns\": 49, \"columnSpan\": 49, \"columnWidth\": 49, \"writingMode\": 47 }, \"safari\": { \"flex\": 8, \"flexBasis\": 8, \"flexDirection\": 8, \"flexGrow\": 8, \"flexFlow\": 8, \"flexShrink\": 8, \"flexWrap\": 8, \"alignContent\": 8, \"alignItems\": 8, \"alignSelf\": 8, \"justifyContent\": 8, \"order\": 8, \"transform\": 8, \"transformOrigin\": 8, \"transformOriginX\": 8, \"transformOriginY\": 8, \"backfaceVisibility\": 8, \"perspective\": 8, \"perspectiveOrigin\": 8, \"transformStyle\": 8, \"transformOriginZ\": 8, \"animation\": 8, \"animationDelay\": 8, \"animationDirection\": 8, \"animationFillMode\": 8, \"animationDuration\": 8, \"animationIterationCount\": 8, \"animationName\": 8, \"animationPlayState\": 8, \"animationTimingFunction\": 8, \"appearance\": 11, \"userSelect\": 11, \"backdropFilter\": 11, \"fontKerning\": 9, \"scrollSnapType\": 10.1, \"scrollSnapPointsX\": 10.1, \"scrollSnapPointsY\": 10.1, \"scrollSnapDestination\": 10.1, \"scrollSnapCoordinate\": 10.1, \"boxDecorationBreak\": 11, \"clipPath\": 11, \"maskImage\": 11, \"maskMode\": 11, \"maskRepeat\": 11, \"maskPosition\": 11, \"maskClip\": 11, \"maskOrigin\": 11, \"maskSize\": 11, \"maskComposite\": 11, \"mask\": 11, \"maskBorderSource\": 11, \"maskBorderMode\": 11, \"maskBorderSlice\": 11, \"maskBorderWidth\": 11, \"maskBorderOutset\": 11, \"maskBorderRepeat\": 11, \"maskBorder\": 11, \"maskType\": 11, \"textDecorationStyle\": 11, \"textDecorationSkip\": 11, \"textDecorationLine\": 11, \"textDecorationColor\": 11, \"shapeImageThreshold\": 10, \"shapeImageMargin\": 10, \"shapeImageOutside\": 10, \"filter\": 9, \"hyphens\": 11, \"flowInto\": 11, \"flowFrom\": 11, \"breakBefore\": 8, \"breakAfter\": 8, \"breakInside\": 8, \"regionFragment\": 11, \"columnCount\": 8, \"columnFill\": 8, \"columnGap\": 8, \"columnRule\": 8, \"columnRuleColor\": 8, \"columnRuleStyle\": 8, \"columnRuleWidth\": 8, \"columns\": 8, \"columnSpan\": 8, \"columnWidth\": 8, \"writingMode\": 11 }, \"firefox\": { \"appearance\": 58, \"userSelect\": 58, \"textAlignLast\": 48, \"tabSize\": 58, \"hyphens\": 42, \"breakAfter\": 51, \"breakBefore\": 51, \"breakInside\": 51, \"columnCount\": 51, \"columnFill\": 51, \"columnGap\": 51, \"columnRule\": 51, \"columnRuleColor\": 51, \"columnRuleStyle\": 51, \"columnRuleWidth\": 51, \"columns\": 51, \"columnSpan\": 51, \"columnWidth\": 51 }, \"opera\": { \"flex\": 16, \"flexBasis\": 16, \"flexDirection\": 16, \"flexGrow\": 16, \"flexFlow\": 16, \"flexShrink\": 16, \"flexWrap\": 16, \"alignContent\": 16, \"alignItems\": 16, \"alignSelf\": 16, \"justifyContent\": 16, \"order\": 16, \"transform\": 22, \"transformOrigin\": 22, \"transformOriginX\": 22, \"transformOriginY\": 22, \"backfaceVisibility\": 22, \"perspective\": 22, \"perspectiveOrigin\": 22, \"transformStyle\": 22, \"transformOriginZ\": 22, \"animation\": 29, \"animationDelay\": 29, \"animationDirection\": 29, \"animationFillMode\": 29, \"animationDuration\": 29, \"animationIterationCount\": 29, \"animationName\": 29, \"animationPlayState\": 29, \"animationTimingFunction\": 29, \"appearance\": 49, \"userSelect\": 40, \"fontKerning\": 19, \"textEmphasisPosition\": 49, \"textEmphasis\": 49, \"textEmphasisStyle\": 49, \"textEmphasisColor\": 49, \"boxDecorationBreak\": 49, \"clipPath\": 41, \"maskImage\": 49, \"maskMode\": 49, \"maskRepeat\": 49, \"maskPosition\": 49, \"maskClip\": 49, \"maskOrigin\": 49, \"maskSize\": 49, \"maskComposite\": 49, \"mask\": 49, \"maskBorderSource\": 49, \"maskBorderMode\": 49, \"maskBorderSlice\": 49, \"maskBorderWidth\": 49, \"maskBorderOutset\": 49, \"maskBorderRepeat\": 49, \"maskBorder\": 49, \"maskType\": 49, \"textDecorationStyle\": 43, \"textDecorationSkip\": 43, \"textDecorationLine\": 43, \"textDecorationColor\": 43, \"filter\": 39, \"fontFeatureSettings\": 34, \"breakAfter\": 36, \"breakBefore\": 36, \"breakInside\": 36, \"columnCount\": 36, \"columnFill\": 36, \"columnGap\": 36, \"columnRule\": 36, \"columnRuleColor\": 36, \"columnRuleStyle\": 36, \"columnRuleWidth\": 36, \"columns\": 36, \"columnSpan\": 36, \"columnWidth\": 36, \"writingMode\": 34 }, \"ie\": { \"userSelect\": 11, \"wrapFlow\": 11, \"wrapThrough\": 11, \"wrapMargin\": 11, \"scrollSnapType\": 11, \"scrollSnapPointsX\": 11, \"scrollSnapPointsY\": 11, \"scrollSnapDestination\": 11, \"scrollSnapCoordinate\": 11, \"hyphens\": 11, \"flowInto\": 11, \"flowFrom\": 11, \"breakBefore\": 11, \"breakAfter\": 11, \"breakInside\": 11, \"regionFragment\": 11, \"gridTemplateColumns\": 11, \"gridTemplateRows\": 11, \"gridTemplateAreas\": 11, \"gridTemplate\": 11, \"gridAutoColumns\": 11, \"gridAutoRows\": 11, \"gridAutoFlow\": 11, \"grid\": 11, \"gridRowStart\": 11, \"gridColumnStart\": 11, \"gridRowEnd\": 11, \"gridRow\": 11, \"gridColumn\": 11, \"gridColumnEnd\": 11, \"gridColumnGap\": 11, \"gridRowGap\": 11, \"gridArea\": 11, \"gridGap\": 11, \"textSizeAdjust\": 11, \"writingMode\": 11 }, \"edge\": { \"userSelect\": 16, \"wrapFlow\": 16, \"wrapThrough\": 16, \"wrapMargin\": 16, \"scrollSnapType\": 16, \"scrollSnapPointsX\": 16, \"scrollSnapPointsY\": 16, \"scrollSnapDestination\": 16, \"scrollSnapCoordinate\": 16, \"hyphens\": 16, \"flowInto\": 16, \"flowFrom\": 16, \"breakBefore\": 16, \"breakAfter\": 16, \"breakInside\": 16, \"regionFragment\": 16, \"gridTemplateColumns\": 15, \"gridTemplateRows\": 15, \"gridTemplateAreas\": 15, \"gridTemplate\": 15, \"gridAutoColumns\": 15, \"gridAutoRows\": 15, \"gridAutoFlow\": 15, \"grid\": 15, \"gridRowStart\": 15, \"gridColumnStart\": 15, \"gridRowEnd\": 15, \"gridRow\": 15, \"gridColumn\": 15, \"gridColumnEnd\": 15, \"gridColumnGap\": 15, \"gridRowGap\": 15, \"gridArea\": 15, \"gridGap\": 15 }, \"ios_saf\": { \"flex\": 8.1, \"flexBasis\": 8.1, \"flexDirection\": 8.1, \"flexGrow\": 8.1, \"flexFlow\": 8.1, \"flexShrink\": 8.1, \"flexWrap\": 8.1, \"alignContent\": 8.1, \"alignItems\": 8.1, \"alignSelf\": 8.1, \"justifyContent\": 8.1, \"order\": 8.1, \"transform\": 8.1, \"transformOrigin\": 8.1, \"transformOriginX\": 8.1, \"transformOriginY\": 8.1, \"backfaceVisibility\": 8.1, \"perspective\": 8.1, \"perspectiveOrigin\": 8.1, \"transformStyle\": 8.1, \"transformOriginZ\": 8.1, \"animation\": 8.1, \"animationDelay\": 8.1, \"animationDirection\": 8.1, \"animationFillMode\": 8.1, \"animationDuration\": 8.1, \"animationIterationCount\": 8.1, \"animationName\": 8.1, \"animationPlayState\": 8.1, \"animationTimingFunction\": 8.1, \"appearance\": 11, \"userSelect\": 11, \"backdropFilter\": 11, \"fontKerning\": 11, \"scrollSnapType\": 11, \"scrollSnapPointsX\": 11, \"scrollSnapPointsY\": 11, \"scrollSnapDestination\": 11, \"scrollSnapCoordinate\": 11, \"boxDecorationBreak\": 11, \"clipPath\": 11, \"maskImage\": 11, \"maskMode\": 11, \"maskRepeat\": 11, \"maskPosition\": 11, \"maskClip\": 11, \"maskOrigin\": 11, \"maskSize\": 11, \"maskComposite\": 11, \"mask\": 11, \"maskBorderSource\": 11, \"maskBorderMode\": 11, \"maskBorderSlice\": 11, \"maskBorderWidth\": 11, \"maskBorderOutset\": 11, \"maskBorderRepeat\": 11, \"maskBorder\": 11, \"maskType\": 11, \"textSizeAdjust\": 11, \"textDecorationStyle\": 11, \"textDecorationSkip\": 11, \"textDecorationLine\": 11, \"textDecorationColor\": 11, \"shapeImageThreshold\": 10, \"shapeImageMargin\": 10, \"shapeImageOutside\": 10, \"filter\": 9, \"hyphens\": 11, \"flowInto\": 11, \"flowFrom\": 11, \"breakBefore\": 8.1, \"breakAfter\": 8.1, \"breakInside\": 8.1, \"regionFragment\": 11, \"columnCount\": 8.1, \"columnFill\": 8.1, \"columnGap\": 8.1, \"columnRule\": 8.1, \"columnRuleColor\": 8.1, \"columnRuleStyle\": 8.1, \"columnRuleWidth\": 8.1, \"columns\": 8.1, \"columnSpan\": 8.1, \"columnWidth\": 8.1, \"writingMode\": 11 }, \"android\": { \"borderImage\": 4.2, \"borderImageOutset\": 4.2, \"borderImageRepeat\": 4.2, \"borderImageSlice\": 4.2, \"borderImageSource\": 4.2, \"borderImageWidth\": 4.2, \"flex\": 4.2, \"flexBasis\": 4.2, \"flexDirection\": 4.2, \"flexGrow\": 4.2, \"flexFlow\": 4.2, \"flexShrink\": 4.2, \"flexWrap\": 4.2, \"alignContent\": 4.2, \"alignItems\": 4.2, \"alignSelf\": 4.2, \"justifyContent\": 4.2, \"order\": 4.2, \"transition\": 4.2, \"transitionDelay\": 4.2, \"transitionDuration\": 4.2, \"transitionProperty\": 4.2, \"transitionTimingFunction\": 4.2, \"transform\": 4.4, \"transformOrigin\": 4.4, \"transformOriginX\": 4.4, \"transformOriginY\": 4.4, \"backfaceVisibility\": 4.4, \"perspective\": 4.4, \"perspectiveOrigin\": 4.4, \"transformStyle\": 4.4, \"transformOriginZ\": 4.4, \"animation\": 4.4, \"animationDelay\": 4.4, \"animationDirection\": 4.4, \"animationFillMode\": 4.4, \"animationDuration\": 4.4, \"animationIterationCount\": 4.4, \"animationName\": 4.4, \"animationPlayState\": 4.4, \"animationTimingFunction\": 4.4, \"appearance\": 56, \"userSelect\": 4.4, \"fontKerning\": 4.4, \"textEmphasisPosition\": 56, \"textEmphasis\": 56, \"textEmphasisStyle\": 56, \"textEmphasisColor\": 56, \"boxDecorationBreak\": 56, \"clipPath\": 4.4, \"maskImage\": 56, \"maskMode\": 56, \"maskRepeat\": 56, \"maskPosition\": 56, \"maskClip\": 56, \"maskOrigin\": 56, \"maskSize\": 56, \"maskComposite\": 56, \"mask\": 56, \"maskBorderSource\": 56, \"maskBorderMode\": 56, \"maskBorderSlice\": 56, \"maskBorderWidth\": 56, \"maskBorderOutset\": 56, \"maskBorderRepeat\": 56, \"maskBorder\": 56, \"maskType\": 56, \"filter\": 4.4, \"fontFeatureSettings\": 4.4, \"breakAfter\": 4.4, \"breakBefore\": 4.4, \"breakInside\": 4.4, \"columnCount\": 4.4, \"columnFill\": 4.4, \"columnGap\": 4.4, \"columnRule\": 4.4, \"columnRuleColor\": 4.4, \"columnRuleStyle\": 4.4, \"columnRuleWidth\": 4.4, \"columns\": 4.4, \"columnSpan\": 4.4, \"columnWidth\": 4.4, \"writingMode\": 4.4 }, \"and_chr\": { \"appearance\": 61, \"textEmphasisPosition\": 61, \"textEmphasis\": 61, \"textEmphasisStyle\": 61, \"textEmphasisColor\": 61, \"boxDecorationBreak\": 61, \"maskImage\": 61, \"maskMode\": 61, \"maskRepeat\": 61, \"maskPosition\": 61, \"maskClip\": 61, \"maskOrigin\": 61, \"maskSize\": 61, \"maskComposite\": 61, \"mask\": 61, \"maskBorderSource\": 61, \"maskBorderMode\": 61, \"maskBorderSlice\": 61, \"maskBorderWidth\": 61, \"maskBorderOutset\": 61, \"maskBorderRepeat\": 61, \"maskBorder\": 61, \"maskType\": 61 }, \"and_uc\": { \"flex\": 11.4, \"flexBasis\": 11.4, \"flexDirection\": 11.4, \"flexGrow\": 11.4, \"flexFlow\": 11.4, \"flexShrink\": 11.4, \"flexWrap\": 11.4, \"alignContent\": 11.4, \"alignItems\": 11.4, \"alignSelf\": 11.4, \"justifyContent\": 11.4, \"order\": 11.4, \"transform\": 11.4, \"transformOrigin\": 11.4, \"transformOriginX\": 11.4, \"transformOriginY\": 11.4, \"backfaceVisibility\": 11.4, \"perspective\": 11.4, \"perspectiveOrigin\": 11.4, \"transformStyle\": 11.4, \"transformOriginZ\": 11.4, \"animation\": 11.4, \"animationDelay\": 11.4, \"animationDirection\": 11.4, \"animationFillMode\": 11.4, \"animationDuration\": 11.4, \"animationIterationCount\": 11.4, \"animationName\": 11.4, \"animationPlayState\": 11.4, \"animationTimingFunction\": 11.4, \"appearance\": 11.4, \"userSelect\": 11.4, \"textEmphasisPosition\": 11.4, \"textEmphasis\": 11.4, \"textEmphasisStyle\": 11.4, \"textEmphasisColor\": 11.4, \"clipPath\": 11.4, \"maskImage\": 11.4, \"maskMode\": 11.4, \"maskRepeat\": 11.4, \"maskPosition\": 11.4, \"maskClip\": 11.4, \"maskOrigin\": 11.4, \"maskSize\": 11.4, \"maskComposite\": 11.4, \"mask\": 11.4, \"maskBorderSource\": 11.4, \"maskBorderMode\": 11.4, \"maskBorderSlice\": 11.4, \"maskBorderWidth\": 11.4, \"maskBorderOutset\": 11.4, \"maskBorderRepeat\": 11.4, \"maskBorder\": 11.4, \"maskType\": 11.4, \"textSizeAdjust\": 11.4, \"filter\": 11.4, \"hyphens\": 11.4, \"fontFeatureSettings\": 11.4, \"breakAfter\": 11.4, \"breakBefore\": 11.4, \"breakInside\": 11.4, \"columnCount\": 11.4, \"columnFill\": 11.4, \"columnGap\": 11.4, \"columnRule\": 11.4, \"columnRuleColor\": 11.4, \"columnRuleStyle\": 11.4, \"columnRuleWidth\": 11.4, \"columns\": 11.4, \"columnSpan\": 11.4, \"columnWidth\": 11.4, \"writingMode\": 11.4 }, \"op_mini\": {} }\n};\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createPrefixer = require('./createPrefixer');\n\nvar _createPrefixer2 = _interopRequireDefault(_createPrefixer);\n\nvar _cursor = require('./plugins/cursor');\n\nvar _cursor2 = _interopRequireDefault(_cursor);\n\nvar _crossFade = require('./plugins/crossFade');\n\nvar _crossFade2 = _interopRequireDefault(_crossFade);\n\nvar _filter = require('./plugins/filter');\n\nvar _filter2 = _interopRequireDefault(_filter);\n\nvar _flex = require('./plugins/flex');\n\nvar _flex2 = _interopRequireDefault(_flex);\n\nvar _flexboxOld = require('./plugins/flexboxOld');\n\nvar _flexboxOld2 = _interopRequireDefault(_flexboxOld);\n\nvar _gradient = require('./plugins/gradient');\n\nvar _gradient2 = _interopRequireDefault(_gradient);\n\nvar _imageSet = require('./plugins/imageSet');\n\nvar _imageSet2 = _interopRequireDefault(_imageSet);\n\nvar _position = require('./plugins/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _sizing = require('./plugins/sizing');\n\nvar _sizing2 = _interopRequireDefault(_sizing);\n\nvar _transition = require('./plugins/transition');\n\nvar _transition2 = _interopRequireDefault(_transition);\n\nvar _static = require('../static');\n\nvar _static2 = _interopRequireDefault(_static);\n\nvar _dynamicData = require('./dynamicData');\n\nvar _dynamicData2 = _interopRequireDefault(_dynamicData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plugins = [_crossFade2.default, _cursor2.default, _filter2.default, _flexboxOld2.default, _gradient2.default, _imageSet2.default, _position2.default, _sizing2.default, _transition2.default, _flex2.default];\n\nvar Prefixer = (0, _createPrefixer2.default)({\n  prefixMap: _dynamicData2.default.prefixMap,\n  plugins: plugins\n}, _static2.default);\nexports.default = Prefixer;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = crossFade;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction crossFade(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      browserVersion = _ref.browserVersion,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  if (typeof value === 'string' && value.indexOf('cross-fade(') > -1 && (browserName === 'chrome' || browserName === 'opera' || browserName === 'and_chr' || (browserName === 'ios_saf' || browserName === 'safari') && browserVersion < 10)) {\n    return (0, _getPrefixedValue2.default)(value.replace(/cross-fade\\(/g, cssPrefix + 'cross-fade('), value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cursor;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar grabValues = {\n  grab: true,\n  grabbing: true\n};\n\n\nvar zoomValues = {\n  'zoom-in': true,\n  'zoom-out': true\n};\n\nfunction cursor(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      browserVersion = _ref.browserVersion,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  // adds prefixes for firefox, chrome, safari, and opera regardless of\n  // version until a reliable browser support info can be found\n  // see: https://github.com/rofrischmann/inline-style-prefixer/issues/79\n  if (property === 'cursor' && grabValues[value] && (browserName === 'firefox' || browserName === 'chrome' || browserName === 'safari' || browserName === 'opera')) {\n    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);\n  }\n\n  if (property === 'cursor' && zoomValues[value] && (browserName === 'firefox' && browserVersion < 24 || browserName === 'chrome' && browserVersion < 37 || browserName === 'safari' && browserVersion < 9 || browserName === 'opera' && browserVersion < 24)) {\n    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filter;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction filter(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      browserVersion = _ref.browserVersion,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  if (typeof value === 'string' && value.indexOf('filter(') > -1 && (browserName === 'ios_saf' || browserName === 'safari' && browserVersion < 9.1)) {\n    return (0, _getPrefixedValue2.default)(value.replace(/filter\\(/g, cssPrefix + 'filter('), value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flex;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar values = {\n  flex: true,\n  'inline-flex': true\n};\nfunction flex(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      browserVersion = _ref.browserVersion,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  if (property === 'display' && values[value] && (browserName === 'chrome' && browserVersion < 29 && browserVersion > 20 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 9 && browserVersion > 6 || browserName === 'opera' && (browserVersion === 15 || browserVersion === 16))) {\n    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxOld;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar alternativeValues = {\n  'space-around': 'justify',\n  'space-between': 'justify',\n  'flex-start': 'start',\n  'flex-end': 'end',\n  'wrap-reverse': 'multiple',\n  wrap: 'multiple',\n  flex: 'box',\n  'inline-flex': 'inline-box'\n};\n\n\nvar alternativeProps = {\n  alignItems: 'WebkitBoxAlign',\n  justifyContent: 'WebkitBoxPack',\n  flexWrap: 'WebkitBoxLines'\n};\n\nvar otherProps = ['alignContent', 'alignSelf', 'order', 'flexGrow', 'flexShrink', 'flexBasis', 'flexDirection'];\nvar properties = Object.keys(alternativeProps).concat(otherProps);\n\nfunction flexboxOld(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      browserVersion = _ref.browserVersion,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed,\n      requiresPrefix = _ref.requiresPrefix;\n\n  if ((properties.indexOf(property) > -1 || property === 'display' && typeof value === 'string' && value.indexOf('flex') > -1) && (browserName === 'firefox' && browserVersion < 22 || browserName === 'chrome' && browserVersion < 21 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion <= 6.1 || browserName === 'android' && browserVersion < 4.4 || browserName === 'and_uc')) {\n    delete requiresPrefix[property];\n\n    if (!keepUnprefixed && !Array.isArray(style[property])) {\n      delete style[property];\n    }\n    if (property === 'flexDirection' && typeof value === 'string') {\n      if (value.indexOf('column') > -1) {\n        style.WebkitBoxOrient = 'vertical';\n      } else {\n        style.WebkitBoxOrient = 'horizontal';\n      }\n      if (value.indexOf('reverse') > -1) {\n        style.WebkitBoxDirection = 'reverse';\n      } else {\n        style.WebkitBoxDirection = 'normal';\n      }\n    }\n    if (property === 'display' && alternativeValues.hasOwnProperty(value)) {\n      return (0, _getPrefixedValue2.default)(cssPrefix + alternativeValues[value], value, keepUnprefixed);\n    }\n    if (alternativeProps.hasOwnProperty(property)) {\n      style[alternativeProps[property]] = alternativeValues[value] || value;\n    }\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gradient;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;\nfunction gradient(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      browserVersion = _ref.browserVersion,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  if (typeof value === 'string' && values.test(value) && (browserName === 'firefox' && browserVersion < 16 || browserName === 'chrome' && browserVersion < 26 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 7 || (browserName === 'opera' || browserName === 'op_mini') && browserVersion < 12.1 || browserName === 'android' && browserVersion < 4.4 || browserName === 'and_uc')) {\n    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = imageSet;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction imageSet(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  if (typeof value === 'string' && value.indexOf('image-set(') > -1 && (browserName === 'chrome' || browserName === 'opera' || browserName === 'and_chr' || browserName === 'and_uc' || browserName === 'ios_saf' || browserName === 'safari')) {\n    return (0, _getPrefixedValue2.default)(value.replace(/image-set\\(/g, cssPrefix + 'image-set('), value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = position;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction position(property, value, style, _ref) {\n  var browserName = _ref.browserName,\n      cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  if (property === 'position' && value === 'sticky' && (browserName === 'safari' || browserName === 'ios_saf')) {\n    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sizing;\n\nvar _getPrefixedValue = require('../../utils/getPrefixedValue');\n\nvar _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar properties = {\n  maxHeight: true,\n  maxWidth: true,\n  width: true,\n  height: true,\n  columnWidth: true,\n  minWidth: true,\n  minHeight: true\n};\n\nvar values = {\n  'min-content': true,\n  'max-content': true,\n  'fill-available': true,\n  'fit-content': true,\n  'contain-floats': true\n\n  // TODO: chrome & opera support it\n};function sizing(property, value, style, _ref) {\n  var cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed;\n\n  // This might change in the future\n  // Keep an eye on it\n  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {\n    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transition;\n\nvar _hyphenateProperty = require('css-in-js-utils/lib/hyphenateProperty');\n\nvar _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\n\n\nvar requiresPrefixDashCased = void 0;\n\nfunction transition(property, value, style, _ref) {\n  var cssPrefix = _ref.cssPrefix,\n      keepUnprefixed = _ref.keepUnprefixed,\n      requiresPrefix = _ref.requiresPrefix;\n\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    // memoize the prefix array for later use\n    if (!requiresPrefixDashCased) {\n      requiresPrefixDashCased = Object.keys(requiresPrefix).map(function (prop) {\n        return (0, _hyphenateProperty2.default)(prop);\n      });\n    }\n\n    // only split multi values, not cubic beziers\n    var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n    requiresPrefixDashCased.forEach(function (prop) {\n      multipleValues.forEach(function (val, index) {\n        if (val.indexOf(prop) > -1 && prop !== 'order') {\n          multipleValues[index] = val.replace(prop, cssPrefix + prop) + (keepUnprefixed ? ',' + val : '');\n        }\n      });\n    });\n\n    return multipleValues.join(',');\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPrefixer;\n\nvar _prefixProperty = require('../utils/prefixProperty');\n\nvar _prefixProperty2 = _interopRequireDefault(_prefixProperty);\n\nvar _prefixValue = require('../utils/prefixValue');\n\nvar _prefixValue2 = _interopRequireDefault(_prefixValue);\n\nvar _addNewValuesOnly = require('../utils/addNewValuesOnly');\n\nvar _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);\n\nvar _isObject = require('../utils/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createPrefixer(_ref) {\n  var prefixMap = _ref.prefixMap,\n      plugins = _ref.plugins;\n\n  function prefixAll(style) {\n    for (var property in style) {\n      var value = style[property];\n\n      // handle nested objects\n      if ((0, _isObject2.default)(value)) {\n        style[property] = prefixAll(value);\n        // handle array values\n      } else if (Array.isArray(value)) {\n        var combinedValue = [];\n\n        for (var i = 0, len = value.length; i < len; ++i) {\n          var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, prefixMap);\n          (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);\n        }\n\n        // only modify the value if it was touched\n        // by any plugin to prevent unnecessary mutations\n        if (combinedValue.length > 0) {\n          style[property] = combinedValue;\n        }\n      } else {\n        var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);\n\n        // only modify the value if it was touched\n        // by any plugin to prevent unnecessary mutations\n        if (_processedValue) {\n          style[property] = _processedValue;\n        }\n\n        (0, _prefixProperty2.default)(prefixMap, property, style);\n      }\n    }\n\n    return style;\n  }\n\n  return prefixAll;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createPrefixer = require('./createPrefixer');\n\nvar _createPrefixer2 = _interopRequireDefault(_createPrefixer);\n\nvar _staticData = require('./staticData');\n\nvar _staticData2 = _interopRequireDefault(_staticData);\n\nvar _cursor = require('./plugins/cursor');\n\nvar _cursor2 = _interopRequireDefault(_cursor);\n\nvar _crossFade = require('./plugins/crossFade');\n\nvar _crossFade2 = _interopRequireDefault(_crossFade);\n\nvar _filter = require('./plugins/filter');\n\nvar _filter2 = _interopRequireDefault(_filter);\n\nvar _flex = require('./plugins/flex');\n\nvar _flex2 = _interopRequireDefault(_flex);\n\nvar _flexboxOld = require('./plugins/flexboxOld');\n\nvar _flexboxOld2 = _interopRequireDefault(_flexboxOld);\n\nvar _gradient = require('./plugins/gradient');\n\nvar _gradient2 = _interopRequireDefault(_gradient);\n\nvar _imageSet = require('./plugins/imageSet');\n\nvar _imageSet2 = _interopRequireDefault(_imageSet);\n\nvar _position = require('./plugins/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _sizing = require('./plugins/sizing');\n\nvar _sizing2 = _interopRequireDefault(_sizing);\n\nvar _transition = require('./plugins/transition');\n\nvar _transition2 = _interopRequireDefault(_transition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plugins = [_crossFade2.default, _cursor2.default, _filter2.default, _flexboxOld2.default, _gradient2.default, _imageSet2.default, _position2.default, _sizing2.default, _transition2.default, _flex2.default];\n\nexports.default = (0, _createPrefixer2.default)({\n  prefixMap: _staticData2.default.prefixMap,\n  plugins: plugins\n});\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = crossFade;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#search=cross-fade\nvar prefixes = ['-webkit-', ''];\nfunction crossFade(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('cross-fade(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/cross-fade\\(/g, prefix + 'cross-fade(');\n    });\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cursor;\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar values = {\n  'zoom-in': true,\n  'zoom-out': true,\n  grab: true,\n  grabbing: true\n};\n\nfunction cursor(property, value) {\n  if (property === 'cursor' && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filter;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#feat=css-filter-function\nvar prefixes = ['-webkit-', ''];\nfunction filter(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('filter(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/filter\\(/g, prefix + 'filter(');\n    });\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flex;\nvar values = {\n  flex: ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex'],\n  'inline-flex': ['-webkit-inline-box', '-moz-inline-box', '-ms-inline-flexbox', '-webkit-inline-flex', 'inline-flex']\n};\n\nfunction flex(property, value) {\n  if (property === 'display' && values.hasOwnProperty(value)) {\n    return values[value];\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxOld;\nvar alternativeValues = {\n  'space-around': 'justify',\n  'space-between': 'justify',\n  'flex-start': 'start',\n  'flex-end': 'end',\n  'wrap-reverse': 'multiple',\n  wrap: 'multiple'\n};\n\nvar alternativeProps = {\n  alignItems: 'WebkitBoxAlign',\n  justifyContent: 'WebkitBoxPack',\n  flexWrap: 'WebkitBoxLines'\n};\n\nfunction flexboxOld(property, value, style) {\n  if (property === 'flexDirection' && typeof value === 'string') {\n    if (value.indexOf('column') > -1) {\n      style.WebkitBoxOrient = 'vertical';\n    } else {\n      style.WebkitBoxOrient = 'horizontal';\n    }\n    if (value.indexOf('reverse') > -1) {\n      style.WebkitBoxDirection = 'reverse';\n    } else {\n      style.WebkitBoxDirection = 'normal';\n    }\n  }\n  if (alternativeProps.hasOwnProperty(property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gradient;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;\n\nfunction gradient(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = imageSet;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#feat=css-image-set\nvar prefixes = ['-webkit-', ''];\nfunction imageSet(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('image-set(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/image-set\\(/g, prefix + 'image-set(');\n    });\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = position;\nfunction position(property, value) {\n  if (property === 'position' && value === 'sticky') {\n    return ['-webkit-sticky', 'sticky'];\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sizing;\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar properties = {\n  maxHeight: true,\n  maxWidth: true,\n  width: true,\n  height: true,\n  columnWidth: true,\n  minWidth: true,\n  minHeight: true\n};\nvar values = {\n  'min-content': true,\n  'max-content': true,\n  'fill-available': true,\n  'fit-content': true,\n  'contain-floats': true\n};\n\nfunction sizing(property, value) {\n  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transition;\n\nvar _hyphenateProperty = require('css-in-js-utils/lib/hyphenateProperty');\n\nvar _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nvar _capitalizeString = require('../../utils/capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\n\n\nvar prefixMapping = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  ms: '-ms-'\n};\n\nfunction prefixValue(value, propertyPrefixMap) {\n  if ((0, _isPrefixedValue2.default)(value)) {\n    return value;\n  }\n\n  // only split multi values, not cubic beziers\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = (0, _hyphenateProperty2.default)(property);\n\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {\n        var prefixes = propertyPrefixMap[property];\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n\n    multipleValues[i] = values.join(',');\n  }\n\n  return multipleValues.join(',');\n}\n\nfunction transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap);\n    // if the property is already prefixed\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Webkit') > -1) {\n      return webkitOutput;\n    }\n\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Moz') > -1) {\n      return mozOutput;\n    }\n\n    style['Webkit' + (0, _capitalizeString2.default)(property)] = webkitOutput;\n    style['Moz' + (0, _capitalizeString2.default)(property)] = mozOutput;\n    return outputValue;\n  }\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar w = [\"Webkit\"];\nvar m = [\"Moz\"];\nvar ms = [\"ms\"];\nvar wm = [\"Webkit\", \"Moz\"];\nvar wms = [\"Webkit\", \"ms\"];\nvar wmms = [\"Webkit\", \"Moz\", \"ms\"];\n\nexports.default = {\n  plugins: [],\n  prefixMap: { \"appearance\": wm, \"userSelect\": wmms, \"textEmphasisPosition\": w, \"textEmphasis\": w, \"textEmphasisStyle\": w, \"textEmphasisColor\": w, \"boxDecorationBreak\": w, \"clipPath\": w, \"maskImage\": w, \"maskMode\": w, \"maskRepeat\": w, \"maskPosition\": w, \"maskClip\": w, \"maskOrigin\": w, \"maskSize\": w, \"maskComposite\": w, \"mask\": w, \"maskBorderSource\": w, \"maskBorderMode\": w, \"maskBorderSlice\": w, \"maskBorderWidth\": w, \"maskBorderOutset\": w, \"maskBorderRepeat\": w, \"maskBorder\": w, \"maskType\": w, \"textDecorationStyle\": w, \"textDecorationSkip\": w, \"textDecorationLine\": w, \"textDecorationColor\": w, \"filter\": w, \"fontFeatureSettings\": w, \"breakAfter\": wmms, \"breakBefore\": wmms, \"breakInside\": wmms, \"columnCount\": wm, \"columnFill\": wm, \"columnGap\": wm, \"columnRule\": wm, \"columnRuleColor\": wm, \"columnRuleStyle\": wm, \"columnRuleWidth\": wm, \"columns\": wm, \"columnSpan\": wm, \"columnWidth\": wm, \"writingMode\": wms, \"flex\": w, \"flexBasis\": w, \"flexDirection\": w, \"flexGrow\": w, \"flexFlow\": w, \"flexShrink\": w, \"flexWrap\": w, \"alignContent\": w, \"alignItems\": w, \"alignSelf\": w, \"justifyContent\": w, \"order\": w, \"transform\": w, \"transformOrigin\": w, \"transformOriginX\": w, \"transformOriginY\": w, \"backfaceVisibility\": w, \"perspective\": w, \"perspectiveOrigin\": w, \"transformStyle\": w, \"transformOriginZ\": w, \"animation\": w, \"animationDelay\": w, \"animationDirection\": w, \"animationFillMode\": w, \"animationDuration\": w, \"animationIterationCount\": w, \"animationName\": w, \"animationPlayState\": w, \"animationTimingFunction\": w, \"backdropFilter\": w, \"fontKerning\": w, \"scrollSnapType\": wms, \"scrollSnapPointsX\": wms, \"scrollSnapPointsY\": wms, \"scrollSnapDestination\": wms, \"scrollSnapCoordinate\": wms, \"shapeImageThreshold\": w, \"shapeImageMargin\": w, \"shapeImageOutside\": w, \"hyphens\": wmms, \"flowInto\": wms, \"flowFrom\": wms, \"regionFragment\": wms, \"textAlignLast\": m, \"tabSize\": m, \"wrapFlow\": ms, \"wrapThrough\": ms, \"wrapMargin\": ms, \"gridTemplateColumns\": ms, \"gridTemplateRows\": ms, \"gridTemplateAreas\": ms, \"gridTemplate\": ms, \"gridAutoColumns\": ms, \"gridAutoRows\": ms, \"gridAutoFlow\": ms, \"grid\": ms, \"gridRowStart\": ms, \"gridColumnStart\": ms, \"gridRowEnd\": ms, \"gridRow\": ms, \"gridColumn\": ms, \"gridColumnEnd\": ms, \"gridColumnGap\": ms, \"gridRowGap\": ms, \"gridArea\": ms, \"gridGap\": ms, \"textSizeAdjust\": wms, \"borderImage\": w, \"borderImageOutset\": w, \"borderImageRepeat\": w, \"borderImageSlice\": w, \"borderImageSource\": w, \"borderImageWidth\": w, \"transitionDelay\": w, \"transitionDuration\": w, \"transitionProperty\": w, \"transitionTimingFunction\": w }\n};\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addNewValuesOnly;\nfunction addIfNew(list, value) {\n  if (list.indexOf(value) === -1) {\n    list.push(value);\n  }\n}\n\nfunction addNewValuesOnly(list, values) {\n  if (Array.isArray(values)) {\n    for (var i = 0, len = values.length; i < len; ++i) {\n      addIfNew(list, values[i]);\n    }\n  } else {\n    addIfNew(list, values);\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = capitalizeString;\nfunction capitalizeString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getBrowserInformation;\n\nvar _bowser = require('bowser');\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixByBrowser = {\n  chrome: 'Webkit',\n  safari: 'Webkit',\n  ios: 'Webkit',\n  android: 'Webkit',\n  phantom: 'Webkit',\n  opera: 'Webkit',\n  webos: 'Webkit',\n  blackberry: 'Webkit',\n  bada: 'Webkit',\n  tizen: 'Webkit',\n  chromium: 'Webkit',\n  vivaldi: 'Webkit',\n  firefox: 'Moz',\n  seamoney: 'Moz',\n  sailfish: 'Moz',\n  msie: 'ms',\n  msedge: 'ms'\n};\n\n\nvar browserByCanIuseAlias = {\n  chrome: 'chrome',\n  chromium: 'chrome',\n  safari: 'safari',\n  firfox: 'firefox',\n  msedge: 'edge',\n  opera: 'opera',\n  vivaldi: 'opera',\n  msie: 'ie'\n};\n\nfunction getBrowserName(browserInfo) {\n  if (browserInfo.firefox) {\n    return 'firefox';\n  }\n\n  if (browserInfo.mobile || browserInfo.tablet) {\n    if (browserInfo.ios) {\n      return 'ios_saf';\n    } else if (browserInfo.android) {\n      return 'android';\n    } else if (browserInfo.opera) {\n      return 'op_mini';\n    }\n  }\n\n  for (var browser in browserByCanIuseAlias) {\n    if (browserInfo.hasOwnProperty(browser)) {\n      return browserByCanIuseAlias[browser];\n    }\n  }\n}\n\n/**\n * Uses bowser to get default browser browserInformation such as version and name\n * Evaluates bowser browserInfo and adds vendorPrefix browserInformation\n * @param {string} userAgent - userAgent that gets evaluated\n */\nfunction getBrowserInformation(userAgent) {\n  var browserInfo = _bowser2.default._detect(userAgent);\n\n  if (browserInfo.yandexbrowser) {\n    browserInfo = _bowser2.default._detect(userAgent.replace(/YaBrowser\\/[0-9.]*/, ''));\n  }\n\n  for (var browser in prefixByBrowser) {\n    if (browserInfo.hasOwnProperty(browser)) {\n      var prefix = prefixByBrowser[browser];\n\n      browserInfo.jsPrefix = prefix;\n      browserInfo.cssPrefix = '-' + prefix.toLowerCase() + '-';\n      break;\n    }\n  }\n\n  browserInfo.browserName = getBrowserName(browserInfo);\n\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n  if (browserInfo.version) {\n    browserInfo.browserVersion = parseFloat(browserInfo.version);\n  } else {\n    browserInfo.browserVersion = parseInt(parseFloat(browserInfo.osversion), 10);\n  }\n\n  browserInfo.osVersion = parseFloat(browserInfo.osversion);\n\n  // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n  if (browserInfo.browserName === 'ios_saf' && browserInfo.browserVersion > browserInfo.osVersion) {\n    browserInfo.browserVersion = browserInfo.osVersion;\n  }\n\n  // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n  if (browserInfo.browserName === 'android' && browserInfo.chrome && browserInfo.browserVersion > 37) {\n    browserInfo.browserName = 'and_chr';\n  }\n\n  // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n  if (browserInfo.browserName === 'android' && browserInfo.osVersion < 5) {\n    browserInfo.browserVersion = browserInfo.osVersion;\n  }\n\n  // Samsung browser are basically build on Chrome > 44\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/102\n  if (browserInfo.browserName === 'android' && browserInfo.samsungBrowser) {\n    browserInfo.browserName = 'and_chr';\n    browserInfo.browserVersion = 44;\n  }\n\n  return browserInfo;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPrefixedKeyframes;\nfunction getPrefixedKeyframes(browserName, browserVersion, cssPrefix) {\n  var prefixedKeyframes = 'keyframes';\n\n  if (browserName === 'chrome' && browserVersion < 43 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 9 || browserName === 'opera' && browserVersion < 30 || browserName === 'android' && browserVersion <= 4.4 || browserName === 'and_uc') {\n    return cssPrefix + prefixedKeyframes;\n  }\n  return prefixedKeyframes;\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPrefixedValue;\nfunction getPrefixedValue(prefixedValue, value, keepUnprefixed) {\n  if (keepUnprefixed) {\n    return [prefixedValue, value];\n  }\n  return prefixedValue;\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isObject;\nfunction isObject(value) {\n  return value instanceof Object && !Array.isArray(value);\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixProperty;\n\nvar _capitalizeString = require('./capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prefixProperty(prefixProperties, property, style) {\n  if (prefixProperties.hasOwnProperty(property)) {\n    var requiredPrefixes = prefixProperties[property];\n    for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {\n      style[requiredPrefixes[i] + (0, _capitalizeString2.default)(property)] = style[property];\n    }\n  }\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixValue;\nfunction prefixValue(plugins, property, value, style, metaData) {\n  for (var i = 0, len = plugins.length; i < len; ++i) {\n    var processedValue = plugins[i](property, value, style, metaData);\n\n    // we can stop processing if a value is returned\n    // as all plugin criteria are unique\n    if (processedValue) {\n      return processedValue;\n    }\n  }\n}\nmodule.exports = exports[\"default\"];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","/*\n * Konva JavaScript Framework v2.0.3\n * http://konvajs.github.io/\n * Licensed under the MIT\n * Date: Sat Apr 21 2018\n *\n * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n * Modified work Copyright (C) 2014 - present by Anton Lavrenov (Konva)\n *\n * @license\n */\n\n// runtime check for already included Konva\n(function() {\n  'use strict';\n  /**\n   * @namespace Konva\n   */\n\n  var PI_OVER_180 = Math.PI / 180;\n\n  var Konva = {\n    // public\n    version: '2.0.3',\n\n    // private\n    stages: [],\n    idCounter: 0,\n    ids: {},\n    names: {},\n    shapes: {},\n    listenClickTap: false,\n    inDblClickWindow: false,\n\n    isBrowser:\n      typeof window !== 'undefined' &&\n      // browser case\n      ({}.toString.call(window) === '[object Window]' ||\n        // electron case\n        {}.toString.call(window) === '[object global]'),\n\n    // configurations\n    enableTrace: false,\n    traceArrMax: 100,\n    dblClickWindow: 400,\n    /**\n     * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n     * But you may override such property, if you want to use your value.\n     * @property pixelRatio\n     * @default undefined\n     * @memberof Konva\n     * @example\n     * Konva.pixelRatio = 1;\n     */\n    pixelRatio: undefined,\n    /**\n     * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n     * only then start dragging. Default is 3px.\n     * @property dragDistance\n     * @default 0\n     * @memberof Konva\n     * @example\n     * Konva.dragDistance = 10;\n     */\n    dragDistance: 3,\n    /**\n     * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n     * @property angleDeg\n     * @default true\n     * @memberof Konva\n     * @example\n     * node.rotation(45); // 45 degrees\n     * Konva.angleDeg = false;\n     * node.rotation(Math.PI / 2); // PI/2 radian\n     */\n    angleDeg: true,\n    /**\n     * Show different warnings about errors or wrong API usage\n     * @property showWarnings\n     * @default true\n     * @memberof Konva\n     * @example\n     * Konva.showWarnings = false;\n     */\n    showWarnings: true,\n\n    /**\n     * @namespace Filters\n     * @memberof Konva\n     */\n    Filters: {},\n\n    /**\n     * returns whether or not drag and drop is currently active\n     * @method\n     * @memberof Konva\n     */\n    isDragging: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return dd.isDragging;\n      }\n      return false;\n    },\n    /**\n     * returns whether or not a drag and drop operation is ready, but may\n     *  not necessarily have started\n     * @method\n     * @memberof Konva\n     */\n    isDragReady: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return !!dd.node;\n      }\n      return false;\n    },\n    _addId: function(node, id) {\n      if (id !== undefined) {\n        this.ids[id] = node;\n      }\n    },\n    _removeId: function(id) {\n      if (id !== undefined) {\n        delete this.ids[id];\n      }\n    },\n    _addName: function(node, name) {\n      if (name) {\n        if (!this.names[name]) {\n          this.names[name] = [];\n        }\n        this.names[name].push(node);\n      }\n    },\n    _removeName: function(name, _id) {\n      if (!name) {\n        return;\n      }\n      var nodes = this.names[name];\n      if (!nodes) {\n        return;\n      }\n      for (var n = 0; n < nodes.length; n++) {\n        var no = nodes[n];\n        if (no._id === _id) {\n          nodes.splice(n, 1);\n        }\n      }\n      if (nodes.length === 0) {\n        delete this.names[name];\n      }\n    },\n    getAngle: function(angle) {\n      return this.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    _detectIE: function(ua) {\n      var msie = ua.indexOf('msie ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('edge/');\n      if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      }\n\n      // other browser\n      return false;\n    },\n    _parseUA: function(userAgent) {\n      var ua = userAgent.toLowerCase(),\n        // jQuery UA regex\n        match =\n          /(chrome)[ /]([\\w.]+)/.exec(ua) ||\n          /(webkit)[ /]([\\w.]+)/.exec(ua) ||\n          /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\n          /(msie) ([\\w.]+)/.exec(ua) ||\n          (ua.indexOf('compatible') < 0 &&\n            /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\n          [],\n        // adding mobile flag as well\n        mobile = !!userAgent.match(\n          /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i\n        ),\n        ieMobile = !!userAgent.match(/IEMobile/i);\n\n      return {\n        browser: match[1] || '',\n        version: match[2] || '0',\n        isIE: Konva._detectIE(ua),\n        // adding mobile flab\n        mobile: mobile,\n        ieMobile: ieMobile // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n      };\n    },\n    // user agent\n    UA: undefined\n  };\n\n  var glob =\n    typeof global !== 'undefined'\n      ? global\n      : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined' ? self : {};\n\n  Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\n  if (glob.Konva) {\n    console.error(\n      'Konva instance is already exist in current eviroment. ' +\n        'Please use only one instance.'\n    );\n  }\n  glob.Konva = Konva;\n  Konva.global = glob;\n  Konva.window = glob;\n  Konva.document = glob.document;\n\n  if (typeof exports === 'object') {\n    module.exports = Konva;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function() {\n      return Konva;\n    });\n  }\n})();\n\n/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n(function() {\n  'use strict';\n  /**\n   * Collection constructor.  Collection extends\n   *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n   * @constructor\n   * @memberof Konva\n   */\n  Konva.Collection = function() {\n    var args = [].slice.call(arguments),\n      length = args.length,\n      i = 0;\n\n    this.length = length;\n    for (; i < length; i++) {\n      this[i] = args[i];\n    }\n    return this;\n  };\n  Konva.Collection.prototype = [];\n  /**\n   * iterate through node array and run a function for each node.\n   *  The node and index is passed into the function\n   * @method\n   * @memberof Konva.Collection.prototype\n   * @param {Function} func\n   * @example\n   * // get all nodes with name foo inside layer, and set x to 10 for each\n   * layer.get('.foo').each(function(shape, n) {\n   *   shape.setX(10);\n   * });\n   */\n  Konva.Collection.prototype.each = function(func) {\n    for (var n = 0; n < this.length; n++) {\n      func(this[n], n);\n    }\n  };\n  /**\n   * convert collection into an array\n   * @method\n   * @memberof Konva.Collection.prototype\n   */\n  Konva.Collection.prototype.toArray = function() {\n    var arr = [],\n      len = this.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      arr.push(this[n]);\n    }\n    return arr;\n  };\n  /**\n   * convert array into a collection\n   * @method\n   * @memberof Konva.Collection\n   * @param {Array} arr\n   */\n  Konva.Collection.toCollection = function(arr) {\n    var collection = new Konva.Collection(),\n      len = arr.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      collection.push(arr[n]);\n    }\n    return collection;\n  };\n\n  // map one method by it's name\n  Konva.Collection._mapMethod = function(methodName) {\n    Konva.Collection.prototype[methodName] = function() {\n      var len = this.length,\n        i;\n\n      var args = [].slice.call(arguments);\n      for (i = 0; i < len; i++) {\n        this[i][methodName].apply(this[i], args);\n      }\n\n      return this;\n    };\n  };\n\n  Konva.Collection.mapMethods = function(constructor) {\n    var prot = constructor.prototype;\n    for (var methodName in prot) {\n      Konva.Collection._mapMethod(methodName);\n    }\n  };\n\n  /*\n    * Last updated November 2011\n    * By Simon Sarris\n    * www.simonsarris.com\n    * sarris@acm.org\n    *\n    * Free to use and distribute at will\n    * So long as you are nice to people, etc\n    */\n\n  /*\n    * The usage of this class was inspired by some of the work done by a forked\n    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n    * class.  Modified by Eric Rowell\n    */\n\n  /**\n   * Transform constructor. Transform object is a private class of Konva framework.\n   * In most of the cases you don't need to use it in your app.\n   * But there is a documentation for that class in case you still want\n   * to make some manual calculations.\n   * @constructor\n   * @param {Array} [m] Optional six-element matrix\n   * @memberof Konva\n   */\n  Konva.Transform = function(m) {\n    this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n  };\n\n  Konva.Transform.prototype = {\n    /**\n     * Copy Konva.Transform object\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     */\n    copy: function() {\n      return new Konva.Transform(this.m);\n    },\n    /**\n     * Transform point\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Object} point 2D point(x, y)\n     * @returns {Object} 2D point(x, y)\n     */\n    point: function(point) {\n      var m = this.m;\n      return {\n        x: m[0] * point.x + m[2] * point.y + m[4],\n        y: m[1] * point.x + m[3] * point.y + m[5]\n      };\n    },\n    /**\n     * Apply translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Konva.Transform}\n     */\n    translate: function(x, y) {\n      this.m[4] += this.m[0] * x + this.m[2] * y;\n      this.m[5] += this.m[1] * x + this.m[3] * y;\n      return this;\n    },\n    /**\n     * Apply scale\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} sx\n     * @param {Number} sy\n     * @returns {Konva.Transform}\n     */\n    scale: function(sx, sy) {\n      this.m[0] *= sx;\n      this.m[1] *= sx;\n      this.m[2] *= sy;\n      this.m[3] *= sy;\n      return this;\n    },\n    /**\n     * Apply rotation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} rad  Angle in radians\n     * @returns {Konva.Transform}\n     */\n    rotate: function(rad) {\n      var c = Math.cos(rad);\n      var s = Math.sin(rad);\n      var m11 = this.m[0] * c + this.m[2] * s;\n      var m12 = this.m[1] * c + this.m[3] * s;\n      var m21 = this.m[0] * -s + this.m[2] * c;\n      var m22 = this.m[1] * -s + this.m[3] * c;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n     * Returns the translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Object} 2D point(x, y)\n     */\n    getTranslation: function() {\n      return {\n        x: this.m[4],\n        y: this.m[5]\n      };\n    },\n    /**\n     * Apply skew\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} sx\n     * @param {Number} sy\n     * @returns {Konva.Transform}\n     */\n    skew: function(sx, sy) {\n      var m11 = this.m[0] + this.m[2] * sy;\n      var m12 = this.m[1] + this.m[3] * sy;\n      var m21 = this.m[2] + this.m[0] * sx;\n      var m22 = this.m[3] + this.m[1] * sx;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n     * Transform multiplication\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Konva.Transform} matrix\n     * @returns {Konva.Transform}\n     */\n    multiply: function(matrix) {\n      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      this.m[4] = dx;\n      this.m[5] = dy;\n      return this;\n    },\n    /**\n     * Invert the matrix\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     */\n    invert: function() {\n      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n      var m0 = this.m[3] * d;\n      var m1 = -this.m[1] * d;\n      var m2 = -this.m[2] * d;\n      var m3 = this.m[0] * d;\n      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n      this.m[0] = m0;\n      this.m[1] = m1;\n      this.m[2] = m2;\n      this.m[3] = m3;\n      this.m[4] = m4;\n      this.m[5] = m5;\n      return this;\n    },\n    /**\n     * return matrix\n     * @method\n     * @memberof Konva.Transform.prototype\n     */\n    getMatrix: function() {\n      return this.m;\n    },\n    /**\n     * set to absolute position via translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     * @author ericdrowell\n     */\n    setAbsolutePosition: function(x, y) {\n      var m0 = this.m[0],\n        m1 = this.m[1],\n        m2 = this.m[2],\n        m3 = this.m[3],\n        m4 = this.m[4],\n        m5 = this.m[5],\n        yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),\n        xt = (x - m4 - m2 * yt) / m0;\n\n      return this.translate(xt, yt);\n    }\n  };\n\n  // CONSTANTS\n  var CONTEXT_2D = '2d',\n    OBJECT_ARRAY = '[object Array]',\n    OBJECT_NUMBER = '[object Number]',\n    OBJECT_STRING = '[object String]',\n    PI_OVER_DEG180 = Math.PI / 180,\n    DEG180_OVER_PI = 180 / Math.PI,\n    HASH = '#',\n    EMPTY_STRING = '',\n    ZERO = '0',\n    KONVA_WARNING = 'Konva warning: ',\n    KONVA_ERROR = 'Konva error: ',\n    RGB_PAREN = 'rgb(',\n    COLORS = {\n      aliceblue: [240, 248, 255],\n      antiquewhite: [250, 235, 215],\n      aqua: [0, 255, 255],\n      aquamarine: [127, 255, 212],\n      azure: [240, 255, 255],\n      beige: [245, 245, 220],\n      bisque: [255, 228, 196],\n      black: [0, 0, 0],\n      blanchedalmond: [255, 235, 205],\n      blue: [0, 0, 255],\n      blueviolet: [138, 43, 226],\n      brown: [165, 42, 42],\n      burlywood: [222, 184, 135],\n      cadetblue: [95, 158, 160],\n      chartreuse: [127, 255, 0],\n      chocolate: [210, 105, 30],\n      coral: [255, 127, 80],\n      cornflowerblue: [100, 149, 237],\n      cornsilk: [255, 248, 220],\n      crimson: [220, 20, 60],\n      cyan: [0, 255, 255],\n      darkblue: [0, 0, 139],\n      darkcyan: [0, 139, 139],\n      darkgoldenrod: [184, 132, 11],\n      darkgray: [169, 169, 169],\n      darkgreen: [0, 100, 0],\n      darkgrey: [169, 169, 169],\n      darkkhaki: [189, 183, 107],\n      darkmagenta: [139, 0, 139],\n      darkolivegreen: [85, 107, 47],\n      darkorange: [255, 140, 0],\n      darkorchid: [153, 50, 204],\n      darkred: [139, 0, 0],\n      darksalmon: [233, 150, 122],\n      darkseagreen: [143, 188, 143],\n      darkslateblue: [72, 61, 139],\n      darkslategray: [47, 79, 79],\n      darkslategrey: [47, 79, 79],\n      darkturquoise: [0, 206, 209],\n      darkviolet: [148, 0, 211],\n      deeppink: [255, 20, 147],\n      deepskyblue: [0, 191, 255],\n      dimgray: [105, 105, 105],\n      dimgrey: [105, 105, 105],\n      dodgerblue: [30, 144, 255],\n      firebrick: [178, 34, 34],\n      floralwhite: [255, 255, 240],\n      forestgreen: [34, 139, 34],\n      fuchsia: [255, 0, 255],\n      gainsboro: [220, 220, 220],\n      ghostwhite: [248, 248, 255],\n      gold: [255, 215, 0],\n      goldenrod: [218, 165, 32],\n      gray: [128, 128, 128],\n      green: [0, 128, 0],\n      greenyellow: [173, 255, 47],\n      grey: [128, 128, 128],\n      honeydew: [240, 255, 240],\n      hotpink: [255, 105, 180],\n      indianred: [205, 92, 92],\n      indigo: [75, 0, 130],\n      ivory: [255, 255, 240],\n      khaki: [240, 230, 140],\n      lavender: [230, 230, 250],\n      lavenderblush: [255, 240, 245],\n      lawngreen: [124, 252, 0],\n      lemonchiffon: [255, 250, 205],\n      lightblue: [173, 216, 230],\n      lightcoral: [240, 128, 128],\n      lightcyan: [224, 255, 255],\n      lightgoldenrodyellow: [250, 250, 210],\n      lightgray: [211, 211, 211],\n      lightgreen: [144, 238, 144],\n      lightgrey: [211, 211, 211],\n      lightpink: [255, 182, 193],\n      lightsalmon: [255, 160, 122],\n      lightseagreen: [32, 178, 170],\n      lightskyblue: [135, 206, 250],\n      lightslategray: [119, 136, 153],\n      lightslategrey: [119, 136, 153],\n      lightsteelblue: [176, 196, 222],\n      lightyellow: [255, 255, 224],\n      lime: [0, 255, 0],\n      limegreen: [50, 205, 50],\n      linen: [250, 240, 230],\n      magenta: [255, 0, 255],\n      maroon: [128, 0, 0],\n      mediumaquamarine: [102, 205, 170],\n      mediumblue: [0, 0, 205],\n      mediumorchid: [186, 85, 211],\n      mediumpurple: [147, 112, 219],\n      mediumseagreen: [60, 179, 113],\n      mediumslateblue: [123, 104, 238],\n      mediumspringgreen: [0, 250, 154],\n      mediumturquoise: [72, 209, 204],\n      mediumvioletred: [199, 21, 133],\n      midnightblue: [25, 25, 112],\n      mintcream: [245, 255, 250],\n      mistyrose: [255, 228, 225],\n      moccasin: [255, 228, 181],\n      navajowhite: [255, 222, 173],\n      navy: [0, 0, 128],\n      oldlace: [253, 245, 230],\n      olive: [128, 128, 0],\n      olivedrab: [107, 142, 35],\n      orange: [255, 165, 0],\n      orangered: [255, 69, 0],\n      orchid: [218, 112, 214],\n      palegoldenrod: [238, 232, 170],\n      palegreen: [152, 251, 152],\n      paleturquoise: [175, 238, 238],\n      palevioletred: [219, 112, 147],\n      papayawhip: [255, 239, 213],\n      peachpuff: [255, 218, 185],\n      peru: [205, 133, 63],\n      pink: [255, 192, 203],\n      plum: [221, 160, 203],\n      powderblue: [176, 224, 230],\n      purple: [128, 0, 128],\n      rebeccapurple: [102, 51, 153],\n      red: [255, 0, 0],\n      rosybrown: [188, 143, 143],\n      royalblue: [65, 105, 225],\n      saddlebrown: [139, 69, 19],\n      salmon: [250, 128, 114],\n      sandybrown: [244, 164, 96],\n      seagreen: [46, 139, 87],\n      seashell: [255, 245, 238],\n      sienna: [160, 82, 45],\n      silver: [192, 192, 192],\n      skyblue: [135, 206, 235],\n      slateblue: [106, 90, 205],\n      slategray: [119, 128, 144],\n      slategrey: [119, 128, 144],\n      snow: [255, 255, 250],\n      springgreen: [0, 255, 127],\n      steelblue: [70, 130, 180],\n      tan: [210, 180, 140],\n      teal: [0, 128, 128],\n      thistle: [216, 191, 216],\n      transparent: [255, 255, 255, 0],\n      tomato: [255, 99, 71],\n      turquoise: [64, 224, 208],\n      violet: [238, 130, 238],\n      wheat: [245, 222, 179],\n      white: [255, 255, 255],\n      whitesmoke: [245, 245, 245],\n      yellow: [255, 255, 0],\n      yellowgreen: [154, 205, 5]\n    },\n    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\n  /**\n   * @namespace Util\n   * @memberof Konva\n   */\n  Konva.Util = {\n    /*\n    * cherry-picked utilities from underscore.js\n    */\n    _isElement: function(obj) {\n      return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction: function(obj) {\n      return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isObject: function(obj) {\n      return !!obj && obj.constructor === Object;\n    },\n    _isArray: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_NUMBER;\n    },\n    _isString: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    // arrays are objects too\n    isObject: function(val) {\n      return val instanceof Object;\n    },\n    isValidSelector: function(selector) {\n      if (typeof selector !== 'string') {\n        return false;\n      }\n      var firstChar = selector[0];\n      return (\n        firstChar === '#' ||\n        firstChar === '.' ||\n        firstChar === firstChar.toUpperCase()\n      );\n    },\n    _sign: function(number) {\n      if (number === 0) {\n        return 0;\n      }\n      if (number > 0) {\n        return 1;\n      } else {\n        return -1;\n      }\n    },\n    createCanvasElement: function() {\n      var canvas = Konva.isBrowser\n        ? Konva.document.createElement('canvas')\n        : new Konva._nodeCanvas();\n      // on some environments canvas.style is readonly\n      try {\n        canvas.style = canvas.style || {};\n      } catch (e) {}\n      return canvas;\n    },\n    _isInDocument: function(el) {\n      while ((el = el.parentNode)) {\n        if (el == Konva.document) {\n          return true;\n        }\n      }\n      return false;\n    },\n    _simplifyArray: function(arr) {\n      var retArr = [],\n        len = arr.length,\n        util = Konva.Util,\n        n,\n        val;\n\n      for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n          val = Math.round(val * 1000) / 1000;\n        } else if (!util._isString(val)) {\n          val = val.toString();\n        }\n\n        retArr.push(val);\n      }\n\n      return retArr;\n    },\n    /*\n    * arg can be an image object or image data\n    */\n    _getImage: function(arg, callback) {\n      var imageObj, canvas;\n\n      // if arg is null or undefined\n      if (!arg) {\n        callback(null);\n      } else if (this._isElement(arg)) {\n        // if arg is already an image object\n        callback(arg);\n      } else if (this._isString(arg)) {\n        // if arg is a string, then it's a data url\n        imageObj = new Konva.window.Image();\n        imageObj.onload = function() {\n          callback(imageObj);\n        };\n        imageObj.src = arg;\n      } else if (arg.data) {\n        //if arg is an object that contains the data property, it's an image object\n        canvas = Konva.Util.createCanvasElement();\n        canvas.width = arg.width;\n        canvas.height = arg.height;\n        var _context = canvas.getContext(CONTEXT_2D);\n        _context.putImageData(arg, 0, 0);\n        this._getImage(canvas.toDataURL(), callback);\n      } else {\n        callback(null);\n      }\n    },\n    _getRGBAString: function(obj) {\n      var red = obj.red || 0,\n        green = obj.green || 0,\n        blue = obj.blue || 0,\n        alpha = obj.alpha || 1;\n\n      return ['rgba(', red, ',', green, ',', blue, ',', alpha, ')'].join(\n        EMPTY_STRING\n      );\n    },\n    _rgbToHex: function(r, g, b) {\n      return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb: function(hex) {\n      hex = hex.replace(HASH, EMPTY_STRING);\n      var bigint = parseInt(hex, 16);\n      return {\n        r: (bigint >> 16) & 255,\n        g: (bigint >> 8) & 255,\n        b: bigint & 255\n      };\n    },\n    /**\n     * return random hex color\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    getRandomColor: function() {\n      var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n      while (randColor.length < 6) {\n        randColor = ZERO + randColor;\n      }\n      return HASH + randColor;\n    },\n    /**\n     * return value with default fallback\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    get: function(val, def) {\n      if (val === undefined) {\n        return def;\n      } else {\n        return val;\n      }\n    },\n    /**\n     * get RGB components of a color\n     * @method\n     * @memberof Konva.Util.prototype\n     * @param {String} color\n     * @example\n     * // each of the following examples return {r:0, g:0, b:255}\n     * var rgb = Konva.Util.getRGB('blue');\n     * var rgb = Konva.Util.getRGB('#0000ff');\n     * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n     */\n    getRGB: function(color) {\n      var rgb;\n      // color string\n      if (color in COLORS) {\n        rgb = COLORS[color];\n        return {\n          r: rgb[0],\n          g: rgb[1],\n          b: rgb[2]\n        };\n      } else if (color[0] === HASH) {\n        // hex\n        return this._hexToRgb(color.substring(1));\n      } else if (color.substr(0, 4) === RGB_PAREN) {\n        // rgb string\n        rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n        return {\n          r: parseInt(rgb[1], 10),\n          g: parseInt(rgb[2], 10),\n          b: parseInt(rgb[3], 10)\n        };\n      } else {\n        // default\n        return {\n          r: 0,\n          g: 0,\n          b: 0\n        };\n      }\n    },\n    // convert any color string to RGBA object\n    // from https://github.com/component/color-parser\n    colorToRGBA: function(str) {\n      str = str || 'black';\n      return (\n        Konva.Util._namedColorToRBA(str) ||\n        Konva.Util._hex3ColorToRGBA(str) ||\n        Konva.Util._hex6ColorToRGBA(str) ||\n        Konva.Util._rgbColorToRGBA(str) ||\n        Konva.Util._rgbaColorToRGBA(str)\n      );\n    },\n    // Parse named css color. Like \"green\"\n    _namedColorToRBA: function(str) {\n      var c = COLORS[str.toLowerCase()];\n      if (!c) {\n        return null;\n      }\n      return {\n        r: c[0],\n        g: c[1],\n        b: c[2],\n        a: 1\n      };\n    },\n    // Parse rgb(n, n, n)\n    _rgbColorToRGBA: function(str) {\n      if (str.indexOf('rgb(') === 0) {\n        str = str.match(/rgb\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: 1\n        };\n      }\n    },\n    // Parse rgba(n, n, n, n)\n    _rgbaColorToRGBA: function(str) {\n      if (str.indexOf('rgba(') === 0) {\n        str = str.match(/rgba\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: parts[3]\n        };\n      }\n    },\n    // Parse #nnnnnn\n    _hex6ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 7) {\n        return {\n          r: parseInt(str.slice(1, 3), 16),\n          g: parseInt(str.slice(3, 5), 16),\n          b: parseInt(str.slice(5, 7), 16),\n          a: 1\n        };\n      }\n    },\n    // Parse #nnn\n    _hex3ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 4) {\n        return {\n          r: parseInt(str[1] + str[1], 16),\n          g: parseInt(str[2] + str[2], 16),\n          b: parseInt(str[3] + str[3], 16),\n          a: 1\n        };\n      }\n    },\n    // o1 takes precedence over o2\n    _merge: function(o1, o2) {\n      var retObj = this._clone(o2);\n      for (var key in o1) {\n        if (this._isObject(o1[key])) {\n          retObj[key] = this._merge(o1[key], retObj[key]);\n        } else {\n          retObj[key] = o1[key];\n        }\n      }\n      return retObj;\n    },\n    /**\n     * check intersection of two client rectangles\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    haveIntersection: function(r1, r2) {\n      return !(\n        r2.x > r1.x + r1.width ||\n        r2.x + r2.width < r1.x ||\n        r2.y > r1.y + r1.height ||\n        r2.y + r2.height < r1.y\n      );\n    },\n    cloneObject: function(obj) {\n      var retObj = {};\n      for (var key in obj) {\n        if (this._isObject(obj[key])) {\n          retObj[key] = this.cloneObject(obj[key]);\n        } else if (this._isArray(obj[key])) {\n          retObj[key] = this.cloneArray(obj[key]);\n        } else {\n          retObj[key] = obj[key];\n        }\n      }\n      return retObj;\n    },\n    cloneArray: function(arr) {\n      return arr.slice(0);\n    },\n    _degToRad: function(deg) {\n      return deg * PI_OVER_DEG180;\n    },\n    _radToDeg: function(rad) {\n      return rad * DEG180_OVER_PI;\n    },\n    _capitalize: function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw: function(str) {\n      throw new Error(KONVA_ERROR + str);\n    },\n    error: function(str) {\n      console.error(KONVA_ERROR + str);\n    },\n    warn: function(str) {\n      /*\n             * IE9 on Windows7 64bit will throw a JS error\n             * if we don't use window.console in the conditional\n             */\n      if (Konva.global.console && console.warn && Konva.showWarnings) {\n        console.warn(KONVA_WARNING + str);\n      }\n    },\n    extend: function(child, parent) {\n      function Ctor() {\n        this.constructor = child;\n      }\n      Ctor.prototype = parent.prototype;\n      var oldProto = child.prototype;\n      child.prototype = new Ctor();\n      for (var key in oldProto) {\n        if (oldProto.hasOwnProperty(key)) {\n          child.prototype[key] = oldProto[key];\n        }\n      }\n      child.__super__ = parent.prototype;\n      // create reference to parent\n      child.super = parent;\n    },\n    /**\n     * adds methods to a constructor prototype\n     * @method\n     * @memberof Konva.Util.prototype\n     * @param {Function} constructor\n     * @param {Object} methods\n     */\n    addMethods: function(constructor, methods) {\n      var key;\n\n      for (key in methods) {\n        constructor.prototype[key] = methods[key];\n      }\n    },\n    _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n      var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n        d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n        fa = t * d01 / (d01 + d12),\n        fb = t * d12 / (d01 + d12),\n        p1x = x1 - fa * (x2 - x0),\n        p1y = y1 - fa * (y2 - y0),\n        p2x = x1 + fb * (x2 - x0),\n        p2y = y1 + fb * (y2 - y0);\n\n      return [p1x, p1y, p2x, p2y];\n    },\n    _expandPoints: function(p, tension) {\n      var len = p.length,\n        allPoints = [],\n        n,\n        cp;\n\n      for (n = 2; n < len - 2; n += 2) {\n        cp = Konva.Util._getControlPoints(\n          p[n - 2],\n          p[n - 1],\n          p[n],\n          p[n + 1],\n          p[n + 2],\n          p[n + 3],\n          tension\n        );\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n      }\n\n      return allPoints;\n    },\n    _removeLastLetter: function(str) {\n      return str.substring(0, str.length - 1);\n    },\n    each: function(obj, func) {\n      for (var key in obj) {\n        func(key, obj[key]);\n      }\n    },\n    _inRange: function(val, left, right) {\n      return left <= val && val < right;\n    },\n    _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n      var x, y, dist;\n\n      var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n      if (pd2 == 0) {\n        x = x1;\n        y = y1;\n        dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n      } else {\n        var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n        if (u < 0) {\n          x = x1;\n          y = y1;\n          dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n        } else if (u > 1.0) {\n          x = x2;\n          y = y2;\n          dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n        } else {\n          x = x1 + u * (x2 - x1);\n          y = y1 + u * (y2 - y1);\n          dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n        }\n      }\n      return [x, y, dist];\n    },\n    // line as array of points.\n    // line might be closed\n    _getProjectionToLine: function(pt, line, isClosed) {\n      var pc = Konva.Util.cloneObject(pt);\n      var dist = Number.MAX_VALUE;\n      line.forEach(function(p1, i) {\n        if (!isClosed && i === line.length - 1) {\n          return;\n        }\n        var p2 = line[(i + 1) % line.length];\n        var proj = Konva.Util._getProjectionToSegment(\n          p1.x,\n          p1.y,\n          p2.x,\n          p2.y,\n          pt.x,\n          pt.y\n        );\n        var px = proj[0],\n          py = proj[1],\n          pdist = proj[2];\n        if (pdist < dist) {\n          pc.x = px;\n          pc.y = py;\n          dist = pdist;\n        }\n      });\n      return pc;\n    },\n    _prepareArrayForTween: function(startArray, endArray, isClosed) {\n      var n,\n        start = [],\n        end = [];\n      if (startArray.length > endArray.length) {\n        var temp = endArray;\n        endArray = startArray;\n        startArray = temp;\n      }\n      for (n = 0; n < startArray.length; n += 2) {\n        start.push({\n          x: startArray[n],\n          y: startArray[n + 1]\n        });\n      }\n      for (n = 0; n < endArray.length; n += 2) {\n        end.push({\n          x: endArray[n],\n          y: endArray[n + 1]\n        });\n      }\n\n      var newStart = [];\n      end.forEach(function(point) {\n        var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n        newStart.push(pr.x);\n        newStart.push(pr.y);\n      });\n      return newStart;\n    },\n    _prepareToStringify: function(obj) {\n      var desc;\n\n      obj.visitedByCircularReferenceRemoval = true;\n\n      for (var key in obj) {\n        if (\n          !(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')\n        ) {\n          continue;\n        }\n        desc = Object.getOwnPropertyDescriptor(obj, key);\n        if (\n          obj[key].visitedByCircularReferenceRemoval ||\n          Konva.Util._isElement(obj[key])\n        ) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        }\n      }\n\n      delete obj.visitedByCircularReferenceRemoval;\n\n      return obj;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  // calculate pixel ratio\n\n  var _pixelRatio;\n  function getDevicePixelRatio() {\n    if (_pixelRatio) {\n      return _pixelRatio;\n    }\n    var canvas = Konva.Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function() {\n      var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n        backingStoreRatio =\n          context.webkitBackingStorePixelRatio ||\n          context.mozBackingStorePixelRatio ||\n          context.msBackingStorePixelRatio ||\n          context.oBackingStorePixelRatio ||\n          context.backingStorePixelRatio ||\n          1;\n      return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n  }\n\n  /**\n     * Canvas Renderer constructor\n     * @constructor\n     * @abstract\n     * @memberof Konva\n     * @param {Object} config\n     * @param {Number} config.width\n     * @param {Number} config.height\n     * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n     */\n  Konva.Canvas = function(config) {\n    this.init(config);\n  };\n\n  Konva.Canvas.prototype = {\n    init: function(config) {\n      var conf = config || {};\n\n      var pixelRatio =\n        conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n\n      this.pixelRatio = pixelRatio;\n      this._canvas = Konva.Util.createCanvasElement();\n\n      // set inline styles\n      this._canvas.style.padding = 0;\n      this._canvas.style.margin = 0;\n      this._canvas.style.border = 0;\n      this._canvas.style.background = 'transparent';\n      this._canvas.style.position = 'absolute';\n      this._canvas.style.top = 0;\n      this._canvas.style.left = 0;\n    },\n    /**\n         * get canvas context\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {CanvasContext} context\n         */\n    getContext: function() {\n      return this.context;\n    },\n    /**\n         * get pixel ratio\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} pixel ratio\n         */\n    getPixelRatio: function() {\n      return this.pixelRatio;\n    },\n    /**\n         * get pixel ratio\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n         *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n         */\n    setPixelRatio: function(pixelRatio) {\n      var previousRatio = this.pixelRatio;\n      this.pixelRatio = pixelRatio;\n      this.setSize(\n        this.getWidth() / previousRatio,\n        this.getHeight() / previousRatio\n      );\n    },\n    /**\n         * set width\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} width\n         */\n    setWidth: function(width) {\n      // take into account pixel ratio\n      this.width = this._canvas.width = width * this.pixelRatio;\n      this._canvas.style.width = width + 'px';\n\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n         * set height\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} height\n         */\n    setHeight: function(height) {\n      // take into account pixel ratio\n      this.height = this._canvas.height = height * this.pixelRatio;\n      this._canvas.style.height = height + 'px';\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n         * get width\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} width\n         */\n    getWidth: function() {\n      return this.width;\n    },\n    /**\n         * get height\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @returns {Number} height\n         */\n    getHeight: function() {\n      return this.height;\n    },\n    /**\n         * set size\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {Number} width\n         * @param {Number} height\n         */\n    setSize: function(width, height) {\n      this.setWidth(width);\n      this.setHeight(height);\n    },\n    /**\n         * to data url\n         * @method\n         * @memberof Konva.Canvas.prototype\n         * @param {String} mimeType\n         * @param {Number} quality between 0 and 1 for jpg mime types\n         * @returns {String} data url string\n         */\n    toDataURL: function(mimeType, quality) {\n      try {\n        // If this call fails (due to browser bug, like in Firefox 3.6),\n        // then revert to previous no-parameter image/png behavior\n        return this._canvas.toDataURL(mimeType, quality);\n      } catch (e) {\n        try {\n          return this._canvas.toDataURL();\n        } catch (err) {\n          Konva.Util.warn('Unable to get data URL. ' + err.message);\n          return '';\n        }\n      }\n    }\n  };\n\n  Konva.SceneCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.SceneContext(this);\n    this.setSize(width, height);\n  };\n\n  Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\n  Konva.HitCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.HitContext(this);\n    this.setSize(width, height);\n    this.hitCanvas = true;\n  };\n  Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n})();\n\n(function() {\n  'use strict';\n  var COMMA = ',',\n    OPEN_PAREN = '(',\n    CLOSE_PAREN = ')',\n    OPEN_PAREN_BRACKET = '([',\n    CLOSE_BRACKET_PAREN = '])',\n    SEMICOLON = ';',\n    DOUBLE_PAREN = '()',\n    // EMPTY_STRING = '',\n    EQUALS = '=',\n    // SET = 'set',\n    CONTEXT_METHODS = [\n      'arc',\n      'arcTo',\n      'beginPath',\n      'bezierCurveTo',\n      'clearRect',\n      'clip',\n      'closePath',\n      'createLinearGradient',\n      'createPattern',\n      'createRadialGradient',\n      'drawImage',\n      'fill',\n      'fillText',\n      'getImageData',\n      'createImageData',\n      'lineTo',\n      'moveTo',\n      'putImageData',\n      'quadraticCurveTo',\n      'rect',\n      'restore',\n      'rotate',\n      'save',\n      'scale',\n      'setLineDash',\n      'setTransform',\n      'stroke',\n      'strokeText',\n      'transform',\n      'translate'\n    ];\n\n  var CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation'\n  ];\n\n  /**\n   * Canvas Context constructor\n   * @constructor\n   * @abstract\n   * @memberof Konva\n   */\n  Konva.Context = function(canvas) {\n    this.init(canvas);\n  };\n\n  Konva.Context.prototype = {\n    init: function(canvas) {\n      this.canvas = canvas;\n      this._context = canvas._canvas.getContext('2d');\n\n      if (Konva.enableTrace) {\n        this.traceArr = [];\n        this._enableTrace();\n      }\n    },\n    /**\n     * fill shape\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    fillShape: function(shape) {\n      if (shape.getFillEnabled()) {\n        this._fill(shape);\n      }\n    },\n    /**\n     * stroke shape\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    strokeShape: function(shape) {\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n     * fill then stroke\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    fillStrokeShape: function(shape) {\n      var fillEnabled = shape.getFillEnabled();\n      if (fillEnabled) {\n        this._fill(shape);\n      }\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n     * get context trace if trace is enabled\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n     *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n     *  properites.\n     * @returns {String}\n     */\n    getTrace: function(relaxed) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n\n        // methods\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Konva.Util._isArray(args[0])) {\n              str +=\n                OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          // properties\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n\n        str += SEMICOLON;\n      }\n\n      return str;\n    },\n    /**\n     * clear trace if trace is enabled\n     * @method\n     * @memberof Konva.Context.prototype\n     */\n    clearTrace: function() {\n      this.traceArr = [];\n    },\n    _trace: function(str) {\n      var traceArr = this.traceArr,\n        len;\n\n      traceArr.push(str);\n      len = traceArr.length;\n\n      if (len >= Konva.traceArrMax) {\n        traceArr.shift();\n      }\n    },\n    /**\n     * reset canvas context transform\n     * @method\n     * @memberof Konva.Context.prototype\n     */\n    reset: function() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    },\n    /**\n     * get canvas\n     * @method\n     * @memberof Konva.Context.prototype\n     * @returns {Konva.Canvas}\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * clear canvas\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     */\n    clear: function(bounds) {\n      var canvas = this.getCanvas();\n\n      if (bounds) {\n        this.clearRect(\n          bounds.x || 0,\n          bounds.y || 0,\n          bounds.width || 0,\n          bounds.height || 0\n        );\n      } else {\n        this.clearRect(\n          0,\n          0,\n          canvas.getWidth() / canvas.pixelRatio,\n          canvas.getHeight() / canvas.pixelRatio\n        );\n      }\n    },\n    _applyLineCap: function(shape) {\n      var lineCap = shape.getLineCap();\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    },\n    _applyOpacity: function(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    },\n    _applyLineJoin: function(shape) {\n      var lineJoin = shape.getLineJoin();\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    },\n    setAttr: function(attr, val) {\n      this._context[attr] = val;\n    },\n\n    // context pass through methods\n    arc: function() {\n      var a = arguments;\n      this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    beginPath: function() {\n      this._context.beginPath();\n    },\n    bezierCurveTo: function() {\n      var a = arguments;\n      this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    clearRect: function() {\n      var a = arguments;\n      this._context.clearRect(a[0], a[1], a[2], a[3]);\n    },\n    clip: function() {\n      this._context.clip();\n    },\n    closePath: function() {\n      this._context.closePath();\n    },\n    createImageData: function() {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a[0], a[1]);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a[0]);\n      }\n    },\n    createLinearGradient: function() {\n      var a = arguments;\n      return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n    },\n    createPattern: function() {\n      var a = arguments;\n      return this._context.createPattern(a[0], a[1]);\n    },\n    createRadialGradient: function() {\n      var a = arguments;\n      return this._context.createRadialGradient(\n        a[0],\n        a[1],\n        a[2],\n        a[3],\n        a[4],\n        a[5]\n      );\n    },\n    drawImage: function() {\n      var a = arguments,\n        _context = this._context;\n\n      if (a.length === 3) {\n        _context.drawImage(a[0], a[1], a[2]);\n      } else if (a.length === 5) {\n        _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n      } else if (a.length === 9) {\n        _context.drawImage(\n          a[0],\n          a[1],\n          a[2],\n          a[3],\n          a[4],\n          a[5],\n          a[6],\n          a[7],\n          a[8]\n        );\n      }\n    },\n    isPointInPath: function(x, y) {\n      return this._context.isPointInPath(x, y);\n    },\n    fill: function() {\n      this._context.fill();\n    },\n    fillRect: function(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    },\n    strokeRect: function(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    },\n    fillText: function() {\n      var a = arguments;\n      this._context.fillText(a[0], a[1], a[2]);\n    },\n    measureText: function(text) {\n      return this._context.measureText(text);\n    },\n    getImageData: function() {\n      var a = arguments;\n      return this._context.getImageData(a[0], a[1], a[2], a[3]);\n    },\n    lineTo: function() {\n      var a = arguments;\n      this._context.lineTo(a[0], a[1]);\n    },\n    moveTo: function() {\n      var a = arguments;\n      this._context.moveTo(a[0], a[1]);\n    },\n    rect: function() {\n      var a = arguments;\n      this._context.rect(a[0], a[1], a[2], a[3]);\n    },\n    putImageData: function() {\n      var a = arguments;\n      this._context.putImageData(a[0], a[1], a[2]);\n    },\n    quadraticCurveTo: function() {\n      var a = arguments;\n      this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n    },\n    restore: function() {\n      this._context.restore();\n    },\n    rotate: function() {\n      var a = arguments;\n      this._context.rotate(a[0]);\n    },\n    save: function() {\n      this._context.save();\n    },\n    scale: function() {\n      var a = arguments;\n      this._context.scale(a[0], a[1]);\n    },\n    setLineDash: function() {\n      var a = arguments,\n        _context = this._context;\n\n      // works for Chrome and IE11\n      if (this._context.setLineDash) {\n        _context.setLineDash(a[0]);\n      } else if ('mozDash' in _context) {\n        // verified that this works in firefox\n        _context.mozDash = a[0];\n      } else if ('webkitLineDash' in _context) {\n        // does not currently work for Safari\n        _context.webkitLineDash = a[0];\n      }\n\n      // no support for IE9 and IE10\n    },\n    getLineDash: function() {\n      return this._context.getLineDash();\n    },\n    setTransform: function() {\n      var a = arguments;\n      this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    stroke: function() {\n      this._context.stroke();\n    },\n    strokeText: function() {\n      var a = arguments;\n      this._context.strokeText(a[0], a[1], a[2]);\n    },\n    transform: function() {\n      var a = arguments;\n      this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    translate: function() {\n      var a = arguments;\n      this._context.translate(a[0], a[1]);\n    },\n    _enableTrace: function() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        _simplifyArray = Konva.Util._simplifyArray,\n        origSetter = this.setAttr,\n        n,\n        args;\n\n      // to prevent creating scope function at each loop\n      var func = function(methodName) {\n        var origMethod = that[methodName],\n          ret;\n\n        that[methodName] = function() {\n          args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n\n          that._trace({\n            method: methodName,\n            args: args\n          });\n\n          return ret;\n        };\n      };\n      // methods\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n\n      // attrs\n      that.setAttr = function() {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (\n          prop === 'shadowOffsetX' ||\n          prop === 'shadowOffsetY' ||\n          prop === 'shadowBlur'\n        ) {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  };\n\n  CONTEXT_PROPERTIES.forEach(function(prop) {\n    Object.defineProperty(Konva.Context.prototype, prop, {\n      get: function() {\n        return this._context[prop];\n      },\n      set: function(val) {\n        this._context[prop] = val;\n      }\n    });\n  });\n\n  Konva.SceneContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.SceneContext.prototype = {\n    _fillColor: function(shape) {\n      var fill = shape.fill();\n\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    },\n    _fillPattern: function(shape) {\n      var fillPatternX = shape.getFillPatternX(),\n        fillPatternY = shape.getFillPatternY(),\n        fillPatternScale = shape.getFillPatternScale(),\n        fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n        fillPatternOffset = shape.getFillPatternOffset();\n\n      if (fillPatternX || fillPatternY) {\n        this.translate(fillPatternX || 0, fillPatternY || 0);\n      }\n      if (fillPatternRotation) {\n        this.rotate(fillPatternRotation);\n      }\n      if (fillPatternScale) {\n        this.scale(fillPatternScale.x, fillPatternScale.y);\n      }\n      if (fillPatternOffset) {\n        this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n      }\n\n      this.setAttr(\n        'fillStyle',\n        this.createPattern(\n          shape.getFillPatternImage(),\n          shape.getFillPatternRepeat() || 'repeat'\n        )\n      );\n      this.fill();\n    },\n    _fillLinearGradient: function(shape) {\n      var start = shape.getFillLinearGradientStartPoint(),\n        end = shape.getFillLinearGradientEndPoint(),\n        colorStops = shape.getFillLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    },\n    _fillRadialGradient: function(shape) {\n      var start = shape.getFillRadialGradientStartPoint(),\n        end = shape.getFillRadialGradientEndPoint(),\n        startRadius = shape.getFillRadialGradientStartRadius(),\n        endRadius = shape.getFillRadialGradientEndRadius(),\n        colorStops = shape.getFillRadialGradientColorStops(),\n        grd = this.createRadialGradient(\n          start.x,\n          start.y,\n          startRadius,\n          end.x,\n          end.y,\n          endRadius\n        );\n\n      // build color stops\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('fillStyle', grd);\n      this.fill();\n    },\n    _fill: function(shape) {\n      var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n\n      // priority fills\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n        return;\n      }\n\n      var hasPattern = shape.getFillPatternImage();\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n        return;\n      }\n\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n        return;\n      }\n\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n        return;\n      }\n\n      // now just try and fill with whatever is available\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    },\n    _strokeLinearGradient: function(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('strokeStyle', grd);\n      }\n    },\n    _stroke: function(shape) {\n      var dash = shape.dash(),\n        // ignore strokeScaleEnabled for Text\n        strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        }\n\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n\n        this.setAttr('lineWidth', shape.strokeWidth());\n\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n\n        // TODO - do we need to make like a fill function?\n\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n\n        shape._strokeFunc(this);\n\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    },\n    _applyShadow: function(shape) {\n      var util = Konva.Util,\n        color = util.get(shape.getShadowRGBA(), 'black'),\n        blur = util.get(shape.getShadowBlur(), 5),\n        offset = util.get(shape.getShadowOffset(), {\n          x: 0,\n          y: 0\n        }),\n        // TODO: get this info from transform??\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n\n      this.setAttr('shadowColor', color);\n      this.setAttr(\n        'shadowBlur',\n        blur * Math.min(Math.abs(scaleX), Math.abs(scaleY))\n      );\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    },\n    _applyGlobalCompositeOperation: function(shape) {\n      var globalCompositeOperation = shape.getGlobalCompositeOperation();\n      if (globalCompositeOperation !== 'source-over') {\n        this.setAttr('globalCompositeOperation', globalCompositeOperation);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\n  Konva.HitContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.HitContext.prototype = {\n    _fill: function(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    },\n    _stroke: function(shape) {\n      if (shape.hasStroke() && shape.strokeHitEnabled()) {\n        // ignore strokeScaleEnabled for Text\n        var strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n        if (!strokeScaleEnabled) {\n          this.save();\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        this._applyLineCap(shape);\n        this.setAttr('lineWidth', shape.strokeWidth());\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  };\n  Konva.Util.extend(Konva.HitContext, Konva.Context);\n})();\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var GET = 'get',\n    SET = 'set';\n\n  Konva.Factory = {\n    addGetterSetter: function(constructor, attr, def, validator, after) {\n      this.addGetter(constructor, attr, def);\n      this.addSetter(constructor, attr, validator, after);\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter: function(constructor, attr, def) {\n      var method = GET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function() {\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n    },\n    addSetter: function(constructor, attr, validator, after) {\n      var method = SET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function(val) {\n        if (validator) {\n          val = validator.call(this, val);\n        }\n\n        this._setAttr(attr, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n    },\n    addComponentsGetterSetter: function(\n      constructor,\n      attr,\n      components,\n      validator,\n      after\n    ) {\n      var len = components.length,\n        capitalize = Konva.Util._capitalize,\n        getter = GET + capitalize(attr),\n        setter = SET + capitalize(attr),\n        n,\n        component;\n\n      // getter\n      constructor.prototype[getter] = function() {\n        var ret = {};\n\n        for (n = 0; n < len; n++) {\n          component = components[n];\n          ret[component] = this.getAttr(attr + capitalize(component));\n        }\n\n        return ret;\n      };\n\n      // setter\n      constructor.prototype[setter] = function(val) {\n        var oldVal = this.attrs[attr],\n          key;\n\n        if (validator) {\n          val = validator.call(this, val);\n        }\n\n        for (key in val) {\n          if (!val.hasOwnProperty(key)) {\n            continue;\n          }\n          this._setAttr(attr + capitalize(key), val[key]);\n        }\n\n        this._fireChangeEvent(attr, oldVal, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter: function(constructor, attr) {\n      var capitalizedAttr = Konva.Util._capitalize(attr),\n        setter = SET + capitalizedAttr,\n        getter = GET + capitalizedAttr;\n\n      constructor.prototype[attr] = function() {\n        // setting\n        if (arguments.length) {\n          this[setter](arguments[0]);\n          return this;\n        }\n        // getting\n        return this[getter]();\n      };\n    },\n    addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n      Konva.Util.error('Adding deprecated ' + attr);\n\n      var method = GET + Konva.Util._capitalize(attr);\n\n      var message =\n        attr +\n        ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n      constructor.prototype[method] = function() {\n        Konva.Util.error(message);\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n      this.addSetter(constructor, attr, validator, function() {\n        Konva.Util.error(message);\n      });\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat: function(constructor, methods) {\n      Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n        var method = constructor.prototype[newMethodName];\n        constructor.prototype[oldMethodName] = function() {\n          method.apply(this, arguments);\n          Konva.Util.error(\n            oldMethodName +\n              ' method is deprecated and will be removed soon. Use ' +\n              newMethodName +\n              ' instead'\n          );\n        };\n      });\n    },\n    afterSetFilter: function() {\n      this._filterUpToDate = false;\n    }\n  };\n\n  Konva.Validators = {\n    /**\n     * @return {number}\n     */\n    RGBComponent: function(val) {\n      if (val > 255) {\n        return 255;\n      } else if (val < 0) {\n        return 0;\n      }\n      return Math.round(val);\n    },\n    alphaComponent: function(val) {\n      if (val > 1) {\n        return 1;\n      } else if (val < 0.0001) {\n        // chrome does not honor alpha values of 0\n        return 0.0001;\n      }\n\n      return val;\n    }\n  };\n})();\n\n(function(Konva) {\n  'use strict';\n  // CONSTANTS\n  var ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    DOT = '.',\n    EMPTY_STRING = '',\n    GET = 'get',\n    ID = 'id',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    CLONE_BLACK_LIST = ['id'],\n    TRANSFORM_CHANGE_STR = [\n      'xChange.konva',\n      'yChange.konva',\n      'scaleXChange.konva',\n      'scaleYChange.konva',\n      'skewXChange.konva',\n      'skewYChange.konva',\n      'rotationChange.konva',\n      'offsetXChange.konva',\n      'offsetYChange.konva',\n      'transformsEnabledChange.konva'\n    ].join(SPACE),\n    SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);\n\n  /**\n   * Node constructor. Nodes are entities that can be transformed, layered,\n   * and have bound events. The stage, layers, groups, and shapes all extend Node.\n   * @constructor\n   * @memberof Konva\n   * @abstract\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   */\n  Konva.Node = function(config) {\n    this._init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Node, {\n    _init: function(config) {\n      this._id = Konva.idCounter++;\n      this.eventListeners = {};\n      this.attrs = {};\n      this._cache = {};\n      this._filterUpToDate = false;\n      this._isUnderCache = false;\n      this.setAttrs(config);\n\n      // event bindings for cache handling\n      this.on(TRANSFORM_CHANGE_STR, function() {\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      });\n\n      this.on(SCALE_CHANGE_STR, function() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n      });\n\n      this.on('visibleChange.konva', function() {\n        this._clearSelfAndDescendantCache(VISIBLE);\n      });\n      this.on('listeningChange.konva', function() {\n        this._clearSelfAndDescendantCache(LISTENING);\n      });\n      this.on('opacityChange.konva', function() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      });\n    },\n    _clearCache: function(attr) {\n      if (attr) {\n        delete this._cache[attr];\n      } else {\n        this._cache = {};\n      }\n    },\n    _getCache: function(attr, privateGetter) {\n      var cache = this._cache[attr];\n\n      // if not cached, we need to set it using the private getter method.\n      if (cache === undefined) {\n        this._cache[attr] = privateGetter.call(this);\n      }\n\n      return this._cache[attr];\n    },\n    /*\n         * when the logic for a cached result depends on ancestor propagation, use this\n         * method to clear self and children cache\n         */\n    _clearSelfAndDescendantCache: function(attr) {\n      this._clearCache(attr);\n\n      if (this.children) {\n        this.getChildren().each(function(node) {\n          node._clearSelfAndDescendantCache(attr);\n        });\n      }\n    },\n    /**\n     * clear cached canvas\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     * @example\n     * node.clearCache();\n     */\n    clearCache: function() {\n      delete this._cache.canvas;\n      this._filterUpToDate = false;\n      return this;\n    },\n    /**\n     *  cache node to improve drawing performance, apply filters, or create more accurate\n     *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n     *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n     *  properties. Look at [https://konvajs.github.io/docs/performance/Shape_Caching.html](link to demo page) for more information.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} [config]\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n     * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n     *  region for debugging purposes\n     * @param {Number} [config.pixelRatio] change quality (or pixel ratio) of cached image. pixelRatio = 2 will produce 2x sized cache.\n     * @returns {Konva.Node}\n     * @example\n     * // cache a shape with the x,y position of the bounding box at the center and\n     * // the width and height of the bounding box equal to the width and height of\n     * // the shape obtained from shape.width() and shape.height()\n     * image.cache();\n     *\n     * // cache a node and define the bounding box position and size\n     * node.cache({\n     *   x: -30,\n     *   y: -30,\n     *   width: 100,\n     *   height: 200\n     * });\n     *\n     * // cache a node and draw a red border around the bounding box\n     * // for debugging purposes\n     * node.cache({\n     *   x: -30,\n     *   y: -30,\n     *   width: 100,\n     *   height: 200,\n     *   offset : 10,\n     *   drawBorder: true\n     * });\n     */\n    cache: function(config) {\n      var conf = config || {},\n        rect = this.getClientRect({\n          skipTransform: true,\n          relativeTo: this.getParent()\n        }),\n        width = conf.width || rect.width,\n        height = conf.height || rect.height,\n        pixelRatio = conf.pixelRatio,\n        x = conf.x || rect.x,\n        y = conf.y || rect.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false;\n\n      if (!width || !height) {\n        // make throw async, because we don't need to stop funcion\n        setTimeout(function() {\n          Konva.Util.throw(\n            'Width or height of caching configuration equals 0. Caching is ignored.'\n          );\n        });\n        return;\n      }\n\n      width += offset * 2;\n      height += offset * 2;\n\n      x -= offset;\n      y -= offset;\n\n      var cachedSceneCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedFilterCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedHitCanvas = new Konva.HitCanvas({\n          pixelRatio: 1,\n          width: width,\n          height: height\n        }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n\n      cachedHitCanvas.isCache = true;\n\n      this.clearCache();\n\n      sceneContext.save();\n      hitContext.save();\n\n      sceneContext.translate(-x, -y);\n      hitContext.translate(-x, -y);\n\n      // extra flag to skip on getAbsolute opacity calc\n      this._isUnderCache = true;\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n      this.drawScene(cachedSceneCanvas, this, true);\n      this.drawHit(cachedHitCanvas, this, true);\n      this._isUnderCache = false;\n\n      sceneContext.restore();\n      hitContext.restore();\n\n      // this will draw a red border around the cached box for\n      // debugging purposes\n      if (drawBorder) {\n        sceneContext.save();\n        sceneContext.beginPath();\n        sceneContext.rect(0, 0, width, height);\n        sceneContext.closePath();\n        sceneContext.setAttr('strokeStyle', 'red');\n        sceneContext.setAttr('lineWidth', 5);\n        sceneContext.stroke();\n        sceneContext.restore();\n      }\n\n      this._cache.canvas = {\n        scene: cachedSceneCanvas,\n        filter: cachedFilterCanvas,\n        hit: cachedHitCanvas,\n        x: x,\n        y: y\n      };\n\n      return this;\n    },\n    /**\n     * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n     * The rectangle position is relative to parent container.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Boolean} [config.skipTransform] should we apply transform to node for calculating rect?\n     * @param {Object} [config.relativeTo] calculate client rect relative to one of the parents\n     * @returns {Object} rect with {x, y, width, height} properties\n     * @example\n     * var rect = new Konva.Rect({\n     *      width : 100,\n     *      height : 100,\n     *      x : 50,\n     *      y : 50,\n     *      strokeWidth : 4,\n     *      stroke : 'black',\n     *      offsetX : 50,\n     *      scaleY : 2\n     * });\n     *\n     * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n     * rect.getClientRect({ skipTransform: true});\n     * // returns {\n     * //     x : -2,   // two pixels for stroke / 2\n     * //     y : -2,\n     * //     width : 104, // increased by 4 for stroke\n     * //     height : 104\n     * //}\n     *\n     * // get client rect with transformation applied\n     * rect.getClientRect();\n     * // returns Object {x: -2, y: 46, width: 104, height: 208}\n     */\n    getClientRect: function() {\n      // abstract method\n      // redefine in Container and Shape\n      throw new Error('abstract \"getClientRect\" method call');\n    },\n    _transformedRect: function(rect, top) {\n      var points = [\n        { x: rect.x, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y + rect.height },\n        { x: rect.x, y: rect.y + rect.height }\n      ];\n      var minX, minY, maxX, maxY;\n      var trans = this.getAbsoluteTransform(top);\n      points.forEach(function(point) {\n        var transformed = trans.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    },\n    _drawCachedSceneCanvas: function(context) {\n      context.save();\n      context._applyOpacity(this);\n      context._applyGlobalCompositeOperation(this);\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n\n      var cacheCanvas = this._getCachedSceneCanvas();\n      var ratio = cacheCanvas.pixelRatio;\n\n      context.drawImage(\n        cacheCanvas._canvas,\n        0,\n        0,\n        cacheCanvas.width / ratio,\n        cacheCanvas.height / ratio\n      );\n      context.restore();\n    },\n    _drawCachedHitCanvas: function(context) {\n      var cachedCanvas = this._cache.canvas,\n        hitCanvas = cachedCanvas.hit;\n      context.save();\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n      context.drawImage(hitCanvas._canvas, 0, 0);\n      context.restore();\n    },\n    _getCachedSceneCanvas: function() {\n      var filters = this.filters(),\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n      if (filters) {\n        if (!this._filterUpToDate) {\n          var ratio = sceneCanvas.pixelRatio;\n\n          try {\n            len = filters.length;\n            filterContext.clear();\n\n            // copy cached canvas onto filter context\n            filterContext.drawImage(\n              sceneCanvas._canvas,\n              0,\n              0,\n              sceneCanvas.getWidth() / ratio,\n              sceneCanvas.getHeight() / ratio\n            );\n            imageData = filterContext.getImageData(\n              0,\n              0,\n              filterCanvas.getWidth(),\n              filterCanvas.getHeight()\n            );\n\n            // apply filters to filter context\n            for (n = 0; n < len; n++) {\n              filter = filters[n];\n              if (typeof filter !== 'function') {\n                Konva.Util.error(\n                  'Filter should be type of function, but got ' +\n                    typeof filter +\n                    ' insted. Please check correct filters'\n                );\n                continue;\n              }\n              filter.call(this, imageData);\n              filterContext.putImageData(imageData, 0, 0);\n            }\n          } catch (e) {\n            Konva.Util.error('Unable to apply filter. ' + e.message);\n          }\n\n          this._filterUpToDate = true;\n        }\n\n        return filterCanvas;\n      }\n      return sceneCanvas;\n    },\n    /**\n     * bind events to the node. KonvaJS supports mouseover, mousemove,\n     *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, contextmenu, click, dblclick, touchstart, touchmove,\n     *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n     *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel, contentContextmenu\n     *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n     *  and contentDblTap.  Pass in a string of events delimited by a space to bind multiple events at once\n     *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n     *  event by name such as 'click.foobar'.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n     * @param {Function} handler The handler function is passed an event object\n     * @returns {Konva.Node}\n     * @example\n     * // add click listener\n     * node.on('click', function() {\n     *   console.log('you clicked me!');\n     * });\n     *\n     * // get the target node\n     * node.on('click', function(evt) {\n     *   console.log(evt.target);\n     * });\n     *\n     * // stop event propagation\n     * node.on('click', function(evt) {\n     *   evt.cancelBubble = true;\n     * });\n     *\n     * // bind multiple listeners\n     * node.on('click touchstart', function() {\n     *   console.log('you clicked/touched me!');\n     * });\n     *\n     * // namespace listener\n     * node.on('click.foo', function() {\n     *   console.log('you clicked/touched me!');\n     * });\n     *\n     * // get the event type\n     * node.on('click tap', function(evt) {\n     *   var eventType = evt.type;\n     * });\n     *\n     * // get native event object\n     * node.on('click tap', function(evt) {\n     *   var nativeEvent = evt.evt;\n     * });\n     *\n     * // for change events, get the old and new val\n     * node.on('xChange', function(evt) {\n     *   var oldVal = evt.oldVal;\n     *   var newVal = evt.newVal;\n     * });\n     *\n     * // get event targets\n     * // with event delegations\n     * layer.on('click', 'Group', function(evt) {\n     *   var shape = evt.target;\n     *   var group = evtn.currentTarger;\n     * });\n     */\n    on: function(evtStr, handler) {\n      if (arguments.length === 3) {\n        return this._delegate.apply(this, arguments);\n      }\n      var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      /*\n             * loop through types and attach event listeners to\n             * each one.  eg. 'click mouseover.namespace mouseout'\n             * will create three event bindings\n             */\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1] || EMPTY_STRING;\n\n        // create events array if it doesn't exist\n        if (!this.eventListeners[baseEvent]) {\n          this.eventListeners[baseEvent] = [];\n        }\n\n        this.eventListeners[baseEvent].push({\n          name: name,\n          handler: handler\n        });\n      }\n\n      return this;\n    },\n    /**\n     * remove event bindings from the node. Pass in a string of\n     *  event types delimmited by a space to remove multiple event\n     *  bindings at once such as 'mousedown mouseup mousemove'.\n     *  include a namespace to remove an event binding by name\n     *  such as 'click.foobar'. If you only give a name like '.foobar',\n     *  all events in that namespace will be removed.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n     * @returns {Konva.Node}\n     * @example\n     * // remove listener\n     * node.off('click');\n     *\n     * // remove multiple listeners\n     * node.off('click touchstart');\n     *\n     * // remove listener by name\n     * node.off('click.foo');\n     */\n    off: function(evtStr, callback) {\n      var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      if (!evtStr) {\n        // remove all events\n        for (t in this.eventListeners) {\n          this._off(t);\n        }\n      }\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1];\n\n        if (baseEvent) {\n          if (this.eventListeners[baseEvent]) {\n            this._off(baseEvent, name, callback);\n          }\n        } else {\n          for (t in this.eventListeners) {\n            this._off(t, name, callback);\n          }\n        }\n      }\n      return this;\n    },\n    // some event aliases for third party integration like HammerJS\n    dispatchEvent: function(evt) {\n      var e = {\n        target: this,\n        type: evt.type,\n        evt: evt\n      };\n      this.fire(evt.type, e);\n      return this;\n    },\n    addEventListener: function(type, handler) {\n      // we have to pass native event to handler\n      this.on(type, function(evt) {\n        handler.call(this, evt.evt);\n      });\n      return this;\n    },\n    removeEventListener: function(type) {\n      this.off(type);\n      return this;\n    },\n    // like node.on\n    _delegate: function(event, selector, handler) {\n      var stopNode = this;\n      this.on(event, function(evt) {\n        var targets = evt.target.findAncestors(selector, true, stopNode);\n        for (var i = 0; i < targets.length; i++) {\n          evt = Konva.Util.cloneObject(evt);\n          evt.currentTarget = targets[i];\n          handler.call(targets[i], evt);\n        }\n      });\n    },\n    /**\n     * remove self from parent, but don't destroy\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     * @example\n     * node.remove();\n     */\n    remove: function() {\n      var parent = this.getParent();\n\n      if (parent && parent.children) {\n        parent.children.splice(this.index, 1);\n        parent._setChildrenIndices();\n        delete this.parent;\n      }\n\n      // every cached attr that is calculated via node tree\n      // traversal must be cleared when removing a node\n      this._clearSelfAndDescendantCache(STAGE);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      this._clearSelfAndDescendantCache(VISIBLE);\n      this._clearSelfAndDescendantCache(LISTENING);\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n      return this;\n    },\n    /**\n     * remove and destroy self\n     * @method\n     * @memberof Konva.Node.prototype\n     * @example\n     * node.destroy();\n     */\n    destroy: function() {\n      // remove from ids and names hashes\n      Konva._removeId(this.getId());\n\n      // remove all names\n      var names = (this.getName() || '').split(/\\s/g);\n      for (var i = 0; i < names.length; i++) {\n        var subname = names[i];\n        Konva._removeName(subname, this._id);\n      }\n\n      this.remove();\n      return this;\n    },\n    /**\n     * get attr\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} attr\n     * @returns {Integer|String|Object|Array}\n     * @example\n     * var x = node.getAttr('x');\n     */\n    getAttr: function(attr) {\n      var method = GET + Konva.Util._capitalize(attr);\n      if (Konva.Util._isFunction(this[method])) {\n        return this[method]();\n      }\n      // otherwise get directly\n      return this.attrs[attr];\n    },\n    /**\n     * get ancestors\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Collection}\n     * @example\n     * shape.getAncestors().each(function(node) {\n     *   console.log(node.getId());\n     * })\n     */\n    getAncestors: function() {\n      var parent = this.getParent(),\n        ancestors = new Konva.Collection();\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent.getParent();\n      }\n\n      return ancestors;\n    },\n    /**\n     * get attrs object literal\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    getAttrs: function() {\n      return this.attrs || {};\n    },\n    /**\n     * set multiple attrs at once using an object literal\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config object containing key value pairs\n     * @returns {Konva.Node}\n     * @example\n     * node.setAttrs({\n     *   x: 5,\n     *   fill: 'red'\n     * });\n     */\n    setAttrs: function(config) {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n        method = SET + Konva.Util._capitalize(key);\n        // use setter if available\n        if (Konva.Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          // otherwise set directly\n          this._setAttr(key, config[key]);\n        }\n      }\n      return this;\n    },\n    /**\n     * determine if node is listening for events by taking into account ancestors.\n     *\n     * Parent    | Self      | isListening\n     * listening | listening |\n     * ----------+-----------+------------\n     * T         | T         | T\n     * T         | F         | F\n     * F         | T         | T\n     * F         | F         | F\n     * ----------+-----------+------------\n     * T         | I         | T\n     * F         | I         | F\n     * I         | I         | T\n     *\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    isListening: function() {\n      return this._getCache(LISTENING, this._isListening);\n    },\n    _isListening: function() {\n      var listening = this.getListening(),\n        parent = this.getParent();\n\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (listening === 'inherit') {\n        if (parent) {\n          return parent.isListening();\n        } else {\n          return true;\n        }\n      } else {\n        return listening;\n      }\n    },\n    /**\n     * determine if node is visible by taking into account ancestors.\n     *\n     * Parent    | Self      | isVisible\n     * visible   | visible   |\n     * ----------+-----------+------------\n     * T         | T         | T\n     * T         | F         | F\n     * F         | T         | T\n     * F         | F         | F\n     * ----------+-----------+------------\n     * T         | I         | T\n     * F         | I         | F\n     * I         | I         | T\n\n      * @method\n      * @memberof Konva.Node.prototype\n      * @returns {Boolean}\n      */\n    isVisible: function() {\n      return this._getCache(VISIBLE, this._isVisible);\n    },\n    _isVisible: function() {\n      var visible = this.getVisible(),\n        parent = this.getParent();\n\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (visible === 'inherit') {\n        if (parent) {\n          return parent.isVisible();\n        } else {\n          return true;\n        }\n      } else {\n        return visible;\n      }\n    },\n    /**\n     * determine if listening is enabled by taking into account descendants.  If self or any children\n     * have _isListeningEnabled set to true, then self also has listening enabled.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    shouldDrawHit: function(canvas) {\n      var layer = this.getLayer();\n      return (\n        (canvas && canvas.isCache) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isListening() &&\n          this.isVisible())\n      );\n    },\n    /**\n     * show node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    show: function() {\n      this.setVisible(true);\n      return this;\n    },\n    /**\n     * hide node.  Hidden nodes are no longer detectable\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    hide: function() {\n      this.setVisible(false);\n      return this;\n    },\n    /**\n     * get zIndex relative to the node's siblings who share the same parent\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getZIndex: function() {\n      return this.index || 0;\n    },\n    /**\n     * get absolute z-index which takes into account sibling\n     *  and ancestor indices\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getAbsoluteZIndex: function() {\n      var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n      function addChildren(children) {\n        nodes = [];\n        len = children.length;\n        for (n = 0; n < len; n++) {\n          child = children[n];\n          index++;\n\n          if (child.nodeType !== SHAPE) {\n            nodes = nodes.concat(child.getChildren().toArray());\n          }\n\n          if (child._id === that._id) {\n            n = len;\n          }\n        }\n\n        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n          addChildren(nodes);\n        }\n      }\n      if (that.nodeType !== UPPER_STAGE) {\n        addChildren(that.getStage().getChildren());\n      }\n\n      return index;\n    },\n    /**\n     * get node depth in node tree.  Returns an integer.\n     *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n     *  be >= 2\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getDepth: function() {\n      var depth = 0,\n        parent = this.parent;\n\n      while (parent) {\n        depth++;\n        parent = parent.parent;\n      }\n      return depth;\n    },\n    setPosition: function(pos) {\n      this.setX(pos.x);\n      this.setY(pos.y);\n      return this;\n    },\n    getPosition: function() {\n      return {\n        x: this.getX(),\n        y: this.getY()\n      };\n    },\n    /**\n     * get absolute position relative to the top left corner of the stage container div\n     * or relative to passed node\n     * @method\n     * @param {Object} [top] optional parent node\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    getAbsolutePosition: function(top) {\n      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Konva.Transform(),\n        offset = this.offset();\n\n      // clone the matrix array\n      absoluteTransform.m = absoluteMatrix.slice();\n      absoluteTransform.translate(offset.x, offset.y);\n\n      return absoluteTransform.getTranslation();\n    },\n    /**\n     * set absolute position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Konva.Node}\n     */\n    setAbsolutePosition: function(pos) {\n      var origTrans = this._clearTransform(),\n        it;\n\n      // don't clear translation\n      this.attrs.x = origTrans.x;\n      this.attrs.y = origTrans.y;\n      delete origTrans.x;\n      delete origTrans.y;\n\n      // unravel transform\n      it = this.getAbsoluteTransform();\n\n      it.invert();\n      it.translate(pos.x, pos.y);\n      pos = {\n        x: this.attrs.x + it.getTranslation().x,\n        y: this.attrs.y + it.getTranslation().y\n      };\n\n      this.setPosition({ x: pos.x, y: pos.y });\n      this._setTransform(origTrans);\n\n      return this;\n    },\n    _setTransform: function(trans) {\n      var key;\n\n      for (key in trans) {\n        this.attrs[key] = trans[key];\n      }\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    },\n    _clearTransform: function() {\n      var trans = {\n        x: this.getX(),\n        y: this.getY(),\n        rotation: this.getRotation(),\n        scaleX: this.getScaleX(),\n        scaleY: this.getScaleY(),\n        offsetX: this.getOffsetX(),\n        offsetY: this.getOffsetY(),\n        skewX: this.getSkewX(),\n        skewY: this.getSkewY()\n      };\n\n      this.attrs.x = 0;\n      this.attrs.y = 0;\n      this.attrs.rotation = 0;\n      this.attrs.scaleX = 1;\n      this.attrs.scaleY = 1;\n      this.attrs.offsetX = 0;\n      this.attrs.offsetY = 0;\n      this.attrs.skewX = 0;\n      this.attrs.skewY = 0;\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n      // return original transform\n      return trans;\n    },\n    /**\n     * move node by an amount relative to its current position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} change\n     * @param {Number} change.x\n     * @param {Number} change.y\n     * @returns {Konva.Node}\n     * @example\n     * // move node in x direction by 1px and y direction by 2px\n     * node.move({\n     *   x: 1,\n     *   y: 2)\n     * });\n     */\n    move: function(change) {\n      var changeX = change.x,\n        changeY = change.y,\n        x = this.getX(),\n        y = this.getY();\n\n      if (changeX !== undefined) {\n        x += changeX;\n      }\n\n      if (changeY !== undefined) {\n        y += changeY;\n      }\n\n      this.setPosition({ x: x, y: y });\n      return this;\n    },\n    _eachAncestorReverse: function(func, top) {\n      var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n      // if top node is defined, and this node is top node,\n      // there's no need to build a family tree.  just execute\n      // func with this because it will be the only node\n      if (top && top._id === this._id) {\n        func(this);\n        return true;\n      }\n\n      family.unshift(this);\n\n      while (parent && (!top || parent._id !== top._id)) {\n        family.unshift(parent);\n        parent = parent.parent;\n      }\n\n      len = family.length;\n      for (n = 0; n < len; n++) {\n        func(family[n]);\n      }\n    },\n    /**\n     * rotate node by an amount in degrees relative to its current rotation\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} theta\n     * @returns {Konva.Node}\n     */\n    rotate: function(theta) {\n      this.setRotation(this.getRotation() + theta);\n      return this;\n    },\n    /**\n     * move node to the top of its siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveToTop: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n      this.parent._setChildrenIndices();\n      return true;\n    },\n    /**\n     * move node up\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean} flag is moved or not\n     */\n    moveUp: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n        return false;\n      }\n      var index = this.index,\n        len = this.parent.getChildren().length;\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * move node down\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveDown: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * move node to the bottom of its siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveToBottom: function() {\n      if (!this.parent) {\n        Konva.Util.warn(\n          'Node has no parent. moveToBottom function is ignored.'\n        );\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.unshift(this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * set zIndex relative to siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Integer} zIndex\n     * @returns {Konva.Node}\n     */\n    setZIndex: function(zIndex) {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(zIndex, 0, this);\n      this.parent._setChildrenIndices();\n      return this;\n    },\n    /**\n     * get absolute opacity\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     */\n    getAbsoluteOpacity: function() {\n      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    },\n    _getAbsoluteOpacity: function() {\n      var absOpacity = this.getOpacity();\n      var parent = this.getParent();\n      if (parent && !parent._isUnderCache) {\n        absOpacity *= this.getParent().getAbsoluteOpacity();\n      }\n      return absOpacity;\n    },\n    /**\n     * move node to another container\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Container} newContainer\n     * @returns {Konva.Node}\n     * @example\n     * // move node from current layer into layer2\n     * node.moveTo(layer2);\n     */\n    moveTo: function(newContainer) {\n      // do nothing if new container is already parent\n      if (this.getParent() !== newContainer) {\n        // this.remove my be overrided by drag and drop\n        // buy we need original\n        (this.__originalRemove || this.remove).call(this);\n        newContainer.add(this);\n      }\n      return this;\n    },\n    /**\n     * convert Node into an object for serialization.  Returns an object.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    toObject: function() {\n      var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue;\n\n      obj.attrs = {};\n\n      for (key in attrs) {\n        val = attrs[key];\n        getter = this[key];\n        // remove attr value so that we can extract the default value from the getter\n        delete attrs[key];\n        defaultValue = getter ? getter.call(this) : null;\n        // restore attr value\n        attrs[key] = val;\n        if (defaultValue !== val) {\n          obj.attrs[key] = val;\n        }\n      }\n\n      obj.className = this.getClassName();\n      return Konva.Util._prepareToStringify(obj);\n    },\n    /**\n     * convert Node into a JSON string.  Returns a JSON string.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}}\n     */\n    toJSON: function() {\n      return JSON.stringify(this.toObject());\n    },\n    /**\n     * get parent container\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    getParent: function() {\n      return this.parent;\n    },\n    /**\n     * get all ancestros (parent then parent of the parent, etc) of the node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} [selector] selector for search\n     * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n     * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n     * @returns {Array} [ancestors]\n     * @example\n     * // get one of the parent group\n     * var parentGroups = node.findAncestors('Group');\n     */\n    findAncestors: function(selector, includeSelf, stopNode) {\n      var res = [];\n\n      if (includeSelf && this._isMatch(selector)) {\n        res.push(this);\n      }\n      var ancestor = this.parent;\n      while (ancestor) {\n        if (ancestor === stopNode) {\n          return res;\n        }\n        if (ancestor._isMatch(selector)) {\n          res.push(ancestor);\n        }\n        ancestor = ancestor.parent;\n      }\n      return res;\n    },\n    /**\n     * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} [selector] selector for search\n     * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n     * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n     * @returns {Konva.Node} ancestor\n     * @example\n     * // get one of the parent group\n     * var group = node.findAncestors('.mygroup');\n     */\n    findAncestor: function(selector, includeSelf, stopNode) {\n      return this.findAncestors(selector, includeSelf, stopNode)[0];\n    },\n    // is current node match passed selector?\n    _isMatch: function(selector) {\n      if (!selector) {\n        return false;\n      }\n      var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          Konva.Util.warn(\n            'Selector \"' +\n              sel +\n              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n          );\n          Konva.Util.warn(\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n          );\n          Konva.Util.warn('Konva is awesome, right?');\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          if (this.id() === sel.slice(1)) {\n            return true;\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          if (this.hasName(sel.slice(1))) {\n            return true;\n          }\n        } else if (this._get(sel).length !== 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * get layer ancestor\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Layer}\n     */\n    getLayer: function() {\n      var parent = this.getParent();\n      return parent ? parent.getLayer() : null;\n    },\n    /**\n     * get stage ancestor\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Stage}\n     */\n    getStage: function() {\n      return this._getCache(STAGE, this._getStage);\n    },\n    _getStage: function() {\n      var parent = this.getParent();\n      if (parent) {\n        return parent.getStage();\n      } else {\n        return undefined;\n      }\n    },\n    /**\n     * fire event\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n     * @param {Event} [evt] event object\n     * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n     *  not bubbling.  Setting the value to true will result in the event bubbling.\n     * @returns {Konva.Node}\n     * @example\n     * // manually fire click event\n     * node.fire('click');\n     *\n     * // fire custom event\n     * node.fire('foo');\n     *\n     * // fire custom event with custom event object\n     * node.fire('foo', {\n     *   bar: 10\n     * });\n     *\n     * // fire click event that bubbles\n     * node.fire('click', null, true);\n     */\n    fire: function(eventType, evt, bubble) {\n      evt = evt || {};\n      evt.target = evt.target || this;\n      // bubble\n      if (bubble) {\n        this._fireAndBubble(eventType, evt);\n      } else {\n        // no bubble\n        this._fire(eventType, evt);\n      }\n      return this;\n    },\n    /**\n     * get absolute transform of the node which takes into\n     *  account its ancestor transforms\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getAbsoluteTransform: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteTransform(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n      }\n    },\n    _getAbsoluteTransform: function(top) {\n      var at = new Konva.Transform(),\n        transformsEnabled,\n        trans;\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        transformsEnabled = node.transformsEnabled();\n        trans = node.getTransform();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(trans);\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x(), node.y());\n        }\n      }, top);\n      return at;\n    },\n    /**\n     * get absolute scale of the node which takes into\n     *  account its ancestor scales\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getAbsoluteScale: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteScale(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n      }\n    },\n    _getAbsoluteScale: function(top) {\n      // this is special logic for caching with some shapes with shadow\n      var parent = this;\n      while (parent) {\n        if (parent._isUnderCache) {\n          top = parent;\n        }\n        parent = parent.getParent();\n      }\n\n      var scaleX = 1,\n        scaleY = 1;\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        scaleX *= node.scaleX();\n        scaleY *= node.scaleY();\n      }, top);\n      return {\n        x: scaleX,\n        y: scaleY\n      };\n    },\n    /**\n     * get transform of the node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getTransform: function() {\n      return this._getCache(TRANSFORM, this._getTransform);\n    },\n    _getTransform: function() {\n      var m = new Konva.Transform(),\n        x = this.getX(),\n        y = this.getY(),\n        rotation = Konva.getAngle(this.getRotation()),\n        scaleX = this.getScaleX(),\n        scaleY = this.getScaleY(),\n        skewX = this.getSkewX(),\n        skewY = this.getSkewY(),\n        offsetX = this.getOffsetX(),\n        offsetY = this.getOffsetY();\n\n      if (x !== 0 || y !== 0) {\n        m.translate(x, y);\n      }\n      if (rotation !== 0) {\n        m.rotate(rotation);\n      }\n      if (skewX !== 0 || skewY !== 0) {\n        m.skew(skewX, skewY);\n      }\n      if (scaleX !== 1 || scaleY !== 1) {\n        m.scale(scaleX, scaleY);\n      }\n      if (offsetX !== 0 || offsetY !== 0) {\n        m.translate(-1 * offsetX, -1 * offsetY);\n      }\n\n      return m;\n    },\n    /**\n     * clone node.  Returns a new Node instance with identical attributes.  You can also override\n     *  the node properties with an object literal, enabling you to use an existing node as a template\n     *  for another node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} obj override attrs\n     * @returns {Konva.Node}\n     * @example\n     * // simple clone\n     * var clone = node.clone();\n     *\n     * // clone a node and override the x position\n     * var clone = rect.clone({\n     *   x: 5\n     * });\n     */\n    clone: function(obj) {\n      // instantiate new node\n      var attrs = Konva.Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n      // filter black attrs\n      for (var i in CLONE_BLACK_LIST) {\n        var blockAttr = CLONE_BLACK_LIST[i];\n        delete attrs[blockAttr];\n      }\n      // apply attr overrides\n      for (key in obj) {\n        attrs[key] = obj[key];\n      }\n\n      var node = new this.constructor(attrs);\n      // copy over listeners\n      for (key in this.eventListeners) {\n        allListeners = this.eventListeners[key];\n        len = allListeners.length;\n        for (n = 0; n < len; n++) {\n          listener = allListeners[n];\n          /*\n                     * don't include konva namespaced listeners because\n                     *  these are generated by the constructors\n                     */\n          if (listener.name.indexOf(KONVA) < 0) {\n            // if listeners array doesn't exist, then create it\n            if (!node.eventListeners[key]) {\n              node.eventListeners[key] = [];\n            }\n            node.eventListeners[key].push(listener);\n          }\n        }\n      }\n      return node;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n\n      var stage = this.getStage(),\n        x = config.x || 0,\n        y = config.y || 0,\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new Konva.SceneCanvas({\n          width:\n            config.width || this.getWidth() || (stage ? stage.getWidth() : 0),\n          height:\n            config.height ||\n            this.getHeight() ||\n            (stage ? stage.getHeight() : 0),\n          pixelRatio: pixelRatio\n        }),\n        context = canvas.getContext();\n\n      context.save();\n\n      if (x || y) {\n        context.translate(-1 * x, -1 * y);\n      }\n\n      this.drawScene(canvas);\n      context.restore();\n\n      return canvas;\n    },\n    /**\n     * converts node into an canvas element.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n     * @example\n     * var canvas = node.toCanvas();\n     */\n    toCanvas: function(config) {\n      return this._toKonvaCanvas(config)._canvas;\n    },\n    /**\n     * Creates a composite data URL. If MIME type is not\n     * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n     * level as quality (range 0.0 - 1.0)\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     * @param {Number} [config.pixelRatio] pixelRatio of output image url. Default is 1\n     * @returns {String}\n     */\n    toDataURL: function(config) {\n      config = config || {};\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n      return this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n    },\n    /**\n     * converts node into an image.  Since the toImage\n     *  method is asynchronous, a callback is required.  toImage is most commonly used\n     *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n     * @example\n     * var image = node.toImage({\n     *   callback: function(img) {\n     *     // do stuff with img\n     *   }\n     * });\n     */\n    toImage: function(config) {\n      if (!config || !config.callback) {\n        throw 'callback required for toImage method config argument';\n      }\n      Konva.Util._getImage(this.toDataURL(config), function(img) {\n        config.callback(img);\n      });\n    },\n    setSize: function(size) {\n      this.setWidth(size.width);\n      this.setHeight(size.height);\n      return this;\n    },\n    getSize: function() {\n      return {\n        width: this.getWidth(),\n        height: this.getHeight()\n      };\n    },\n    getWidth: function() {\n      return this.attrs.width || 0;\n    },\n    getHeight: function() {\n      return this.attrs.height || 0;\n    },\n    /**\n     * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}\n     */\n    getClassName: function() {\n      return this.className || this.nodeType;\n    },\n    /**\n     * get the node type, which may return Stage, Layer, Group, or Node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}\n     */\n    getType: function() {\n      return this.nodeType;\n    },\n    getDragDistance: function() {\n      // compare with undefined because we need to track 0 value\n      if (this.attrs.dragDistance !== undefined) {\n        return this.attrs.dragDistance;\n      } else if (this.parent) {\n        return this.parent.getDragDistance();\n      } else {\n        return Konva.dragDistance;\n      }\n    },\n    _get: function(selector) {\n      return this.className === selector || this.nodeType === selector\n        ? [this]\n        : [];\n    },\n    _off: function(type, name, callback) {\n      var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n\n      for (i = 0; i < evtListeners.length; i++) {\n        evtName = evtListeners[i].name;\n        handler = evtListeners[i].handler;\n\n        // the following two conditions must be true in order to remove a handler:\n        // 1) the current event name cannot be konva unless the event name is konva\n        //    this enables developers to force remove a konva specific listener for whatever reason\n        // 2) an event name is not specified, or if one is specified, it matches the current event name\n        if (\n          (evtName !== 'konva' || name === 'konva') &&\n          (!name || evtName === name) &&\n          (!callback || callback === handler)\n        ) {\n          evtListeners.splice(i, 1);\n          if (evtListeners.length === 0) {\n            delete this.eventListeners[type];\n            break;\n          }\n          i--;\n        }\n      }\n    },\n    _fireChangeEvent: function(attr, oldVal, newVal) {\n      this._fire(attr + CHANGE, {\n        oldVal: oldVal,\n        newVal: newVal\n      });\n    },\n    setId: function(id) {\n      var oldId = this.getId();\n\n      Konva._removeId(oldId);\n      Konva._addId(this, id);\n      this._setAttr(ID, id);\n      return this;\n    },\n    setName: function(name) {\n      var oldNames = (this.getName() || '').split(/\\s/g);\n      var newNames = (name || '').split(/\\s/g);\n      var subname, i;\n      // remove all subnames\n      for (i = 0; i < oldNames.length; i++) {\n        subname = oldNames[i];\n        if (newNames.indexOf(subname) === -1 && subname) {\n          Konva._removeName(subname, this._id);\n        }\n      }\n\n      // add new names\n      for (i = 0; i < newNames.length; i++) {\n        subname = newNames[i];\n        if (oldNames.indexOf(subname) === -1 && subname) {\n          Konva._addName(this, subname);\n        }\n      }\n\n      this._setAttr(NAME, name);\n      return this;\n    },\n    // naming methods\n    /**\n     * add name to node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Konva.Node}\n     * @example\n     * node.name('red');\n     * node.addName('selected');\n     * node.name(); // return 'red selected'\n     */\n    addName: function(name) {\n      if (!this.hasName(name)) {\n        var oldName = this.name();\n        var newName = oldName ? oldName + ' ' + name : name;\n        this.setName(newName);\n      }\n      return this;\n    },\n    /**\n     * check is node has name\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Boolean}\n     * @example\n     * node.name('red');\n     * node.hasName('red');   // return true\n     * node.hasName('selected'); // return false\n     */\n    hasName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      return names.indexOf(name) !== -1;\n    },\n    /**\n     * remove name from node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Konva.Node}\n     * @example\n     * node.name('red selected');\n     * node.removeName('selected');\n     * node.hasName('selected'); // return false\n     * node.name(); // return 'red'\n     */\n    removeName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      var index = names.indexOf(name);\n      if (index !== -1) {\n        names.splice(index, 1);\n        this.setName(names.join(' '));\n      }\n      return this;\n    },\n    /**\n     * set attr\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} attr\n     * @param {*} val\n     * @returns {Konva.Node}\n     * @example\n     * node.setAttr('x', 5);\n     */\n    setAttr: function(attr, val) {\n      var method = SET + Konva.Util._capitalize(attr),\n        func = this[method];\n\n      if (Konva.Util._isFunction(func)) {\n        func.call(this, val);\n      } else {\n        // otherwise set directly\n        this._setAttr(attr, val);\n      }\n      return this;\n    },\n    _setAttr: function(key, val) {\n      var oldVal;\n      oldVal = this.attrs[key];\n      var same = oldVal === val;\n      if (same && !Konva.Util.isObject(val)) {\n        return;\n      }\n      if (val === undefined || val === null) {\n        delete this.attrs[key];\n      } else {\n        this.attrs[key] = val;\n      }\n      this._fireChangeEvent(key, oldVal, val);\n    },\n    _setComponentAttr: function(key, component, val) {\n      var oldVal;\n      if (val !== undefined) {\n        oldVal = this.attrs[key];\n\n        if (!oldVal) {\n          // set value to default value using getAttr\n          this.attrs[key] = this.getAttr(key);\n        }\n\n        this.attrs[key][component] = val;\n        this._fireChangeEvent(key, oldVal, val);\n      }\n    },\n    _fireAndBubble: function(eventType, evt, compareShape) {\n      var okayToRun = true;\n\n      if (evt && this.nodeType === SHAPE) {\n        evt.target = this;\n      }\n\n      if (\n        eventType === MOUSEENTER &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      } else if (\n        eventType === MOUSELEAVE &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      }\n      if (okayToRun) {\n        this._fire(eventType, evt);\n\n        // simulate event bubbling\n        var stopBubble =\n          (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n          (compareShape &&\n            compareShape.isAncestorOf &&\n            compareShape.isAncestorOf(this) &&\n            !compareShape.isAncestorOf(this.parent));\n        if (\n          ((evt && !evt.cancelBubble) || !evt) &&\n          this.parent &&\n          this.parent.isListening() &&\n          !stopBubble\n        ) {\n          if (compareShape && compareShape.parent) {\n            this._fireAndBubble.call(\n              this.parent,\n              eventType,\n              evt,\n              compareShape.parent\n            );\n          } else {\n            this._fireAndBubble.call(this.parent, eventType, evt);\n          }\n        }\n      }\n    },\n    _fire: function(eventType, evt) {\n      var events = this.eventListeners[eventType],\n        i;\n\n      evt = evt || {};\n      evt.currentTarget = this;\n      evt.type = eventType;\n\n      if (events) {\n        for (i = 0; i < events.length; i++) {\n          events[i].handler.call(this, evt);\n        }\n      }\n    },\n    /**\n     * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    draw: function() {\n      this.drawScene();\n      this.drawHit();\n      return this;\n    }\n  });\n\n  /**\n   * create node with JSON string or an Object.  De-serializtion does not generate custom\n   *  shape drawing functions, images, or event handlers (this would make the\n   *  serialized object huge).  If your app uses custom shapes, images, and\n   *  event handlers (it probably does), then you need to select the appropriate\n   *  shapes after loading the stage and set these properties via on(), setDrawFunc(),\n   *  and setImage() methods\n   * @method\n   * @memberof Konva.Node\n   * @param {String|Object} json string or object\n   * @param {Element} [container] optional container dom element used only if you're\n   *  creating a stage node\n   */\n  Konva.Node.create = function(data, container) {\n    if (Konva.Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n    return this._createNode(data, container);\n  };\n  Konva.Node._createNode = function(obj, container) {\n    var className = Konva.Node.prototype.getClassName.call(obj),\n      children = obj.children,\n      no,\n      len,\n      n;\n\n    // if container was passed in, add it to attrs\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    no = new Konva[className](obj.attrs);\n    if (children) {\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        no.add(this._createNode(children[n]));\n      }\n    }\n\n    return no;\n  };\n\n  // =========================== add getters setters ===========================\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n  /**\n   * get/set node position relative to parent\n   * @name position\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} pos\n   * @param {Number} pos.x\n   * @param {Number} pos.y\n   * @returns {Object}\n   * @example\n   * // get position\n   * var position = node.position();\n   *\n   * // set position\n   * node.position({\n   *   x: 5\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'x', 0);\n\n  /**\n   * get/set x position\n   * @name x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} x\n   * @returns {Object}\n   * @example\n   * // get x\n   * var x = node.x();\n   *\n   * // set x\n   * node.x(5);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'y', 0);\n\n  /**\n   * get/set y position\n   * @name y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} y\n   * @returns {Integer}\n   * @example\n   * // get y\n   * var y = node.y();\n   *\n   * // set y\n   * node.y(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'globalCompositeOperation',\n    'source-over'\n  );\n\n  /**\n   * get/set globalCompositeOperation of a shape\n   * @name globalCompositeOperation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} type\n   * @returns {String}\n   * @example\n   * // get globalCompositeOperation\n   * var globalCompositeOperation = shape.globalCompositeOperation();\n   *\n   * // set globalCompositeOperation\n   * shape.globalCompositeOperation('source-in');\n   */\n  Konva.Factory.addGetterSetter(Konva.Node, 'opacity', 1);\n\n  /**\n   * get/set opacity.  Opacity values range from 0 to 1.\n   *  A node with an opacity of 0 is fully transparent, and a node\n   *  with an opacity of 1 is fully opaque\n   * @name opacity\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} opacity\n   * @returns {Number}\n   * @example\n   * // get opacity\n   * var opacity = node.opacity();\n   *\n   * // set opacity\n   * node.opacity(0.5);\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'name');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\n  /**\n   * get/set name\n   * @name name\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} name\n   * @returns {String}\n   * @example\n   * // get name\n   * var name = node.name();\n   *\n   * // set name\n   * node.name('foo');\n   *\n   * // also node may have multiple names (as css classes)\n   * node.name('foo bar');\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'id');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\n  /**\n   * get/set id. Id is global for whole page.\n   * @name id\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} id\n   * @returns {String}\n   * @example\n   * // get id\n   * var name = node.id();\n   *\n   * // set id\n   * node.id('foo');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'rotation', 0);\n\n  /**\n   * get/set rotation in degrees\n   * @name rotation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} rotation\n   * @returns {Number}\n   * @example\n   * // get rotation in degrees\n   * var rotation = node.rotation();\n   *\n   * // set rotation in degrees\n   * node.rotation(45);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\n  /**\n   * get/set scale\n   * @name scale\n   * @param {Object} scale\n   * @param {Number} scale.x\n   * @param {Number} scale.y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Object}\n   * @example\n   * // get scale\n   * var scale = node.scale();\n   *\n   * // set scale\n   * shape.scale({\n   *   x: 2\n   *   y: 3\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'scaleX', 1);\n\n  /**\n   * get/set scale x\n   * @name scaleX\n   * @param {Number} x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get scale x\n   * var scaleX = node.scaleX();\n   *\n   * // set scale x\n   * node.scaleX(2);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'scaleY', 1);\n\n  /**\n   * get/set scale y\n   * @name scaleY\n   * @param {Number} y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get scale y\n   * var scaleY = node.scaleY();\n   *\n   * // set scale y\n   * node.scaleY(2);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\n  /**\n   * get/set skew\n   * @name skew\n   * @param {Object} skew\n   * @param {Number} skew.x\n   * @param {Number} skew.y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Object}\n   * @example\n   * // get skew\n   * var skew = node.skew();\n   *\n   * // set skew\n   * node.skew({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'skewX', 0);\n\n  /**\n   * get/set skew x\n   * @name skewX\n   * @param {Number} x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get skew x\n   * var skewX = node.skewX();\n   *\n   * // set skew x\n   * node.skewX(3);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'skewY', 0);\n\n  /**\n   * get/set skew y\n   * @name skewY\n   * @param {Number} y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get skew y\n   * var skewY = node.skewY();\n   *\n   * // set skew y\n   * node.skewY(3);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\n  /**\n   * get/set offset.  Offsets the default position and rotation point\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get offset\n   * var offset = node.offset();\n   *\n   * // set offset\n   * node.offset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'offsetX', 0);\n\n  /**\n   * get/set offset x\n   * @name offsetX\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get offset x\n   * var offsetX = node.offsetX();\n   *\n   * // set offset x\n   * node.offsetX(3);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'offsetY', 0);\n\n  /**\n   * get/set offset y\n   * @name offsetY\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get offset y\n   * var offsetY = node.offsetY();\n   *\n   * // set offset y\n   * node.offsetY(3);\n   */\n\n  Konva.Factory.addSetter(Konva.Node, 'dragDistance');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\n  /**\n   * get/set drag distance\n   * @name dragDistance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} distance\n   * @returns {Number}\n   * @example\n   * // get drag distance\n   * var dragDistance = node.dragDistance();\n   *\n   * // set distance\n   * // node starts dragging only if pointer moved more then 3 pixels\n   * node.dragDistance(3);\n   * // or set globally\n   * Konva.dragDistance = 3;\n   */\n\n  Konva.Factory.addSetter(Konva.Node, 'width', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n  /**\n   * get/set width\n   * @name width\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get width\n   * var width = node.width();\n   *\n   * // set width\n   * node.width(100);\n   */\n\n  Konva.Factory.addSetter(Konva.Node, 'height', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n  /**\n   * get/set height\n   * @name height\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get height\n   * var height = node.height();\n   *\n   * // set height\n   * node.height(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit');\n  /**\n   * get/set listenig attr.  If you need to determine if a node is listening or not\n   *   by taking into account its parents, use the isListening() method\n   * @name listening\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n   * @returns {Boolean|String}\n   * @example\n   * // get listening attr\n   * var listening = node.listening();\n   *\n   * // stop listening for events\n   * node.listening(false);\n   *\n   * // listen for events\n   * node.listening(true);\n   *\n   * // listen to events according to the parent\n   * node.listening('inherit');\n   */\n\n  /**\n   * get/set preventDefault\n   * By default all shapes will prevent default behaviour\n   * of a browser on a pointer move or tap.\n   * that will prevent native scrolling when you are trying to drag&drop a node\n   * but sometimes you may need to enable default actions\n   * in that case you can set the property to false\n   * @name preventDefault\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} preventDefault\n   * @returns {Number}\n   * @example\n   * // get preventDefault\n   * var shouldPrevent = shape.preventDefault();\n   *\n   * // set preventDefault\n   * shape.preventDefault(false);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'preventDefault', true);\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'filters', undefined, function(\n    val\n  ) {\n    this._filterUpToDate = false;\n    return val;\n  });\n  /**\n   * get/set filters.  Filters are applied to cached canvases\n   * @name filters\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Array} filters array of filters\n   * @returns {Array}\n   * @example\n   * // get filters\n   * var filters = node.filters();\n   *\n   * // set a single filter\n   * node.cache();\n   * node.filters([Konva.Filters.Blur]);\n   *\n   * // set multiple filters\n   * node.cache();\n   * node.filters([\n   *   Konva.Filters.Blur,\n   *   Konva.Filters.Sepia,\n   *   Konva.Filters.Invert\n   * ]);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit');\n  /**\n   * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n   *   If you need to determine if a node is visible or not\n   *   by taking into account its parents, use the isVisible() method\n   * @name visible\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean|String} visible\n   * @returns {Boolean|String}\n   * @example\n   * // get visible attr\n   * var visible = node.visible();\n   *\n   * // make invisible\n   * node.visible(false);\n   *\n   * // make visible\n   * node.visible(true);\n   *\n   * // make visible according to the parent\n   * node.visible('inherit');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'transformsEnabled', 'all');\n\n  /**\n   * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n   *  is \"all\"\n   * @name transformsEnabled\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} enabled\n   * @returns {String}\n   * @example\n   * // enable position transform only to improve draw performance\n   * node.transformsEnabled('position');\n   *\n   * // enable all transforms\n   * node.transformsEnabled('all');\n   */\n\n  /**\n   * get/set node size\n   * @name size\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} size\n   * @param {Number} size.width\n   * @param {Number} size.height\n   * @returns {Object}\n   * @example\n   * // get node size\n   * var size = node.size();\n   * var x = size.x;\n   * var y = size.y;\n   *\n   * // set size\n   * node.size({\n   *   width: 100,\n   *   height: 200\n   * });\n   */\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\n  Konva.Factory.backCompat(Konva.Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation'\n  });\n\n  Konva.Collection.mapMethods(Konva.Node);\n})(Konva);\n\n(function() {\r\n  'use strict';\r\n  /**\r\n    * Grayscale Filter\r\n    * @function\r\n    * @memberof Konva.Filters\r\n    * @param {Object} imageData\r\n    * @example\r\n    * node.cache();\r\n    * node.filters([Konva.Filters.Grayscale]);\r\n    */\r\n  Konva.Filters.Grayscale = function(imageData) {\r\n    var data = imageData.data, len = data.length, i, brightness;\r\n\r\n    for (i = 0; i < len; i += 4) {\r\n      brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\r\n      // red\r\n      data[i] = brightness;\r\n      // green\r\n      data[i + 1] = brightness;\r\n      // blue\r\n      data[i + 2] = brightness;\r\n    }\r\n  };\r\n})();\r\n\n(function(Konva) {\n  'use strict';\n  /**\n     * Brighten Filter.\n     * @function\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Brighten]);\n     * node.brightness(0.8);\n     */\n  Konva.Filters.Brighten = function(imageData) {\n    var brightness = this.brightness() * 255,\n      data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 4) {\n      // red\n      data[i] += brightness;\n      // green\n      data[i + 1] += brightness;\n      // blue\n      data[i + 2] += brightness;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'brightness',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n    *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n    * @name brightness\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} brightness value between -1 and 1\n    * @returns {Number}\n    */\n})(Konva);\n\n(function() {\r\n  'use strict';\r\n  /**\r\n    * Invert Filter\r\n    * @function\r\n    * @memberof Konva.Filters\r\n    * @param {Object} imageData\r\n    * @example\r\n    * node.cache();\r\n    * node.filters([Konva.Filters.Invert]);\r\n    */\r\n  Konva.Filters.Invert = function(imageData) {\r\n    var data = imageData.data, len = data.length, i;\r\n\r\n    for (i = 0; i < len; i += 4) {\r\n      // red\r\n      data[i] = 255 - data[i];\r\n      // green\r\n      data[i + 1] = 255 - data[i + 1];\r\n      // blue\r\n      data[i + 2] = 255 - data[i + 2];\r\n    }\r\n  };\r\n})();\r\n\n/*\n the Gauss filter\n master repo: https://github.com/pavelpower/kineticjsGaussFilter\n*/\n(function(Konva) {\n  'use strict';\n  /*\n\n     StackBlur - a fast almost Gaussian Blur For Canvas\n\n     Version:   0.5\n     Author:    Mario Klingemann\n     Contact:   mario@quasimondo.com\n     Website:   http://www.quasimondo.com/StackBlurForCanvas\n     Twitter:   @quasimondo\n\n     In case you find this class useful - especially in commercial projects -\n     I am not totally unhappy for a small donation to my PayPal account\n     mario@quasimondo.de\n\n     Or support me on flattr:\n     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n     Copyright (c) 2010 Mario Klingemann\n\n     Permission is hereby granted, free of charge, to any person\n     obtaining a copy of this software and associated documentation\n     files (the \"Software\"), to deal in the Software without\n     restriction, including without limitation the rights to use,\n     copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the\n     Software is furnished to do so, subject to the following\n     conditions:\n\n     The above copyright notice and this permission notice shall be\n     included in all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n     OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n  function BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n  }\n\n  var mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259\n  ];\n\n  var shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24\n  ];\n\n  function filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data,\n      width = imageData.width,\n      height = imageData.height;\n\n    var x,\n      y,\n      i,\n      p,\n      yp,\n      yi,\n      yw,\n      r_sum,\n      g_sum,\n      b_sum,\n      a_sum,\n      r_out_sum,\n      g_out_sum,\n      b_out_sum,\n      a_out_sum,\n      r_in_sum,\n      g_in_sum,\n      b_in_sum,\n      a_in_sum,\n      pr,\n      pg,\n      pb,\n      pa,\n      rbs;\n\n    var div = radius + radius + 1,\n      widthMinus1 = width - 1,\n      heightMinus1 = height - 1,\n      radiusPlus1 = radius + 1,\n      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n      stackStart = new BlurStack(),\n      stackEnd = null,\n      stack = stackStart,\n      stackIn = null,\n      stackOut = null,\n      mul_sum = mul_table[radius],\n      shg_sum = shg_table[radius];\n\n    for (i = 1; i < div; i++) {\n      stack = stack.next = new BlurStack();\n      if (i === radiusPlus1) {\n        stackEnd = stack;\n      }\n    }\n\n    stack.next = stackStart;\n\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      for (i = 1; i < radiusPlus1; i++) {\n        p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n        r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n      }\n\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (x = 0; x < width; x++) {\n        pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa !== 0) {\n          pa = 255 / pa;\n          pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n        r_in_sum += stackIn.r = pixels[p];\n        g_in_sum += stackIn.g = pixels[p + 1];\n        b_in_sum += stackIn.b = pixels[p + 2];\n        a_in_sum += stackIn.a = pixels[p + 3];\n\n        r_sum += r_in_sum;\n        g_sum += g_in_sum;\n        b_sum += b_in_sum;\n        a_sum += a_in_sum;\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += 4;\n      }\n      yw += width;\n    }\n\n    for (x = 0; x < width; x++) {\n      g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n      yi = x << 2;\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      yp = width;\n\n      for (i = 1; i <= radius; i++) {\n        yi = (yp + x) << 2;\n\n        r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n\n        if (i < heightMinus1) {\n          yp += width;\n        }\n      }\n\n      yi = x;\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (y = 0; y < height; y++) {\n        p = yi << 2;\n        pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa > 0) {\n          pa = 255 / pa;\n          pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p =\n          (x +\n            ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n              width) <<\n          2;\n\n        r_sum += r_in_sum += stackIn.r = pixels[p];\n        g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n        b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n        a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += width;\n      }\n    }\n  }\n\n  /**\n     * Blur Filter\n     * @function\n     * @name Blur\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Blur]);\n     * node.blurRadius(10);\n     */\n  Konva.Filters.Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n\n    if (radius > 0) {\n      filterGaussBlurRGBA(imageData, radius);\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blurRadius',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n    * @name blurRadius\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} radius\n    * @returns {Integer}\n    */\n})(Konva);\n\n/*eslint-disable  max-depth */\n(function() {\n  'use strict';\n  function pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++]\n    );\n    return d;\n  }\n\n  function rgbDistance(p1, p2) {\n    return Math.sqrt(\n      Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2)\n    );\n  }\n\n  function rgbMean(pTab) {\n    var m = [0, 0, 0];\n\n    for (var i = 0; i < pTab.length; i++) {\n      m[0] += pTab[i][0];\n      m[1] += pTab[i][1];\n      m[2] += pTab[i][2];\n    }\n\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n\n    return m;\n  }\n\n  function backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\n    var thres = threshold || 10;\n    if (\n      rgbDistance(rgbv_no, rgbv_ne) < thres &&\n      rgbDistance(rgbv_ne, rgbv_se) < thres &&\n      rgbDistance(rgbv_se, rgbv_so) < thres &&\n      rgbDistance(rgbv_so, rgbv_no) < thres\n    ) {\n      // Mean color\n      var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\n      // Mask based on color distance\n      var mask = [];\n      for (var i = 0; i < idata.width * idata.height; i++) {\n        var d = rgbDistance(mean, [\n          idata.data[i * 4],\n          idata.data[i * 4 + 1],\n          idata.data[i * 4 + 2]\n        ]);\n        mask[i] = d < thres ? 0 : 255;\n      }\n\n      return mask;\n    }\n  }\n\n  function applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n      idata.data[4 * i + 3] = mask[i];\n    }\n  }\n\n  function erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a === 255 * 8 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a >= 255 * 4 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function smoothEdgeMask(mask, sw, sh) {\n    var weights = [\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a;\n      }\n    }\n\n    return maskResult;\n  }\n\n  /**\n\t * Mask Filter\n\t * @function\n\t * @name Mask\n\t * @memberof Konva.Filters\n\t * @param {Object} imageData\n\t * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Mask]);\n     * node.threshold(200);\n\t */\n  Konva.Filters.Mask = function(imageData) {\n    // Detect pixels close to the background color\n    var threshold = this.threshold(),\n      mask = backgroundMask(imageData, threshold);\n    if (mask) {\n      // Erode\n      mask = erodeMask(mask, imageData.width, imageData.height);\n\n      // Dilate\n      mask = dilateMask(mask, imageData.width, imageData.height);\n\n      // Gradient\n      mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\n      // Apply mask\n      applyMask(imageData, mask);\n\n      // todo : Update hit region function according to mask\n    }\n\n    return imageData;\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'threshold',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n     * RGB Filter\n     * @function\n     * @name RGB\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author ippo615\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.RGB]);\n     * node.blue(120);\n     * node.green(200);\n     */\n  Konva.Filters.RGB = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      i,\n      brightness;\n\n    for (i = 0; i < nPixels; i += 4) {\n      brightness =\n        (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n      data[i] = brightness * red; // r\n      data[i + 1] = brightness * green; // g\n      data[i + 2] = brightness * blue; // b\n      data[i + 3] = data[i + 3]; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n    * @name red\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} red value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n    * @name green\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} green value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n    * @name blue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} blue value between 0 and 255\n    * @returns {Integer}\n    */\n})();\n\n(function() {\n  'use strict';\n  /**\n     * RGBA Filter\n     * @function\n     * @name RGBA\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author codefo\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.RGBA]);\n     * node.blue(120);\n     * node.green(200);\n     * node.alpha(0.3);\n     */\n  Konva.Filters.RGBA = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      alpha = this.alpha(),\n      i,\n      ia;\n\n    for (i = 0; i < nPixels; i += 4) {\n      ia = 1 - alpha;\n\n      data[i] = red * alpha + data[i] * ia; // r\n      data[i + 1] = green * alpha + data[i + 1] * ia; // g\n      data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name red\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} red value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n    * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name green\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} green value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n    * @name blue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} blue value between 0 and 255\n    * @returns {Integer}\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n      return 1;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return val;\n    }\n  });\n  /**\n     * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n     * @name alpha\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Float} alpha value between 0 and 1\n     * @returns {Float}\n     */\n})();\n\n(function() {\n  'use strict';\n  /**\n    * HSV Filter. Adjusts the hue, saturation and value\n    * @function\n    * @name HSV\n    * @memberof Konva.Filters\n    * @param {Object} imageData\n    * @author ippo615\n    * @example\n    * image.filters([Konva.Filters.HSV]);\n    * image.value(200);\n    */\n\n  Konva.Filters.HSV = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = Math.pow(2, this.value()),\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.330 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.300 * vsu + 1.250 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.050 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.200 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b;\n      data[i + 1] = gr * r + gg * g + gb * b;\n      data[i + 2] = br * r + bg * g + bb * b;\n      data[i + 3] = a; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name hue\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} hue value between 0 and 359\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n    * @name saturation\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'value',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n    * @name value\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n    * @returns {Number}\n    */\n})();\n\n(function() {\n  'use strict';\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name hue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} hue value between 0 and 359\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name saturation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'luminance',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n   * @name value\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} value from -1 to 1\n   * @returns {Number}\n   */\n\n  /**\n   * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * image.filters([Konva.Filters.HSL]);\n   * image.luminance(200);\n   */\n\n  Konva.Filters.HSL = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = 1,\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      l = this.luminance() * 127,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b + l;\n      data[i + 1] = gr * r + gg * g + gb * b + l;\n      data[i + 2] = br * r + bg * g + bb * b + l;\n      data[i + 3] = a; // alpha\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Emboss Filter.\n     * Pixastic Lib - Emboss filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * License: [http://www.pixastic.com/lib/license.txt]\n     * @function\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Emboss]);\n     * node.embossStrength(0.8);\n     * node.embossWhiteLevel(0.3);\n     * node.embossDirection('right');\n     * node.embossBlend(true);\n     */\n  Konva.Filters.Emboss = function(imageData) {\n    // pixastic strength is between 0 and 10.  I want it between 0 and 1\n    // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n    // a max value of greyLevel yields a white emboss, and the min value yields a black\n    // emboss.  Therefore, I changed greyLevel to whiteLevel\n    var strength = this.embossStrength() * 10,\n      greyLevel = this.embossWhiteLevel() * 255,\n      direction = this.embossDirection(),\n      blend = this.embossBlend(),\n      dirY = 0,\n      dirX = 0,\n      data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    switch (direction) {\n      case 'top-left':\n        dirY = -1;\n        dirX = -1;\n        break;\n      case 'top':\n        dirY = -1;\n        dirX = 0;\n        break;\n      case 'top-right':\n        dirY = -1;\n        dirX = 1;\n        break;\n      case 'right':\n        dirY = 0;\n        dirX = 1;\n        break;\n      case 'bottom-right':\n        dirY = 1;\n        dirX = 1;\n        break;\n      case 'bottom':\n        dirY = 1;\n        dirX = 0;\n        break;\n      case 'bottom-left':\n        dirY = 1;\n        dirX = -1;\n        break;\n      case 'left':\n        dirY = 0;\n        dirX = -1;\n        break;\n      default:\n        Konva.Util.error('Unknown emboss direction: ' + direction);\n    }\n\n    do {\n      var offsetY = (y - 1) * w4;\n\n      var otherY = dirY;\n      if (y + otherY < 1) {\n        otherY = 0;\n      }\n      if (y + otherY > h) {\n        otherY = 0;\n      }\n\n      var offsetYOther = (y - 1 + otherY) * w * 4;\n\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n\n        var otherX = dirX;\n        if (x + otherX < 1) {\n          otherX = 0;\n        }\n        if (x + otherX > w) {\n          otherX = 0;\n        }\n\n        var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\n        var dR = data[offset] - data[offsetOther];\n        var dG = data[offset + 1] - data[offsetOther + 1];\n        var dB = data[offset + 2] - data[offsetOther + 2];\n\n        var dif = dR;\n        var absDif = dif > 0 ? dif : -dif;\n\n        var absG = dG > 0 ? dG : -dG;\n        var absB = dB > 0 ? dB : -dB;\n\n        if (absG > absDif) {\n          dif = dG;\n        }\n        if (absB > absDif) {\n          dif = dB;\n        }\n\n        dif *= strength;\n\n        if (blend) {\n          var r = data[offset] + dif;\n          var g = data[offset + 1] + dif;\n          var b = data[offset + 2] + dif;\n\n          data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n          data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n          data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n        } else {\n          var grey = greyLevel - dif;\n          if (grey < 0) {\n            grey = 0;\n          } else if (grey > 255) {\n            grey = 255;\n          }\n\n          data[offset] = data[offset + 1] = data[offset + 2] = grey;\n        }\n      } while (--x);\n    } while (--y);\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossStrength',\n    0.5,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossStrength\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} level between 0 and 1.  Default is 0.5\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossWhiteLevel',\n    0.5,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossWhiteLevel\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n    * @returns {Number}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossDirection',\n    'top-left',\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossDirection\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n    *   The default is top-left\n    * @returns {String}\n    */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossBlend',\n    false,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n    * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n    * @name embossBlend\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Boolean} embossBlend\n    * @returns {Boolean}\n    */\n})();\n\n(function() {\n  'use strict';\n  function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    // Compute the range of the data\n    var fromRange = fromMax - fromMin,\n      toRange = toMax - toMin,\n      toValue;\n\n    // If either range is 0, then the value can only be mapped to 1 value\n    if (fromRange === 0) {\n      return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n      return toMin;\n    }\n\n    // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n\n    return toValue;\n  }\n\n  /**\n   * Enhance Filter. Adjusts the colors so that they span the widest\n   *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n   *  writes.\n   * @function\n   * @name Enhance\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Enhance]);\n   * node.enhance(0.4);\n   */\n  Konva.Filters.Enhance = function(imageData) {\n    var data = imageData.data,\n      nSubPixels = data.length,\n      rMin = data[0],\n      rMax = rMin,\n      r,\n      gMin = data[1],\n      gMax = gMin,\n      g,\n      bMin = data[2],\n      bMax = bMin,\n      b,\n      i;\n\n    // If we are not enhancing anything - don't do any computation\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n      return;\n    }\n\n    // 1st Pass - find the min and max for each channel:\n    for (i = 0; i < nSubPixels; i += 4) {\n      r = data[i + 0];\n      if (r < rMin) {\n        rMin = r;\n      } else if (r > rMax) {\n        rMax = r;\n      }\n      g = data[i + 1];\n      if (g < gMin) {\n        gMin = g;\n      } else if (g > gMax) {\n        gMax = g;\n      }\n      b = data[i + 2];\n      if (b < bMin) {\n        bMin = b;\n      } else if (b > bMax) {\n        bMax = b;\n      }\n      //a = data[i + 3];\n      //if (a < aMin) { aMin = a; } else\n      //if (a > aMax) { aMax = a; }\n    }\n\n    // If there is only 1 level - don't remap\n    if (rMax === rMin) {\n      rMax = 255;\n      rMin = 0;\n    }\n    if (gMax === gMin) {\n      gMax = 255;\n      gMin = 0;\n    }\n    if (bMax === bMin) {\n      bMax = 255;\n      bMin = 0;\n    }\n\n    var rMid,\n      rGoalMax,\n      rGoalMin,\n      gMid,\n      gGoalMax,\n      gGoalMin,\n      bMid,\n      bGoalMax,\n      bGoalMin;\n\n    // If the enhancement is positive - stretch the histogram\n    if (enhanceAmount > 0) {\n      rGoalMax = rMax + enhanceAmount * (255 - rMax);\n      rGoalMin = rMin - enhanceAmount * (rMin - 0);\n      gGoalMax = gMax + enhanceAmount * (255 - gMax);\n      gGoalMin = gMin - enhanceAmount * (gMin - 0);\n      bGoalMax = bMax + enhanceAmount * (255 - bMax);\n      bGoalMin = bMin - enhanceAmount * (bMin - 0);\n      // If the enhancement is negative -   compress the histogram\n    } else {\n      rMid = (rMax + rMin) * 0.5;\n      rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n      rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n      gMid = (gMax + gMin) * 0.5;\n      gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n      gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n      bMid = (bMax + bMin) * 0.5;\n      bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n      bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n\n    // Pass 2 - remap everything, except the alpha\n    for (i = 0; i < nSubPixels; i += 4) {\n      data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n      data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n      data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n      //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n    }\n  };\n\n  /**\n   * get/set enhance. Use with {@link Konva.Filters.Enhance} filter. -1 to 1 values\n   * @name enhance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Float} amount\n   * @returns {Float}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'enhance',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Posterize Filter. Adjusts the channels so that there are no more\n     *  than n different values for that channel. This is also applied\n     *  to the alpha channel.\n     * @function\n     * @name Posterize\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Posterize]);\n     * node.levels(0.8); // between 0 and 1\n     */\n\n  Konva.Filters.Posterize = function(imageData) {\n    // level must be between 1 and 255\n    var levels = Math.round(this.levels() * 254) + 1,\n      data = imageData.data,\n      len = data.length,\n      scale = 255 / levels,\n      i;\n\n    for (i = 0; i < len; i += 1) {\n      data[i] = Math.floor(data[i] / scale) * scale;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'levels',\n    0.5,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n    * @name levels\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Number} level between 0 and 1\n    * @returns {Number}\n    */\n})();\n\n(function() {\r\n  'use strict';\r\n  /**\r\n     * Noise Filter. Randomly adds or substracts to the color channels\r\n     * @function\r\n     * @name Noise\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Noise]);\r\n     * node.noise(0.8);\r\n     */\r\n  Konva.Filters.Noise = function(imageData) {\r\n    var amount = this.noise() * 255,\r\n      data = imageData.data,\r\n      nPixels = data.length,\r\n      half = amount / 2,\r\n      i;\r\n\r\n    for (i = 0; i < nPixels; i += 4) {\r\n      data[i + 0] += half - 2 * half * Math.random();\r\n      data[i + 1] += half - 2 * half * Math.random();\r\n      data[i + 2] += half - 2 * half * Math.random();\r\n    }\r\n  };\r\n\r\n  Konva.Factory.addGetterSetter(\r\n    Konva.Node,\r\n    'noise',\r\n    0.2,\r\n    null,\r\n    Konva.Factory.afterSetFilter\r\n  );\r\n  /**\r\n    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\r\n    * @name noise\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Number} noise\r\n    * @returns {Number}\r\n    */\r\n})();\r\n\n/*eslint-disable max-depth */\r\n(function() {\r\n  'use strict';\r\n  /**\r\n     * Pixelate Filter. Averages groups of pixels and redraws\r\n     *  them as larger pixels\r\n     * @function\r\n     * @name Pixelate\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Pixelate]);\r\n     * node.pixelSize(10);\r\n     */\r\n\r\n  Konva.Filters.Pixelate = function(imageData) {\r\n    var pixelSize = Math.ceil(this.pixelSize()),\r\n      width = imageData.width,\r\n      height = imageData.height,\r\n      x,\r\n      y,\r\n      i,\r\n      //pixelsPerBin = pixelSize * pixelSize,\r\n      red,\r\n      green,\r\n      blue,\r\n      alpha,\r\n      nBinsX = Math.ceil(width / pixelSize),\r\n      nBinsY = Math.ceil(height / pixelSize),\r\n      xBinStart,\r\n      xBinEnd,\r\n      yBinStart,\r\n      yBinEnd,\r\n      xBin,\r\n      yBin,\r\n      pixelsInBin;\r\n    imageData = imageData.data;\r\n\r\n    if (pixelSize <= 0) {\r\n      Konva.Util.error('pixelSize value can not be <= 0');\r\n      return;\r\n    }\r\n\r\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\r\n      for (yBin = 0; yBin < nBinsY; yBin += 1) {\r\n        // Initialize the color accumlators to 0\r\n        red = 0;\r\n        green = 0;\r\n        blue = 0;\r\n        alpha = 0;\r\n\r\n        // Determine which pixels are included in this bin\r\n        xBinStart = xBin * pixelSize;\r\n        xBinEnd = xBinStart + pixelSize;\r\n        yBinStart = yBin * pixelSize;\r\n        yBinEnd = yBinStart + pixelSize;\r\n\r\n        // Add all of the pixels to this bin!\r\n        pixelsInBin = 0;\r\n        for (x = xBinStart; x < xBinEnd; x += 1) {\r\n          if (x >= width) {\r\n            continue;\r\n          }\r\n          for (y = yBinStart; y < yBinEnd; y += 1) {\r\n            if (y >= height) {\r\n              continue;\r\n            }\r\n            i = (width * y + x) * 4;\r\n            red += imageData[i + 0];\r\n            green += imageData[i + 1];\r\n            blue += imageData[i + 2];\r\n            alpha += imageData[i + 3];\r\n            pixelsInBin += 1;\r\n          }\r\n        }\r\n\r\n        // Make sure the channels are between 0-255\r\n        red = red / pixelsInBin;\r\n        green = green / pixelsInBin;\r\n        blue = blue / pixelsInBin;\r\n        alpha = alpha / pixelsInBin;\r\n\r\n        // Draw this bin\r\n        for (x = xBinStart; x < xBinEnd; x += 1) {\r\n          if (x >= width) {\r\n            continue;\r\n          }\r\n          for (y = yBinStart; y < yBinEnd; y += 1) {\r\n            if (y >= height) {\r\n              continue;\r\n            }\r\n            i = (width * y + x) * 4;\r\n            imageData[i + 0] = red;\r\n            imageData[i + 1] = green;\r\n            imageData[i + 2] = blue;\r\n            imageData[i + 3] = alpha;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  Konva.Factory.addGetterSetter(\r\n    Konva.Node,\r\n    'pixelSize',\r\n    8,\r\n    null,\r\n    Konva.Factory.afterSetFilter\r\n  );\r\n  /**\r\n    * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\r\n    * @name pixelSize\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Integer} pixelSize\r\n    * @returns {Integer}\r\n    */\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n  /**\r\n     * Threshold Filter. Pushes any value above the mid point to\r\n     *  the max and any value below the mid point to the min.\r\n     *  This affects the alpha channel.\r\n     * @function\r\n     * @name Threshold\r\n     * @memberof Konva.Filters\r\n     * @param {Object} imageData\r\n     * @author ippo615\r\n     * @example\r\n     * node.cache();\r\n     * node.filters([Konva.Filters.Threshold]);\r\n     * node.threshold(0.1);\r\n     */\r\n\r\n  Konva.Filters.Threshold = function(imageData) {\r\n    var level = this.threshold() * 255,\r\n      data = imageData.data,\r\n      len = data.length,\r\n      i;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      data[i] = data[i] < level ? 0 : 255;\r\n    }\r\n  };\r\n\r\n  Konva.Factory.addGetterSetter(\r\n    Konva.Node,\r\n    'threshold',\r\n    0.5,\r\n    null,\r\n    Konva.Factory.afterSetFilter\r\n  );\r\n  /**\r\n    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\r\n    * @name threshold\r\n    * @method\r\n    * @memberof Konva.Node.prototype\r\n    * @param {Number} threshold\r\n    * @returns {Number}\r\n    */\r\n})();\r\n\n(function() {\n  'use strict';\n  /**\n     * Sepia Filter\n     * Based on: Pixastic Lib - Sepia filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * @function\n     * @name Sepia\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Sepia]);\n     */\n  Konva.Filters.Sepia = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      y = imageData.height,\n      w4 = w * 4,\n      offsetY,\n      x,\n      offset,\n      or,\n      og,\n      ob,\n      r,\n      g,\n      b;\n\n    do {\n      offsetY = (y - 1) * w4;\n      x = w;\n      do {\n        offset = offsetY + (x - 1) * 4;\n\n        or = data[offset];\n        og = data[offset + 1];\n        ob = data[offset + 2];\n\n        r = or * 0.393 + og * 0.769 + ob * 0.189;\n        g = or * 0.349 + og * 0.686 + ob * 0.168;\n        b = or * 0.272 + og * 0.534 + ob * 0.131;\n\n        data[offset] = r > 255 ? 255 : r;\n        data[offset + 1] = g > 255 ? 255 : g;\n        data[offset + 2] = b > 255 ? 255 : b;\n        data[offset + 3] = data[offset + 3];\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Solarize Filter\n     * Pixastic Lib - Solarize filter - v0.1.0\n     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n     * License: [http://www.pixastic.com/lib/license.txt]\n     * @function\n     * @name Solarize\n     * @memberof Konva.Filters\n     * @param {Object} imageData\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Solarize]);\n     */\n  Konva.Filters.Solarize = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    do {\n      var offsetY = (y - 1) * w4;\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n        var r = data[offset];\n        var g = data[offset + 1];\n        var b = data[offset + 2];\n\n        if (r > 127) {\n          r = 255 - r;\n        }\n        if (g > 127) {\n          g = 255 - g;\n        }\n        if (b > 127) {\n          b = 255 - b;\n        }\n\n        data[offset] = r;\n        data[offset + 1] = g;\n        data[offset + 2] = b;\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /*\n   * ToPolar Filter. Converts image data to polar coordinates. Performs\n   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n   *  what would be the y axis and the theta axis along the x axis.\n   * @function\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {ImageData} src, the source image data (what will be transformed)\n   * @param {ImageData} dst, the destination image data (where it will be saved)\n   * @param {Object} opt\n   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n   *  default is in the middle\n   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n   *  default is in the middle\n   */\n\n  var ToPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng y as the radius, and x as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta;\n\n    // We want to cover all angles (0-360) and we need to convert to\n    // radians (*PI/180)\n    var conversion = 360 / tSize * Math.PI / 180,\n      sin,\n      cos;\n\n    // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\n    for (theta = 0; theta < tSize; theta += 1) {\n      sin = Math.sin(theta * conversion);\n      cos = Math.cos(theta * conversion);\n      for (radius = 0; radius < rSize; radius += 1) {\n        x = Math.floor(xMid + rMax * radius / rSize * cos);\n        y = Math.floor(yMid + rMax * radius / rSize * sin);\n        i = (y * xSize + x) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        //i = (theta * xSize  +  radius) * 4;\n        i = (theta + radius * xSize) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  /*\n     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n     *  Performs w*h*4 pixel reads and w*h pixel writes.\n     * @function\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {ImageData} src, the source image data (what will be transformed)\n     * @param {ImageData} dst, the destination image data (where it will be saved)\n     * @param {Object} opt\n     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n     *  0 is no rotation, 360 degrees is a full rotation\n     */\n\n  var FromPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      dx,\n      dy,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng x as the radius, and y as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta,\n      phaseShift = opt.polarRotation || 0;\n\n    // We need to convert to degrees and we need to make sure\n    // it's between (0-360)\n    // var conversion = tSize/360*180/Math.PI;\n    //var conversion = tSize/360*180/Math.PI;\n\n    var x1, y1;\n\n    for (x = 0; x < xSize; x += 1) {\n      for (y = 0; y < ySize; y += 1) {\n        dx = x - xMid;\n        dy = y - yMid;\n        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n        theta = theta * tSize / 360;\n        x1 = Math.floor(theta);\n        y1 = Math.floor(radius);\n        i = (y1 * xSize + x1) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        i = (y * xSize + x) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n  //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\n  // create a temporary canvas for working - shared between multiple calls\n\n  /*\n     * Kaleidoscope Filter.\n     * @function\n     * @name Kaleidoscope\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Kaleidoscope]);\n     * node.kaleidoscopePower(3);\n     * node.kaleidoscopeAngle(45);\n     */\n  Konva.Filters.Kaleidoscope = function(imageData) {\n    var xSize = imageData.width,\n      ySize = imageData.height;\n\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor(xSize * (angle % 360) / 360);\n\n    if (power < 1) {\n      return;\n    }\n\n    // Work with our shared buffer canvas\n    var tempCanvas = Konva.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n      .getContext('2d')\n      .getImageData(0, 0, xSize, ySize);\n\n    // Convert thhe original to polar coordinates\n    ToPolar(imageData, scratchData, {\n      polarCenterX: xSize / 2,\n      polarCenterY: ySize / 2\n    });\n\n    // Determine how big each section will be, if it's too small\n    // make it bigger\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n      minSectionSize = minSectionSize * 2;\n      power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n\n    // Copy the offset region to 0\n    // Depending on the size of filter and location of the offset we may need\n    // to copy the section backwards to prevent it from rewriting itself\n    var xStart = 0,\n      xEnd = sectionSize,\n      xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n      xStart = sectionSize;\n      xEnd = 0;\n      xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n      for (x = xStart; x !== xEnd; x += xDelta) {\n        xoff = Math.round(x + offset) % xSize;\n        srcPos = (xSize * y + xoff) * 4;\n        r = scratchData.data[srcPos + 0];\n        g = scratchData.data[srcPos + 1];\n        b = scratchData.data[srcPos + 2];\n        a = scratchData.data[srcPos + 3];\n        dstPos = (xSize * y + x) * 4;\n        scratchData.data[dstPos + 0] = r;\n        scratchData.data[dstPos + 1] = g;\n        scratchData.data[dstPos + 2] = b;\n        scratchData.data[dstPos + 3] = a;\n      }\n    }\n\n    // Perform the actual effect\n    for (y = 0; y < ySize; y += 1) {\n      sectionSize = Math.floor(minSectionSize);\n      for (i = 0; i < power; i += 1) {\n        for (x = 0; x < sectionSize + 1; x += 1) {\n          srcPos = (xSize * y + x) * 4;\n          r = scratchData.data[srcPos + 0];\n          g = scratchData.data[srcPos + 1];\n          b = scratchData.data[srcPos + 2];\n          a = scratchData.data[srcPos + 3];\n          dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n          scratchData.data[dstPos + 0] = r;\n          scratchData.data[dstPos + 1] = g;\n          scratchData.data[dstPos + 2] = b;\n          scratchData.data[dstPos + 3] = a;\n        }\n        sectionSize *= 2;\n      }\n    }\n\n    // Convert back from polar coordinates\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n  };\n\n  /**\n    * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n    * @name kaleidoscopePower\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} power of kaleidoscope\n    * @returns {Integer}\n    */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopePower',\n    2,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n    * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n    * @name kaleidoscopeAngle\n    * @method\n    * @memberof Konva.Node.prototype\n    * @param {Integer} degrees\n    * @returns {Integer}\n    */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopeAngle',\n    0,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function (Konva) {\n  'use strict';\n  /**\n   * Contrast Filter.\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Contrast]);\n   * node.contrast(10);\n   */\n\n  Konva.Filters.Contrast = function (imageData) {\n    var adjust = Math.pow((parseInt(this.contrast()) + 100) / 100, 2);\n\n    var data = imageData.data,\n      nPixels = data.length,\n      red = 150,\n      green = 150,\n      blue = 150,\n      i;\n\n    for (i = 0; i < nPixels; i += 4) {\n      red = data[i];\n      green = data[i + 1];\n      blue = data[i + 2];\n\n      //Red channel\n      red /= 255;\n      red -= 0.5;\n      red *= adjust;\n      red += 0.5;\n      red *= 255;\n\n      //Green channel\n      green /= 255;\n      green -= 0.5;\n      green *= adjust;\n      green += 0.5;\n      green *= 255;\n\n      //Blue channel\n      blue /= 255;\n      blue -= 0.5;\n      blue *= adjust;\n      blue += 0.5;\n      blue *= 255;\n\n      red = (red < 0 ? 0 : (red > 255 ? 255 : red));\n      green = (green < 0 ? 0 : (green > 255 ? 255 : green));\n      blue = (blue < 0 ? 0 : (blue > 255 ? 255 : blue));\n\n      data[i] = red;\n      data[i + 1] = green;\n      data[i + 2] = blue;\n    }\n  };\n\n  /**\n   * get/set filter contrast.  The contrast is a number between -100 and 100.\n   * Use with {@link Konva.Filters.Contrast} filter.\n   * @name contrast\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} contrast value between -100 and 100\n   * @returns {Number}\n   */\n  Konva.Factory.addGetterSetter(Konva.Node, 'contrast', 0, null, Konva.Factory.afterSetFilter);\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Node\n   * @abstract\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   */\n  Konva.Container = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Container, {\n    __init: function(config) {\n      this.children = new Konva.Collection();\n      Konva.Node.call(this, config);\n    },\n    /**\n     * returns a {@link Konva.Collection} of direct descendant nodes\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Function} [filterFunc] filter function\n     * @returns {Konva.Collection}\n     * @example\n     * // get all children\n     * var children = layer.getChildren();\n     *\n     * // get only circles\n     * var circles = layer.getChildren(function(node){\n     *    return node.getClassName() === 'Circle';\n     * });\n     */\n    getChildren: function(filterFunc) {\n      if (!filterFunc) {\n        return this.children;\n      }\n\n      var results = new Konva.Collection();\n      this.children.each(function(child) {\n        if (filterFunc(child)) {\n          results.push(child);\n        }\n      });\n      return results;\n    },\n    /**\n     * determine if node has children\n     * @method\n     * @memberof Konva.Container.prototype\n     * @returns {Boolean}\n     */\n    hasChildren: function() {\n      return this.getChildren().length > 0;\n    },\n    /**\n     * remove all children\n     * @method\n     * @memberof Konva.Container.prototype\n     */\n    removeChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.remove();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n     * destroy all children\n     * @method\n     * @memberof Konva.Container.prototype\n     */\n    destroyChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.destroy();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n     * Add node or nodes to container.\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {...Konva.Node} child\n     * @returns {Container}\n     * @example\n     * layer.add(shape1, shape2, shape3);\n     */\n    add: function(child) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      if (child.getParent()) {\n        child.moveTo(this);\n        return this;\n      }\n      var children = this.children;\n      this._validateAdd(child);\n      child.index = children.length;\n      child.parent = this;\n      children.push(child);\n      this._fire('add', {\n        child: child\n      });\n\n      // if node under drag we need to update drag animation\n      if (Konva.DD && child.isDragging()) {\n        Konva.DD.anim.setLayers(child.getLayer());\n      }\n\n      // chainable\n      return this;\n    },\n    destroy: function() {\n      // destroy children\n      if (this.hasChildren()) {\n        this.destroyChildren();\n      }\n      // then destroy self\n      Konva.Node.prototype.destroy.call(this);\n      return this;\n    },\n    /**\n     * return a {@link Konva.Collection} of nodes that match the selector.\n     * You can provide a string with '#' for id selections and '.' for name selections.\n     * Or a function that will return true/false when a node is passed through.  See example below.\n     * With strings you can also select by type or class name. Pass multiple selectors\n     * separated by a space.\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {String | Function} selector\n     * @returns {Collection}\n     * @example\n     *\n     * Passing a string as a selector\n     * // select node with id foo\n     * var node = stage.find('#foo');\n     *\n     * // select nodes with name bar inside layer\n     * var nodes = layer.find('.bar');\n     *\n     * // select all groups inside layer\n     * var nodes = layer.find('Group');\n     *\n     * // select all rectangles inside layer\n     * var nodes = layer.find('Rect');\n     *\n     * // select node with an id of foo or a name of bar inside layer\n     * var nodes = layer.find('#foo, .bar');\n     *\n     * Passing a function as a selector\n     *\n     * // get all Groups\n     * var groups = stage.find(node => {\n     *  return node.getType() === 'Group';\n     * });\n     *\n     * // get only Nodes with partial opacity\n     * var alphaNodes = layer.find(node => {\n     *  return node.getType() === 'Node' && node.getAbsoluteOpacity() < 1;\n     * });\n     */\n    find: function(selector) {\n      // protecting _generalFind to prevent user from accidentally adding\n      // second argument and getting unexpected `findOne` result\n      return this._generalFind(selector, false);\n    },\n    /**\n     * return a first node from `find` method\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {String | Function} selector\n     * @returns {Konva.Node | Undefined}\n     * @example\n     * // select node with id foo\n     * var node = stage.findOne('#foo');\n     *\n     * // select node with name bar inside layer\n     * var nodes = layer.findOne('.bar');\n     *\n     * // select the first node to return true in a function\n     * var node = stage.findOne(node => {\n     *  return node.getType() === 'Shape'\n     * })\n     */\n    findOne: function(selector) {\n      var result = this._generalFind(selector, true);\n      return result.length > 0 ? result[0] : undefined;\n    },\n    _generalFind: function(selector, findOne) {\n      var retArr = [];\n\n      if (typeof selector === 'string') {\n        retArr = this._findByString(selector, findOne);\n      } else if (typeof selector === 'function') {\n        retArr = this._findByFunction(selector, findOne);\n      }\n\n      return Konva.Collection.toCollection(retArr);\n    },\n    _findByString: function(selector) {\n      var retArr = [],\n        selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        i,\n        sel,\n        arr,\n        node,\n        children,\n        clen;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          Konva.Util.warn(\n            'Selector \"' +\n              sel +\n              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n          );\n          Konva.Util.warn(\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n          );\n          Konva.Util.warn('Konva is awesome, right?');\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          node = this._getNodeById(sel.slice(1));\n          if (node) {\n            retArr.push(node);\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          arr = this._getNodesByName(sel.slice(1));\n          retArr = retArr.concat(arr);\n        } else {\n          // unrecognized selector, pass to children\n          children = this.getChildren();\n          clen = children.length;\n          for (i = 0; i < clen; i++) {\n            retArr = retArr.concat(children[i]._get(sel));\n          }\n        }\n      }\n\n      return retArr;\n    },\n    // (fn: ((Node) => boolean, findOne?: boolean)\n    _findByFunction: function(fn, findOne) {\n      var retArr = [];\n\n      var addItems = function(el) {\n        // escape function if we've already found one.\n        if (findOne && retArr.length > 0) {\n          return;\n        }\n\n        var children = el.getChildren();\n        var clen = children.length;\n\n        if (fn(el)) {\n          retArr = retArr.concat(el);\n        }\n\n        for (var i = 0; i < clen; i++) {\n          addItems(children[i]);\n        }\n      };\n\n      addItems(this);\n\n      return retArr;\n    },\n    _getNodeById: function(key) {\n      var node = Konva.ids[key];\n\n      if (node !== undefined && this.isAncestorOf(node)) {\n        return node;\n      }\n      return null;\n    },\n    _getNodesByName: function(key) {\n      var arr = Konva.names[key] || [];\n      return this._getDescendants(arr);\n    },\n    _get: function(selector) {\n      var retArr = Konva.Node.prototype._get.call(this, selector);\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        retArr = retArr.concat(children[n]._get(selector));\n      }\n      return retArr;\n    },\n    // extenders\n    toObject: function() {\n      var obj = Konva.Node.prototype.toObject.call(this);\n\n      obj.children = [];\n\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        var child = children[n];\n        obj.children.push(child.toObject());\n      }\n\n      return obj;\n    },\n    _getDescendants: function(arr) {\n      var retArr = [];\n      var len = arr.length;\n      for (var n = 0; n < len; n++) {\n        var node = arr[n];\n        if (this.isAncestorOf(node)) {\n          retArr.push(node);\n        }\n      }\n\n      return retArr;\n    },\n    /**\n     * determine if node is an ancestor\n     * of descendant\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Konva.Node} node\n     */\n    isAncestorOf: function(node) {\n      var parent = node.getParent();\n      while (parent) {\n        if (parent._id === this._id) {\n          return true;\n        }\n        parent = parent.getParent();\n      }\n\n      return false;\n    },\n    clone: function(obj) {\n      // call super method\n      var node = Konva.Node.prototype.clone.call(this, obj);\n\n      this.getChildren().each(function(no) {\n        node.add(no.clone());\n      });\n      return node;\n    },\n    /**\n     * get all shapes that intersect a point.  Note: because this method must clear a temporary\n     * canvas and redraw every shape inside the container, it should only be used for special sitations\n     * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n     * because it performs much better\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Array} array of shapes\n     */\n    getAllIntersections: function(pos) {\n      var arr = [];\n\n      this.find('Shape').each(function(shape) {\n        if (shape.isVisible() && shape.intersects(pos)) {\n          arr.push(shape);\n        }\n      });\n\n      return arr;\n    },\n    _setChildrenIndices: function() {\n      this.children.each(function(child, n) {\n        child.index = n;\n      });\n    },\n    drawScene: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas()),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n      if (this.isVisible() || caching) {\n        if (!caching && cachedSceneCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedSceneCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawScene', top, false, caching);\n        }\n      }\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.hitCanvas),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (this.shouldDrawHit(canvas) || caching) {\n        if (layer) {\n          layer.clearHitCache();\n        }\n        if (!caching && cachedHitCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedHitCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawHit', top);\n        }\n      }\n      return this;\n    },\n    _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        context = canvas && canvas.getContext(),\n        clipWidth = this.getClipWidth(),\n        clipHeight = this.getClipHeight(),\n        clipFunc = this.getClipFunc(),\n        hasClip = (clipWidth && clipHeight) || clipFunc,\n        clipX,\n        clipY;\n\n      if (hasClip && layer) {\n        context.save();\n        var transform = this.getAbsoluteTransform(top);\n        var m = transform.getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        context.beginPath();\n        if (clipFunc) {\n          clipFunc.call(this, context, this);\n        } else {\n          clipX = this.getClipX();\n          clipY = this.getClipY();\n          context.rect(clipX, clipY, clipWidth, clipHeight);\n        }\n        context.clip();\n        m = transform\n          .copy()\n          .invert()\n          .getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      this.children.each(function(child) {\n        child[drawMethod](canvas, top, caching, skipBuffer);\n      });\n\n      if (hasClip) {\n        context.restore();\n      }\n    },\n    shouldDrawHit: function(canvas) {\n      var layer = this.getLayer();\n      var dd = Konva.DD;\n      var layerUnderDrag =\n        dd &&\n        Konva.isDragging() &&\n        Konva.DD.anim.getLayers().indexOf(layer) !== -1;\n      return (\n        (canvas && canvas.isCache) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isVisible() &&\n          !layerUnderDrag)\n      );\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n      var relativeTo = attrs.relativeTo;\n\n      var minX, minY, maxX, maxY;\n      var selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n      var that = this;\n      this.children.each(function(child) {\n        // skip invisible children\n        if (!child.getVisible()) {\n          return;\n        }\n\n        var rect = child.getClientRect({ relativeTo: that });\n\n        // skip invisible children (like empty groups)\n        // or don't skip... hmmm...\n        // if (rect.width === 0 && rect.height === 0) {\n        //     return;\n        // }\n\n        if (minX === undefined) {\n          // initial value for first child\n          minX = rect.x;\n          minY = rect.y;\n          maxX = rect.x + rect.width;\n          maxY = rect.y + rect.height;\n        } else {\n          minX = Math.min(minX, rect.x);\n          minY = Math.min(minY, rect.y);\n          maxX = Math.max(maxX, rect.x + rect.width);\n          maxY = Math.max(maxY, rect.y + rect.height);\n        }\n      });\n\n      // if child is group we need to make sure it has visible shapes inside\n      var shapes = this.find('Shape');\n      var hasVisible = false;\n      for (var i = 0; i < shapes.length; i++) {\n        var shape = shapes[i];\n        if (shape.getVisible()) {\n          hasVisible = true;\n          break;\n        }\n      }\n\n      if (hasVisible) {\n        selfRect = {\n          x: minX,\n          y: minY,\n          width: maxX - minX,\n          height: maxY - minY\n        };\n      }\n\n      if (!skipTransform) {\n        return this._transformedRect(selfRect, relativeTo);\n      }\n      return selfRect;\n    }\n  });\n\n  Konva.Util.extend(Konva.Container, Konva.Node);\n  // deprecated methods\n  Konva.Container.prototype.get = Konva.Container.prototype.find;\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n   * get/set clip\n   * @method\n   * @name clip\n   * @memberof Konva.Container.prototype\n   * @param {Object} clip\n   * @param {Number} clip.x\n   * @param {Number} clip.y\n   * @param {Number} clip.width\n   * @param {Number} clip.height\n   * @returns {Object}\n   * @example\n   * // get clip\n   * var clip = container.clip();\n   *\n   * // set clip\n   * container.setClip({\n   *   x: 20,\n   *   y: 20,\n   *   width: 20,\n   *   height: 20\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipX');\n  /**\n   * get/set clip x\n   * @name clipX\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get clip x\n   * var clipX = container.clipX();\n   *\n   * // set clip x\n   * container.clipX(10);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipY');\n  /**\n   * get/set clip y\n   * @name clipY\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get clip y\n   * var clipY = container.clipY();\n   *\n   * // set clip y\n   * container.clipY(10);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipWidth');\n  /**\n   * get/set clip width\n   * @name clipWidth\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get clip width\n   * var clipWidth = container.clipWidth();\n   *\n   * // set clip width\n   * container.clipWidth(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipHeight');\n  /**\n   * get/set clip height\n   * @name clipHeight\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get clip height\n   * var clipHeight = container.clipHeight();\n   *\n   * // set clip height\n   * container.clipHeight(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n  /**\n   * get/set clip function\n   * @name clipFunc\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Function} function\n   * @returns {Function}\n   * @example\n   * // get clip function\n   * var clipFunction = container.clipFunc();\n   *\n   * // set clip height\n   * container.clipFunc(function(ctx) {\n   *   ctx.rect(0, 0, 100, 100);\n   * });\n   */\n\n  Konva.Collection.mapMethods(Konva.Container);\n})();\n\n(function(Konva) {\n  'use strict';\n  var HAS_SHADOW = 'hasShadow';\n  var SHADOW_RGBA = 'shadowRGBA';\n\n  function _fillFunc(context) {\n    context.fill();\n  }\n  function _strokeFunc(context) {\n    context.stroke();\n  }\n  function _fillFuncHit(context) {\n    context.fill();\n  }\n  function _strokeFuncHit(context) {\n    context.stroke();\n  }\n\n  function _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n  }\n\n  function _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n  }\n\n  /**\n   * Shape constructor.  Shapes are primitive objects such as rectangles,\n   *  circles, text, lines, etc.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Node\n   * @param {Object} config\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var customShape = new Konva.Shape({\n   *   x: 5,\n   *   y: 10,\n   *   fill: 'red',\n   *   // a Konva.Canvas renderer is passed into the drawFunc function\n   *   drawFunc: function(context) {\n   *     context.beginPath();\n   *     context.moveTo(200, 50);\n   *     context.lineTo(420, 80);\n   *     context.quadraticCurveTo(300, 100, 260, 170);\n   *     context.closePath();\n   *     context.fillStrokeShape(this);\n   *   }\n   *});\n   */\n  Konva.Shape = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Shape, {\n    __init: function(config) {\n      this.nodeType = 'Shape';\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFuncHit;\n      this._strokeFuncHit = _strokeFuncHit;\n\n      // set colorKey\n      var shapes = Konva.shapes;\n      var key;\n\n      while (true) {\n        key = Konva.Util.getRandomColor();\n        if (key && !(key in shapes)) {\n          break;\n        }\n      }\n\n      this.colorKey = key;\n      shapes[key] = this;\n\n      // call super constructor\n      Konva.Node.call(this, config);\n\n      this.on(\n        'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearHasShadowCache\n      );\n\n      this.on(\n        'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearGetShadowRGBACache\n      );\n    },\n    hasChildren: function() {\n      return false;\n    },\n    getChildren: function() {\n      return [];\n    },\n    /**\n     * get canvas context tied to the layer\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Konva.Context}\n     */\n    getContext: function() {\n      return this.getLayer().getContext();\n    },\n    /**\n     * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Konva.Canvas}\n     */\n    getCanvas: function() {\n      return this.getLayer().getCanvas();\n    },\n    /**\n     * returns whether or not a shadow will be rendered\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasShadow: function() {\n      return this._getCache(HAS_SHADOW, this._hasShadow);\n    },\n    _hasShadow: function() {\n      return (\n        this.getShadowEnabled() &&\n        (this.getShadowOpacity() !== 0 &&\n          !!(\n            this.getShadowColor() ||\n            this.getShadowBlur() ||\n            this.getShadowOffsetX() ||\n            this.getShadowOffsetY()\n          ))\n      );\n    },\n    getShadowRGBA: function() {\n      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    },\n    _getShadowRGBA: function() {\n      if (this.hasShadow()) {\n        var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n        return (\n          'rgba(' +\n          rgba.r +\n          ',' +\n          rgba.g +\n          ',' +\n          rgba.b +\n          ',' +\n          rgba.a * (this.getShadowOpacity() || 1) +\n          ')'\n        );\n      }\n    },\n    /**\n     * returns whether or not the shape will be filled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasFill: function() {\n      return !!(\n        this.getFill() ||\n        this.getFillPatternImage() ||\n        this.getFillLinearGradientColorStops() ||\n        this.getFillRadialGradientColorStops()\n      );\n    },\n    /**\n     * returns whether or not the shape will be stroked\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasStroke: function() {\n      return (\n        this.strokeEnabled() &&\n        !!(this.stroke() || this.getStrokeLinearGradientColorStops())\n        // TODO: do we need radial gradient\n        // this.getStrokeRadialGradientColorStops()\n      );\n    },\n    /**\n     * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n     *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n     *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n     *  because it performs much better\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} point\n     * @param {Number} point.x\n     * @param {Number} point.y\n     * @returns {Boolean}\n     */\n    intersects: function(point) {\n      var stage = this.getStage(),\n        bufferHitCanvas = stage.bufferHitCanvas,\n        p;\n\n      bufferHitCanvas.getContext().clear();\n      this.drawHit(bufferHitCanvas);\n      p = bufferHitCanvas.context.getImageData(\n        Math.round(point.x),\n        Math.round(point.y),\n        1,\n        1\n      ).data;\n      return p[3] > 0;\n    },\n    // extends Node.prototype.destroy\n    destroy: function() {\n      Konva.Node.prototype.destroy.call(this);\n      delete Konva.shapes[this.colorKey];\n      return this;\n    },\n    _useBufferCanvas: function(caching) {\n      return (\n        (!caching &&\n          (this.perfectDrawEnabled() &&\n            this.getAbsoluteOpacity() !== 1 &&\n            this.hasFill() &&\n            this.hasStroke() &&\n            this.getStage())) ||\n        (this.perfectDrawEnabled() &&\n          this.hasShadow() &&\n          this.getAbsoluteOpacity() !== 1 &&\n          this.hasFill() &&\n          this.hasStroke() &&\n          this.getStage())\n      );\n    },\n    /**\n     * return self rectangle (x, y, width, height) of shape.\n     * This method are not taken into account transformation and styles.\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Object} rect with {x, y, width, height} properties\n     * @example\n     *\n     * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n     * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n     *\n     */\n    getSelfRect: function() {\n      var size = this.getSize();\n      return {\n        x: this._centroid ? Math.round(-size.width / 2) : 0,\n        y: this._centroid ? Math.round(-size.height / 2) : 0,\n        width: size.width,\n        height: size.height\n      };\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n      var relativeTo = attrs.relativeTo;\n\n      var fillRect = this.getSelfRect();\n\n      var strokeWidth = (this.hasStroke() && this.strokeWidth()) || 0;\n      var fillAndStrokeWidth = fillRect.width + strokeWidth;\n      var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\n      var shadowOffsetX = this.hasShadow() ? this.shadowOffsetX() : 0;\n      var shadowOffsetY = this.hasShadow() ? this.shadowOffsetY() : 0;\n\n      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\n      var blurRadius = (this.hasShadow() && this.shadowBlur()) || 0;\n\n      var width = preWidth + blurRadius * 2;\n      var height = preHeight + blurRadius * 2;\n\n      // if stroke, for example = 3\n      // we need to set x to 1.5, but after Math.round it will be 2\n      // as we have additional offset we need to increase width and height by 1 pixel\n      var roundingOffset = 0;\n      if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n        roundingOffset = 1;\n      }\n      var rect = {\n        width: width + roundingOffset,\n        height: height + roundingOffset,\n        x:\n          -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetX, 0) +\n          fillRect.x,\n        y:\n          -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetY, 0) +\n          fillRect.y\n      };\n      if (!skipTransform) {\n        return this._transformedRect(rect, relativeTo);\n      }\n      return rect;\n    },\n    drawScene: function(can, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        canvas = can || layer.getCanvas(),\n        context = canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        drawFunc = this.sceneFunc(),\n        hasShadow = this.hasShadow(),\n        hasStroke = this.hasStroke(),\n        stage,\n        bufferCanvas,\n        bufferContext;\n\n      if (!this.isVisible() && !caching) {\n        return this;\n      }\n      if (cachedCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedSceneCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      // if buffer canvas is needed\n      if (this._useBufferCanvas(caching) && !skipBuffer) {\n        stage = this.getStage();\n        bufferCanvas = stage.bufferCanvas;\n        bufferContext = bufferCanvas.getContext();\n        bufferContext.clear();\n        bufferContext.save();\n        bufferContext._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, bufferContext, top);\n          } else {\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n          }\n        }\n\n        drawFunc.call(this, bufferContext);\n        bufferContext.restore();\n\n        var ratio = bufferCanvas.pixelRatio;\n        if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n\n          context._applyShadow(this);\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n          context.restore();\n        } else {\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n        }\n      } else {\n        // if buffer canvas is not needed\n        context._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, context, top);\n          } else {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n          }\n        }\n\n        if (hasShadow && hasStroke && !canvas.hitCanvas) {\n          context.save();\n          // apply shadow\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n\n          drawFunc.call(this, context);\n          context.restore();\n          // if shape has stroke we need to redraw shape\n          // otherwise we will see a shadow under stroke (and over fill)\n          // but I think this is unexpected behavior\n          if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n            drawFunc.call(this, context);\n          }\n        } else if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n          drawFunc.call(this, context);\n          context.restore();\n        } else {\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          drawFunc.call(this, context);\n        }\n      }\n      context.restore();\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || layer.hitCanvas,\n        context = canvas.getContext(),\n        drawFunc = this.hitFunc() || this.sceneFunc(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (!this.shouldDrawHit(canvas) && !caching) {\n        return this;\n      }\n      if (layer) {\n        layer.clearHitCache();\n      }\n      if (cachedHitCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedHitCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      context._applyLineJoin(this);\n      if (!caching) {\n        if (layer) {\n          layer._applyTransform(this, context, top);\n        } else {\n          var o = this.getAbsoluteTransform(top).getMatrix();\n          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n      }\n      drawFunc.call(this, context);\n      context.restore();\n      return this;\n    },\n    /**\n     * draw hit graph using the cached scene canvas\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n     *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n     *  The default is 0\n     * @returns {Konva.Shape}\n     * @example\n     * shape.cache();\n     * shape.drawHitFromCache();\n     */\n    drawHitFromCache: function(alphaThreshold) {\n      var threshold = alphaThreshold || 0,\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = this._getCachedSceneCanvas(),\n        hitCanvas = cachedCanvas.hit,\n        hitContext = hitCanvas.getContext(),\n        hitWidth = hitCanvas.getWidth(),\n        hitHeight = hitCanvas.getHeight(),\n        hitImageData,\n        hitData,\n        len,\n        rgbColorKey,\n        i,\n        alpha;\n\n      hitContext.clear();\n      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\n      try {\n        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n        hitData = hitImageData.data;\n        len = hitData.length;\n        rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\n        // replace non transparent pixels with color key\n        for (i = 0; i < len; i += 4) {\n          alpha = hitData[i + 3];\n          if (alpha > threshold) {\n            hitData[i] = rgbColorKey.r;\n            hitData[i + 1] = rgbColorKey.g;\n            hitData[i + 2] = rgbColorKey.b;\n            hitData[i + 3] = 255;\n          } else {\n            hitData[i + 3] = 0;\n          }\n        }\n        hitContext.putImageData(hitImageData, 0, 0);\n      } catch (e) {\n        Konva.Util.error(\n          'Unable to draw hit graph from cached scene canvas. ' + e.message\n        );\n      }\n\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Shape, Konva.Node);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(Konva.Shape, 'stroke');\n\n  /**\n   * get/set stroke color\n   * @name stroke\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get stroke color\n   * var stroke = shape.stroke();\n   *\n   * // set stroke color with color string\n   * shape.stroke('green');\n   *\n   * // set stroke color with hex\n   * shape.stroke('#00ff00');\n   *\n   * // set stroke color with rgb\n   * shape.stroke('rgb(0,255,0)');\n   *\n   * // set stroke color with rgba and make it 50% opaque\n   * shape.stroke('rgba(0,255,0,0.5');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeWidth', 2);\n\n  /**\n   * get/set stroke width\n   * @name strokeWidth\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} strokeWidth\n   * @returns {Number}\n   * @example\n   * // get stroke width\n   * var strokeWidth = shape.strokeWidth();\n   *\n   * // set stroke width\n   * shape.strokeWidth();\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeHitEnabled', true);\n\n  /**\n   * get/set strokeHitEnabled property. Useful for performance optimization.\n   * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n   * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n   * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n   * Default value is true\n   * @name strokeHitEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} strokeHitEnabled\n   * @returns {Boolean}\n   * @example\n   * // get strokeHitEnabled\n   * var strokeHitEnabled = shape.strokeHitEnabled();\n   *\n   * // set strokeHitEnabled\n   * shape.strokeHitEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'perfectDrawEnabled', true);\n\n  /**\n   * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to false to improve performance.\n   * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n   * Default value is true\n   * @name perfectDrawEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} perfectDrawEnabled\n   * @returns {Boolean}\n   * @example\n   * // get perfectDrawEnabled\n   * var perfectDrawEnabled = shape.perfectDrawEnabled();\n   *\n   * // set perfectDrawEnabled\n   * shape.perfectDrawEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowForStrokeEnabled', true);\n\n  /**\n   * get/set shadowForStrokeEnabled. Useful for performance optimization.\n   * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n   * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n   * Default value is true\n   * @name shadowForStrokeEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} shadowForStrokeEnabled\n   * @returns {Boolean}\n   * @example\n   * // get shadowForStrokeEnabled\n   * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n   *\n   * // set shadowForStrokeEnabled\n   * shape.shadowForStrokeEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\n  /**\n   * get/set line join.  Can be miter, round, or bevel.  The\n   *  default is miter\n   * @name lineJoin\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} lineJoin\n   * @returns {String}\n   * @example\n   * // get line join\n   * var lineJoin = shape.lineJoin();\n   *\n   * // set line join\n   * shape.lineJoin('round');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\n  /**\n   * get/set line cap.  Can be butt, round, or square\n   * @name lineCap\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} lineCap\n   * @returns {String}\n   * @example\n   * // get line cap\n   * var lineCap = shape.lineCap();\n   *\n   * // set line cap\n   * shape.lineCap('round');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\n  /**\n   * get/set scene draw function\n   * @name sceneFunc\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Function} drawFunc drawing function\n   * @returns {Function}\n   * @example\n   * // get scene draw function\n   * var sceneFunc = shape.sceneFunc();\n   *\n   * // set scene draw function\n   * shape.sceneFunc(function(context) {\n   *   context.beginPath();\n   *   context.rect(0, 0, this.width(), this.height());\n   *   context.closePath();\n   *   context.fillStrokeShape(this);\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\n  /**\n   * get/set hit draw function\n   * @name hitFunc\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Function} drawFunc drawing function\n   * @returns {Function}\n   * @example\n   * // get hit draw function\n   * var hitFunc = shape.hitFunc();\n   *\n   * // set hit draw function\n   * shape.hitFunc(function(context) {\n   *   context.beginPath();\n   *   context.rect(0, 0, this.width(), this.height());\n   *   context.closePath();\n   *   context.fillStrokeShape(this);\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\n  /**\n   * get/set dash array for stroke.\n   * @name dash\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} dash\n   * @returns {Array}\n   * @example\n   *  // apply dashed stroke that is 10px long and 5 pixels apart\n   *  line.dash([10, 5]);\n   *  // apply dashed stroke that is made up of alternating dashed\n   *  // lines that are 10px long and 20px apart, and dots that have\n   *  // a radius of 5px and are 20px apart\n   *  line.dash([10, 20, 0.001, 20]);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dashOffset', 0);\n\n  /**\n   * get/set dash offset for stroke.\n   * @name dash\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} dash offset\n   * @returns {Number}\n   * @example\n   *  // apply dashed stroke that is 10px long and 5 pixels apart with an offset of 5px\n   *  line.dash([10, 5]);\n   *  line.dashOffset(5);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowColor');\n\n  /**\n   * get/set shadow color\n   * @name shadowColor\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get shadow color\n   * var shadow = shape.shadowColor();\n   *\n   * // set shadow color with color string\n   * shape.shadowColor('green');\n   *\n   * // set shadow color with hex\n   * shape.shadowColor('#00ff00');\n   *\n   * // set shadow color with rgb\n   * shape.shadowColor('rgb(0,255,0)');\n   *\n   * // set shadow color with rgba and make it 50% opaque\n   * shape.shadowColor('rgba(0,255,0,0.5');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowBlur');\n\n  /**\n   * get/set shadow blur\n   * @name shadowBlur\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} blur\n   * @returns {Number}\n   * @example\n   * // get shadow blur\n   * var shadowBlur = shape.shadowBlur();\n   *\n   * // set shadow blur\n   * shape.shadowBlur(10);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOpacity');\n\n  /**\n   * get/set shadow opacity.  must be a value between 0 and 1\n   * @name shadowOpacity\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} opacity\n   * @returns {Number}\n   * @example\n   * // get shadow opacity\n   * var shadowOpacity = shape.shadowOpacity();\n   *\n   * // set shadow opacity\n   * shape.shadowOpacity(0.5);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set shadow offset\n   * @name shadowOffset\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get shadow offset\n   * var shadowOffset = shape.shadowOffset();\n   *\n   * // set shadow offset\n   * shape.shadowOffset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetX', 0);\n\n  /**\n   * get/set shadow offset x\n   * @name shadowOffsetX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get shadow offset x\n   * var shadowOffsetX = shape.shadowOffsetX();\n   *\n   * // set shadow offset x\n   * shape.shadowOffsetX(5);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowOffsetY', 0);\n\n  /**\n   * get/set shadow offset y\n   * @name shadowOffsetY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get shadow offset y\n   * var shadowOffsetY = shape.shadowOffsetY();\n   *\n   * // set shadow offset y\n   * shape.shadowOffsetY(5);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\n  /**\n   * get/set fill pattern image\n   * @name fillPatternImage\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Image} image object\n   * @returns {Image}\n   * @example\n   * // get fill pattern image\n   * var fillPatternImage = shape.fillPatternImage();\n   *\n   * // set fill pattern image\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   shape.fillPatternImage(imageObj);\n   * };\n   * imageObj.src = 'path/to/image/jpg';\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fill');\n\n  /**\n   * get/set fill color\n   * @name fill\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get fill color\n   * var fill = shape.fill();\n   *\n   * // set fill color with color string\n   * shape.fill('green');\n   *\n   * // set fill color with hex\n   * shape.fill('#00ff00');\n   *\n   * // set fill color with rgb\n   * shape.fill('rgb(0,255,0)');\n   *\n   * // set fill color with rgba and make it 50% opaque\n   * shape.fill('rgba(0,255,0,0.5');\n   *\n   * // shape without fill\n   * shape.fill(null);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternX', 0);\n\n  /**\n   * get/set fill pattern x\n   * @name fillPatternX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern x\n   * var fillPatternX = shape.fillPatternX();\n   * // set fill pattern x\n   * shape.fillPatternX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternY', 0);\n\n  /**\n   * get/set fill pattern y\n   * @name fillPatternY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern y\n   * var fillPatternY = shape.fillPatternY();\n   * // set fill pattern y\n   * shape.fillPatternY(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\n  /**\n   * get/set fill linear gradient color stops\n   * @name fillLinearGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} colorStops\n   * @returns {Array} colorStops\n   * @example\n   * // get fill linear gradient color stops\n   * var colorStops = shape.fillLinearGradientColorStops();\n   *\n   * // create a linear gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeLinearGradientColorStops');\n\n  /**\n   * get/set stroke linear gradient color stops\n   * @name strokeLinearGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} colorStops\n   * @returns {Array} colorStops\n   * @example\n   * // get stroke linear gradient color stops\n   * var colorStops = shape.strokeLinearGradientColorStops();\n   *\n   * // create a linear gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.strokeLinearGradientColorStops([0, 'red', 0.5, 'blue', 1, 'green']);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartRadius',\n    0\n  );\n\n  /**\n   * get/set fill radial gradient start radius\n   * @name fillRadialGradientStartRadius\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radial gradient start radius\n   * var startRadius = shape.fillRadialGradientStartRadius();\n   *\n   * // set radial gradient start radius\n   * shape.fillRadialGradientStartRadius(0);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\n  /**\n   * get/set fill radial gradient end radius\n   * @name fillRadialGradientEndRadius\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radial gradient end radius\n   * var endRadius = shape.fillRadialGradientEndRadius();\n   *\n   * // set radial gradient end radius\n   * shape.fillRadialGradientEndRadius(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\n  /**\n   * get/set fill radial gradient color stops\n   * @name fillRadialGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} colorStops\n   * @returns {Array}\n   * @example\n   * // get fill radial gradient color stops\n   * var colorStops = shape.fillRadialGradientColorStops();\n   *\n   * // create a radial gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\n  /**\n   * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n   * @name fillPatternRepeat\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} repeat\n   * @returns {String}\n   * @example\n   * // get fill pattern repeat\n   * var repeat = shape.fillPatternRepeat();\n   *\n   * // repeat pattern in x direction only\n   * shape.fillPatternRepeat('repeat-x');\n   *\n   * // do not repeat the pattern\n   * shape.fillPatternRepeat('no repeat');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\n  /**\n   * get/set fill enabled flag\n   * @name fillEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get fill enabled flag\n   * var fillEnabled = shape.fillEnabled();\n   *\n   * // disable fill\n   * shape.fillEnabled(false);\n   *\n   * // enable fill\n   * shape.fillEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\n  /**\n   * get/set stroke enabled flag\n   * @name strokeEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get stroke enabled flag\n   * var strokeEnabled = shape.strokeEnabled();\n   *\n   * // disable stroke\n   * shape.strokeEnabled(false);\n   *\n   * // enable stroke\n   * shape.strokeEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\n  /**\n   * get/set shadow enabled flag\n   * @name shadowEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get shadow enabled flag\n   * var shadowEnabled = shape.shadowEnabled();\n   *\n   * // disable shadow\n   * shape.shadowEnabled(false);\n   *\n   * // enable shadow\n   * shape.shadowEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\n  /**\n   * get/set dash enabled flag\n   * @name dashEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get dash enabled flag\n   * var dashEnabled = shape.dashEnabled();\n   *\n   * // disable dash\n   * shape.dashEnabled(false);\n   *\n   * // enable dash\n   * shape.dashEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\n  /**\n   * get/set strokeScale enabled flag\n   * @name strokeScaleEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get stroke scale enabled flag\n   * var strokeScaleEnabled = shape.strokeScaleEnabled();\n   *\n   * // disable stroke scale\n   * shape.strokeScaleEnabled(false);\n   *\n   * // enable stroke scale\n   * shape.strokeScaleEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\n  /**\n   * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n   *   This is handy if you want to toggle between different fill types.\n   * @name fillPriority\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} priority\n   * @returns {String}\n   * @example\n   * // get fill priority\n   * var fillPriority = shape.fillPriority();\n   *\n   * // set fill priority\n   * shape.fillPriority('linear-gradient');\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set fill pattern offset\n   * @name fillPatternOffset\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get fill pattern offset\n   * var patternOffset = shape.fillPatternOffset();\n   *\n   * // set fill pattern offset\n   * shape.fillPatternOffset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetX', 0);\n\n  /**\n   * get/set fill pattern offset x\n   * @name fillPatternOffsetX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern offset x\n   * var patternOffsetX = shape.fillPatternOffsetX();\n   *\n   * // set fill pattern offset x\n   * shape.fillPatternOffsetX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternOffsetY', 0);\n\n  /**\n   * get/set fill pattern offset y\n   * @name fillPatternOffsetY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern offset y\n   * var patternOffsetY = shape.fillPatternOffsetY();\n   *\n   * // set fill pattern offset y\n   * shape.fillPatternOffsetY(10);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set fill pattern scale\n   * @name fillPatternScale\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} scale\n   * @param {Number} scale.x\n   * @param {Number} scale.y\n   * @returns {Object}\n   * @example\n   * // get fill pattern scale\n   * var patternScale = shape.fillPatternScale();\n   *\n   * // set fill pattern scale\n   * shape.fillPatternScale({\n   *   x: 2\n   *   y: 2\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleX', 1);\n\n  /**\n   * get/set fill pattern scale x\n   * @name fillPatternScaleX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern scale x\n   * var patternScaleX = shape.fillPatternScaleX();\n   *\n   * // set fill pattern scale x\n   * shape.fillPatternScaleX(2);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternScaleY', 1);\n\n  /**\n   * get/set fill pattern scale y\n   * @name fillPatternScaleY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern scale y\n   * var patternScaleY = shape.fillPatternScaleY();\n   *\n   * // set fill pattern scale y\n   * shape.fillPatternScaleY(2);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill linear gradient start point\n   * @name fillLinearGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill linear gradient start point\n   * var startPoint = shape.fillLinearGradientStartPoint();\n   *\n   * // set fill linear gradient start point\n   * shape.fillLinearGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set stroke linear gradient start point\n   * @name strokeLinearGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get stroke linear gradient start point\n   * var startPoint = shape.strokeLinearGradientStartPoint();\n   *\n   * // set stroke linear gradient start point\n   * shape.strokeLinearGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointX',\n    0\n  );\n\n  /**\n   * get/set fill linear gradient start point x\n   * @name fillLinearGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient start point x\n   * var startPointX = shape.fillLinearGradientStartPointX();\n   *\n   * // set fill linear gradient start point x\n   * shape.fillLinearGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPointX',\n    0\n  );\n\n  /**\n   * get/set stroke linear gradient start point x\n   * @name linearLinearGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient start point x\n   * var startPointX = shape.strokeLinearGradientStartPointX();\n   *\n   * // set stroke linear gradient start point x\n   * shape.strokeLinearGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointY',\n    0\n  );\n\n  /**\n   * get/set fill linear gradient start point y\n   * @name fillLinearGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient start point y\n   * var startPointY = shape.fillLinearGradientStartPointY();\n   *\n   * // set fill linear gradient start point y\n   * shape.fillLinearGradientStartPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPointY',\n    0\n  );\n  /**\n   * get/set stroke linear gradient start point y\n   * @name strokeLinearGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient start point y\n   * var startPointY = shape.strokeLinearGradientStartPointY();\n   *\n   * // set stroke linear gradient start point y\n   * shape.strokeLinearGradientStartPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill linear gradient end point\n   * @name fillLinearGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill linear gradient end point\n   * var endPoint = shape.fillLinearGradientEndPoint();\n   *\n   * // set fill linear gradient end point\n   * shape.fillLinearGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set stroke linear gradient end point\n   * @name strokeLinearGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get stroke linear gradient end point\n   * var endPoint = shape.strokeLinearGradientEndPoint();\n   *\n   * // set stroke linear gradient end point\n   * shape.strokeLinearGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n  /**\n   * get/set fill linear gradient end point x\n   * @name fillLinearGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient end point x\n   * var endPointX = shape.fillLinearGradientEndPointX();\n   *\n   * // set fill linear gradient end point x\n   * shape.fillLinearGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPointX',\n    0\n  );\n  /**\n   * get/set fill linear gradient end point x\n   * @name strokeLinearGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient end point x\n   * var endPointX = shape.strokeLinearGradientEndPointX();\n   *\n   * // set stroke linear gradient end point x\n   * shape.strokeLinearGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n  /**\n   * get/set fill linear gradient end point y\n   * @name fillLinearGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient end point y\n   * var endPointY = shape.fillLinearGradientEndPointY();\n   *\n   * // set fill linear gradient end point y\n   * shape.fillLinearGradientEndPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPointY',\n    0\n  );\n  /**\n   * get/set stroke linear gradient end point y\n   * @name strokeLinearGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient end point y\n   * var endPointY = shape.strokeLinearGradientEndPointY();\n   *\n   * // set stroke linear gradient end point y\n   * shape.strokeLinearGradientEndPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill radial gradient start point\n   * @name fillRadialGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill radial gradient start point\n   * var startPoint = shape.fillRadialGradientStartPoint();\n   *\n   * // set fill radial gradient start point\n   * shape.fillRadialGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointX',\n    0\n  );\n  /**\n   * get/set fill radial gradient start point x\n   * @name fillRadialGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient start point x\n   * var startPointX = shape.fillRadialGradientStartPointX();\n   *\n   * // set fill radial gradient start point x\n   * shape.fillRadialGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointY',\n    0\n  );\n  /**\n   * get/set fill radial gradient start point y\n   * @name fillRadialGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient start point y\n   * var startPointY = shape.fillRadialGradientStartPointY();\n   *\n   * // set fill radial gradient start point y\n   * shape.fillRadialGradientStartPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill radial gradient end point\n   * @name fillRadialGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill radial gradient end point\n   * var endPoint = shape.fillRadialGradientEndPoint();\n   *\n   * // set fill radial gradient end point\n   * shape.fillRadialGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n  /**\n   * get/set fill radial gradient end point x\n   * @name fillRadialGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient end point x\n   * var endPointX = shape.fillRadialGradientEndPointX();\n   *\n   * // set fill radial gradient end point x\n   * shape.fillRadialGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n  /**\n   * get/set fill radial gradient end point y\n   * @name fillRadialGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient end point y\n   * var endPointY = shape.fillRadialGradientEndPointY();\n   *\n   * // set fill radial gradient end point y\n   * shape.fillRadialGradientEndPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\n  /**\n   * get/set fill pattern rotation in degrees\n   * @name fillPatternRotation\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} rotation\n   * @returns {Konva.Shape}\n   * @example\n   * // get fill pattern rotation\n   * var patternRotation = shape.fillPatternRotation();\n   *\n   * // set fill pattern rotation\n   * shape.fillPatternRotation(20);\n   */\n\n  Konva.Factory.backCompat(Konva.Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc'\n  });\n\n  Konva.Collection.mapMethods(Konva.Shape);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var STAGE = 'Stage',\n    STRING = 'string',\n    PX = 'px',\n    MOUSEOUT = 'mouseout',\n    MOUSELEAVE = 'mouseleave',\n    MOUSEOVER = 'mouseover',\n    MOUSEENTER = 'mouseenter',\n    MOUSEMOVE = 'mousemove',\n    MOUSEDOWN = 'mousedown',\n    MOUSEUP = 'mouseup',\n    CONTEXTMENU = 'contextmenu',\n    CLICK = 'click',\n    DBL_CLICK = 'dblclick',\n    TOUCHSTART = 'touchstart',\n    TOUCHEND = 'touchend',\n    TAP = 'tap',\n    DBL_TAP = 'dbltap',\n    TOUCHMOVE = 'touchmove',\n    WHEEL = 'wheel',\n    CONTENT_MOUSEOUT = 'contentMouseout',\n    CONTENT_MOUSEOVER = 'contentMouseover',\n    CONTENT_MOUSEMOVE = 'contentMousemove',\n    CONTENT_MOUSEDOWN = 'contentMousedown',\n    CONTENT_MOUSEUP = 'contentMouseup',\n    CONTENT_CONTEXTMENU = 'contentContextmenu',\n    CONTENT_CLICK = 'contentClick',\n    CONTENT_DBL_CLICK = 'contentDblclick',\n    CONTENT_TOUCHSTART = 'contentTouchstart',\n    CONTENT_TOUCHEND = 'contentTouchend',\n    CONTENT_DBL_TAP = 'contentDbltap',\n    CONTENT_TAP = 'contentTap',\n    CONTENT_TOUCHMOVE = 'contentTouchmove',\n    CONTENT_WHEEL = 'contentWheel',\n    DIV = 'div',\n    RELATIVE = 'relative',\n    KONVA_CONTENT = 'konvajs-content',\n    SPACE = ' ',\n    UNDERSCORE = '_',\n    CONTAINER = 'container',\n    EMPTY_STRING = '',\n    EVENTS = [\n      MOUSEDOWN,\n      MOUSEMOVE,\n      MOUSEUP,\n      MOUSEOUT,\n      TOUCHSTART,\n      TOUCHMOVE,\n      TOUCHEND,\n      MOUSEOVER,\n      WHEEL,\n      CONTEXTMENU\n    ],\n    // cached variables\n    eventsLength = EVENTS.length;\n\n  function addEvent(ctx, eventName) {\n    ctx.content.addEventListener(\n      eventName,\n      function(evt) {\n        ctx[UNDERSCORE + eventName](evt);\n      },\n      false\n    );\n  }\n\n  /**\n   * Stage constructor.  A stage is used to contain multiple layers\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {String|Element} config.container Container selector or DOM element\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var stage = new Konva.Stage({\n   *   width: 500,\n   *   height: 800,\n   *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n   * });\n   */\n  Konva.Stage = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Stage, {\n    ___init: function(config) {\n      this.nodeType = STAGE;\n      // call super constructor\n      Konva.Container.call(this, config);\n      this._id = Konva.idCounter++;\n      this._buildDOM();\n      this._bindContentEvents();\n      this._enableNestedTransforms = false;\n      Konva.stages.push(this);\n    },\n    _validateAdd: function(child) {\n      if (child.getType() !== 'Layer') {\n        Konva.Util.throw('You may only add layers to the stage.');\n      }\n    },\n    /**\n     * set container dom element which contains the stage wrapper div element\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {DomElement} container can pass in a dom element or id string\n     */\n    setContainer: function(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = Konva.document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = Konva.document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr(CONTAINER, container);\n      return this;\n    },\n    shouldDrawHit: function() {\n      return true;\n    },\n    draw: function() {\n      Konva.Node.prototype.draw.call(this);\n      return this;\n    },\n    /**\n     * draw layer scene graphs\n     * @name draw\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n\n    /**\n     * draw layer hit graphs\n     * @name drawHit\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n\n    /**\n     * set height\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Number} height\n     */\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n     * set width\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Number} width\n     */\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n     * clear all layers\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    clear: function() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    },\n    clone: function(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = Konva.document.createElement(DIV);\n      return Konva.Container.prototype.clone.call(this, obj);\n    },\n    /**\n     * destroy stage\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    destroy: function() {\n      var content = this.content;\n      Konva.Container.prototype.destroy.call(this);\n\n      if (content && Konva.Util._isInDocument(content)) {\n        this.getContainer().removeChild(content);\n      }\n      var index = Konva.stages.indexOf(this);\n      if (index > -1) {\n        Konva.stages.splice(index, 1);\n      }\n      return this;\n    },\n    /**\n     * get pointer position which can be a touch position or mouse position\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @returns {Object}\n     */\n    getPointerPosition: function() {\n      return this.pointerPos;\n    },\n    getStage: function() {\n      return this;\n    },\n    /**\n     * get stage content div element which has the\n     *  the class name \"konvajs-content\"\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    getContent: function() {\n      return this.content;\n    },\n    toDataURL: function(config) {\n      config = config || {};\n\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null,\n        x = config.x || 0,\n        y = config.y || 0,\n        canvas = new Konva.SceneCanvas({\n          width: config.width || this.getWidth(),\n          height: config.height || this.getHeight(),\n          pixelRatio: config.pixelRatio || 1\n        }),\n        _context = canvas.getContext()._context,\n        layers = this.children;\n\n      if (x || y) {\n        _context.translate(-1 * x, -1 * y);\n      }\n\n      layers.each(function(layer) {\n        var width = layer.getCanvas().getWidth();\n        var height = layer.getCanvas().getHeight();\n        var ratio = layer.getCanvas().getPixelRatio();\n        _context.drawImage(\n          layer.getCanvas()._canvas,\n          0,\n          0,\n          width / ratio,\n          height / ratio\n        );\n      });\n      var src = canvas.toDataURL(mimeType, quality);\n\n      if (config.callback) {\n        config.callback(src);\n      }\n\n      return src;\n    },\n    /**\n     * converts stage into an image.\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     */\n    toImage: function(config) {\n      var cb = config.callback;\n\n      config.callback = function(dataUrl) {\n        Konva.Util._getImage(dataUrl, function(img) {\n          cb(img);\n        });\n      };\n      this.toDataURL(config);\n    },\n    /**\n     * get visible intersection shape. This is the preferred\n     *  method for determining if a point intersects a shape or not\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @param {String} [selector]\n     * @returns {Konva.Node}\n     * @example\n     * var shape = stage.getIntersection({x: 50, y: 50});\n     * // or if you interested in shape parent:\n     * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n     */\n    getIntersection: function(pos, selector) {\n      var layers = this.getChildren(),\n        len = layers.length,\n        end = len - 1,\n        n,\n        shape;\n\n      for (n = end; n >= 0; n--) {\n        shape = layers[n].getIntersection(pos, selector);\n        if (shape) {\n          return shape;\n        }\n      }\n\n      return null;\n    },\n    _resizeDOM: function() {\n      if (this.content) {\n        var width = this.getWidth(),\n          height = this.getHeight(),\n          layers = this.getChildren(),\n          len = layers.length,\n          n,\n          layer;\n\n        // set content dimensions\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n\n        // set layer dimensions\n        for (n = 0; n < len; n++) {\n          layer = layers[n];\n          layer.setSize(width, height);\n          layer.draw();\n        }\n      }\n    },\n    /**\n     * add layer or layers to stage\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {...Konva.Layer} layer\n     * @example\n     * stage.add(layer1, layer2, layer3);\n     */\n    add: function(layer) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      Konva.Container.prototype.add.call(this, layer);\n      layer._setCanvasSize(this.width(), this.height());\n\n      // draw layer and append canvas to container\n      layer.draw();\n\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n\n      // chainable\n      return this;\n    },\n    getParent: function() {\n      return null;\n    },\n    getLayer: function() {\n      return null;\n    },\n    /**\n     * returns a {@link Konva.Collection} of layers\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    getLayers: function() {\n      return this.getChildren();\n    },\n    _bindContentEvents: function() {\n      if (!Konva.isBrowser) {\n        return;\n      }\n      for (var n = 0; n < eventsLength; n++) {\n        addEvent(this, EVENTS[n]);\n      }\n    },\n    _mouseover: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\n      }\n    },\n    _mouseout: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var targetShape = this.targetShape;\n\n        if (targetShape && !Konva.isDragging()) {\n          targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n          targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n          this.targetShape = null;\n        }\n        this.pointerPos = undefined;\n\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\n      }\n    },\n    _mousemove: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchmove(evt);\n      }\n      // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n      if (\n        (typeof evt.movementX !== 'undefined' ||\n          typeof evt.movementY !== 'undefined') &&\n        evt.movementY === 0 &&\n        evt.movementX === 0\n      ) {\n        return null;\n      }\n      if (Konva.UA.mobile) {\n        return null;\n      }\n      this._setPointerPosition(evt);\n      var shape;\n\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          if (\n            !Konva.isDragging() &&\n            (!this.targetShape || this.targetShape._id !== shape._id)\n          ) {\n            if (this.targetShape) {\n              this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt }, shape);\n              this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt }, shape);\n            }\n            shape._fireAndBubble(MOUSEOVER, { evt: evt }, this.targetShape);\n            shape._fireAndBubble(MOUSEENTER, { evt: evt }, this.targetShape);\n            this.targetShape = shape;\n          } else {\n            shape._fireAndBubble(MOUSEMOVE, { evt: evt });\n          }\n        } else {\n          /*\n                 * if no shape was detected, clear target shape and try\n                 * to run mouseout from previous target shape\n                 */\n          if (this.targetShape && !Konva.isDragging()) {\n            this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n            this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n            this.targetShape = null;\n          }\n          this._fire(MOUSEMOVE, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEMOVE, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _mousedown: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchstart(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n\n        Konva.listenClickTap = true;\n\n        if (shape && shape.isListening()) {\n          this.clickStartShape = shape;\n          shape._fireAndBubble(MOUSEDOWN, { evt: evt });\n        } else {\n          this._fire(MOUSEDOWN, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _mouseup: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchend(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition()),\n          clickStartShape = this.clickStartShape,\n          clickEndShape = this.clickEndShape,\n          fireDblClick = false,\n          dd = Konva.DD;\n\n        if (Konva.inDblClickWindow) {\n          fireDblClick = true;\n          clearTimeout(this.dblTimeout);\n          // Konva.inDblClickWindow = false;\n        } else if (!dd || !dd.justDragged) {\n          // don't set inDblClickWindow after dragging\n          Konva.inDblClickWindow = true;\n        } else if (dd) {\n          dd.justDragged = false;\n        }\n\n        this.dblTimeout = setTimeout(function() {\n          Konva.inDblClickWindow = false;\n        }, Konva.dblClickWindow);\n\n        if (shape && shape.isListening()) {\n          this.clickEndShape = shape;\n          shape._fireAndBubble(MOUSEUP, { evt: evt });\n\n          // detect if click or double click occurred\n          if (\n            Konva.listenClickTap &&\n            clickStartShape &&\n            clickStartShape._id === shape._id\n          ) {\n            shape._fireAndBubble(CLICK, { evt: evt });\n\n            if (\n              fireDblClick &&\n              clickEndShape &&\n              clickEndShape._id === shape._id\n            ) {\n              shape._fireAndBubble(DBL_CLICK, { evt: evt });\n            }\n          }\n        } else {\n          this._fire(MOUSEUP, { evt: evt, target: this, currentTarget: this });\n          this._fire(CLICK, { evt: evt, target: this, currentTarget: this });\n          if (fireDblClick) {\n            this._fire(DBL_CLICK, {\n              evt: evt,\n              target: this,\n              currentTarget: this\n            });\n          }\n        }\n        // content events\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\n        if (Konva.listenClickTap) {\n          this._fire(CONTENT_CLICK, { evt: evt });\n          if (fireDblClick) {\n            this._fire(CONTENT_DBL_CLICK, { evt: evt });\n          }\n        }\n\n        Konva.listenClickTap = false;\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _contextmenu: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this._fire(CONTENT_CONTEXTMENU, { evt: evt });\n    },\n    _touchstart: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      Konva.listenClickTap = true;\n\n      if (shape && shape.isListening()) {\n        this.tapStartShape = shape;\n        shape._fireAndBubble(TOUCHSTART, { evt: evt });\n\n        // only call preventDefault if the shape is listening for events\n        if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n          evt.preventDefault();\n        }\n      } else {\n        this._fire(TOUCHSTART, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      // content event\n      this._fire(CONTENT_TOUCHSTART, { evt: evt });\n    },\n    _touchend: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition()),\n        fireDblClick = false;\n\n      if (Konva.inDblClickWindow) {\n        fireDblClick = true;\n        clearTimeout(this.dblTimeout);\n        // Konva.inDblClickWindow = false;\n      } else {\n        Konva.inDblClickWindow = true;\n      }\n\n      this.dblTimeout = setTimeout(function() {\n        Konva.inDblClickWindow = false;\n      }, Konva.dblClickWindow);\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(TOUCHEND, { evt: evt });\n\n        // detect if tap or double tap occurred\n        if (\n          Konva.listenClickTap &&\n          this.tapStartShape &&\n          shape._id === this.tapStartShape._id\n        ) {\n          shape._fireAndBubble(TAP, { evt: evt });\n\n          if (fireDblClick) {\n            shape._fireAndBubble(DBL_TAP, { evt: evt });\n          }\n        }\n        // only call preventDefault if the shape is listening for events\n        if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n          evt.preventDefault();\n        }\n      } else {\n        this._fire(TOUCHEND, { evt: evt, target: this, currentTarget: this });\n        this._fire(TAP, { evt: evt, target: this, currentTarget: this });\n        if (fireDblClick) {\n          this._fire(DBL_TAP, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n      }\n      // content events\n      this._fire(CONTENT_TOUCHEND, { evt: evt });\n      if (Konva.listenClickTap) {\n        this._fire(CONTENT_TAP, { evt: evt });\n        if (fireDblClick) {\n          this._fire(CONTENT_DBL_TAP, { evt: evt });\n        }\n      }\n\n      Konva.listenClickTap = false;\n    },\n    _touchmove: function(evt) {\n      this._setPointerPosition(evt);\n      var dd = Konva.DD,\n        shape;\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          shape._fireAndBubble(TOUCHMOVE, { evt: evt });\n          // only call preventDefault if the shape is listening for events\n          if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n          }\n        } else {\n          this._fire(TOUCHMOVE, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n        this._fire(CONTENT_TOUCHMOVE, { evt: evt });\n      }\n      if (dd) {\n        if (\n          Konva.isDragging() &&\n          Konva.DD.node.preventDefault() &&\n          evt.cancelable\n        ) {\n          evt.preventDefault();\n        }\n      }\n    },\n    _wheel: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, { evt: evt });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this._fire(CONTENT_WHEEL, { evt: evt });\n    },\n    _setPointerPosition: function(evt) {\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n\n      // touch events\n      if (evt.touches !== undefined) {\n        // currently, only handle one finger\n        if (evt.touches.length > 0) {\n          var touch = evt.touches[0];\n          // get the information for finger #1\n          x = touch.clientX - contentPosition.left;\n          y = touch.clientY - contentPosition.top;\n        }\n      } else {\n        // mouse events\n        x = evt.clientX - contentPosition.left;\n        y = evt.clientY - contentPosition.top;\n      }\n      if (x !== null && y !== null) {\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n      }\n    },\n    _getContentPosition: function() {\n      var rect = this.content.getBoundingClientRect\n        ? this.content.getBoundingClientRect()\n        : { top: 0, left: 0 };\n      return {\n        top: rect.top,\n        left: rect.left\n      };\n    },\n    _buildDOM: function() {\n      // the buffer canvas pixel ratio must be 1 because it is used as an\n      // intermediate canvas before copying the result onto a scene canvas.\n      // not setting it to 1 will result in an over compensation\n      this.bufferCanvas = new Konva.SceneCanvas();\n      this.bufferHitCanvas = new Konva.HitCanvas({ pixelRatio: 1 });\n\n      if (!Konva.isBrowser) {\n        return;\n      }\n      var container = this.getContainer();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      // clear content inside container\n      container.innerHTML = EMPTY_STRING;\n\n      // content\n      this.content = Konva.document.createElement(DIV);\n      this.content.style.position = RELATIVE;\n      this.content.className = KONVA_CONTENT;\n      this.content.setAttribute('role', 'presentation');\n\n      container.appendChild(this.content);\n\n      this._resizeDOM();\n    },\n    _onContent: function(typesStr, handler) {\n      var types = typesStr.split(SPACE),\n        len = types.length,\n        n,\n        baseEvent;\n\n      for (n = 0; n < len; n++) {\n        baseEvent = types[n];\n        this.content.addEventListener(baseEvent, handler, false);\n      }\n    },\n    // currently cache function is now working for stage, because stage has no its own canvas element\n    // TODO: may be it is better to cache all children layers?\n    cache: function() {\n      Konva.Util.warn(\n        'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.'\n      );\n    },\n    clearCache: function() {}\n  });\n  Konva.Util.extend(Konva.Stage, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetter(Konva.Stage, 'container');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\n  /**\n   * get container DOM element\n   * @name container\n   * @method\n   * @memberof Konva.Stage.prototype\n   * @returns {DomElement} container\n   * @example\n   * // get container\n   * var container = stage.container();\n   * // set container\n   * var container = document.createElement('div');\n   * body.appendChild(container);\n   * stage.container(container);\n   */\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n     * BaseLayer constructor.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     */\n  Konva.BaseLayer = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.BaseLayer, {\n    ___init: function(config) {\n      this.nodeType = 'Layer';\n      Konva.Container.call(this, config);\n    },\n    createPNGStream: function() {\n      return this.canvas._canvas.createPNGStream();\n    },\n    /**\n     * get layer canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * get layer hit canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getHitCanvas: function() {\n      return this.hitCanvas;\n    },\n    /**\n     * get layer canvas context\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getContext: function() {\n      return this.getCanvas().getContext();\n    },\n    /**\n     * clear scene and hit canvas contexts tied to the layer\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     * @example\n     * layer.clear();\n     * layer.clear({\n     *   x : 0,\n     *   y : 0,\n     *   width : 100,\n     *   height : 100\n     * });\n     */\n    clear: function(bounds) {\n      this.getContext().clear(bounds);\n      return this;\n    },\n    clearHitCache: function() {\n      this._hitImageData = undefined;\n    },\n    // extend Node.prototype.setZIndex\n    setZIndex: function(index) {\n      Konva.Node.prototype.setZIndex.call(this, index);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n\n        if (index < stage.getChildren().length - 1) {\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            stage.getChildren()[index + 1].getCanvas()._canvas\n          );\n        } else {\n          stage.content.appendChild(this.getCanvas()._canvas);\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToTop\n    moveToTop: function() {\n      Konva.Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveUp\n    moveUp: function() {\n      var moved = Konva.Node.prototype.moveUp.call(this);\n      if (!moved) {\n        return this;\n      }\n      var stage = this.getStage();\n      if (!stage) {\n        return this;\n      }\n      stage.content.removeChild(this.getCanvas()._canvas);\n\n      if (this.index < stage.getChildren().length - 1) {\n        stage.content.insertBefore(\n          this.getCanvas()._canvas,\n          stage.getChildren()[this.index + 1].getCanvas()._canvas\n        );\n      } else {\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveDown\n    moveDown: function() {\n      if (Konva.Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[this.index + 1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToBottom\n    moveToBottom: function() {\n      if (Konva.Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    getLayer: function() {\n      return this;\n    },\n    remove: function() {\n      var _canvas = this.getCanvas()._canvas;\n\n      Konva.Node.prototype.remove.call(this);\n\n      if (_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n      return this;\n    },\n    getStage: function() {\n      return this.parent;\n    },\n    setSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      return this;\n    },\n    /**\n     * get/set width of layer.getter return width of stage. setter doing nothing.\n     * if you want change width use `stage.width(value);`\n     * @name width\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var width = layer.width();\n     */\n    getWidth: function() {\n      if (this.parent) {\n        return this.parent.getWidth();\n      }\n    },\n    setWidth: function() {\n      Konva.Util.warn(\n        'Can not change width of layer. Use \"stage.width(value)\" function instead.'\n      );\n    },\n    /**\n     * get/set height of layer.getter return height of stage. setter doing nothing.\n     * if you want change height use `stage.height(value);`\n     * @name height\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var height = layer.height();\n     */\n    getHeight: function() {\n      if (this.parent) {\n        return this.parent.getHeight();\n      }\n    },\n    setHeight: function() {\n      Konva.Util.warn(\n        'Can not change height of layer. Use \"stage.height(value)\" function instead.'\n      );\n    },\n    // the apply transform method is handled by the Layer and FastLayer class\n    // because it is up to the layer to decide if an absolute or relative transform\n    // should be used\n    _applyTransform: function(shape, context, top) {\n      var m = shape.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n  });\n  Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n  /**\n   * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n   *  before drawing\n   * @name clearBeforeDraw\n   * @method\n   * @memberof Konva.BaseLayer.prototype\n   * @param {Boolean} clearBeforeDraw\n   * @returns {Boolean}\n   * @example\n   * // get clearBeforeDraw flag\n   * var clearBeforeDraw = layer.clearBeforeDraw();\n   *\n   * // disable clear before draw\n   * layer.clearBeforeDraw(false);\n   *\n   * // enable clear before draw\n   * layer.clearBeforeDraw(true);\n   */\n\n  Konva.Collection.mapMethods(Konva.BaseLayer);\n})(Konva);\n\n(function() {\n  'use strict';\n  // constants\n  var HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    /*\n         * 2 - 3 - 4\n         * |       |\n         * 1 - 0   5\n         *         |\n         * 8 - 7 - 6\n         */\n    INTERSECTION_OFFSETS = [\n      { x: 0, y: 0 }, // 0\n      { x: -1, y: 0 }, // 1\n      { x: -1, y: -1 }, // 2\n      { x: 0, y: -1 }, // 3\n      { x: 1, y: -1 }, // 4\n      { x: 1, y: 0 }, // 5\n      { x: 1, y: 1 }, // 6\n      { x: 0, y: 1 }, // 7\n      { x: -1, y: 1 } // 8\n    ],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\n  /**\n     * Layer constructor.  Layers are tied to their own canvas element and are used\n     * to contain groups or shapes.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.BaseLayer\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.Layer();\n     */\n  Konva.Layer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Layer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      this.hitCanvas = new Konva.HitCanvas({\n        pixelRatio: 1\n      });\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to a layer.');\n      }\n    },\n    /**\n         * get visible intersection shape. This is the preferred\n         * method for determining if a point intersects a shape or not\n         * also you may pass optional selector parametr to return ancestor of intersected shape\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @param {Object} pos\n         * @param {Number} pos.x\n         * @param {Number} pos.y\n         * @param {String} [selector]\n         * @returns {Konva.Node}\n         * @example\n         * var shape = layer.getIntersection({x: 50, y: 50});\n         * // or if you interested in shape parent:\n         * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n         */\n    getIntersection: function(pos, selector) {\n      var obj, i, intersectionOffset, shape;\n\n      if (!this.hitGraphEnabled() || !this.isVisible()) {\n        return null;\n      }\n      // in some cases antialiased area may be bigger than 1px\n      // it is possible if we will cache node, then scale it a lot\n      // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n      while (true) {\n        for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          intersectionOffset = INTERSECTION_OFFSETS[i];\n          obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n          shape = obj.shape;\n          if (shape && selector) {\n            return shape.findAncestor(selector, true);\n          } else if (shape) {\n            return shape;\n          }\n          // we should continue search if we found antialiased pixel\n          // that means our node somewhere very close\n          continueSearch = !!obj.antialiased;\n          // stop search if found empty pixel\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n        // if no shape, and no antialiased pixel, we should end searching\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    },\n    _getImageData: function(x, y) {\n      var width = this.hitCanvas.width || 1,\n        height = this.hitCanvas.height || 1,\n        index = Math.round(y) * width + Math.round(x);\n\n      if (!this._hitImageData) {\n        this._hitImageData = this.hitCanvas.context.getImageData(\n          0,\n          0,\n          width,\n          height\n        );\n      }\n\n      return [\n        this._hitImageData.data[4 * index + 0], // Red\n        this._hitImageData.data[4 * index + 1], // Green\n        this._hitImageData.data[4 * index + 2], // Blue\n        this._hitImageData.data[4 * index + 3] // Alpha\n      ];\n    },\n    _getIntersection: function(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(\n        Math.round(pos.x * ratio),\n        Math.round(pos.y * ratio),\n        1,\n        1\n      ).data,\n        p3 = p[3],\n        colorKey,\n        shape;\n      // fully opaque pixel\n      if (p3 === 255) {\n        colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n        shape = Konva.shapes[HASH + colorKey];\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        // antialiased pixel\n        return {\n          antialiased: true\n        };\n      }\n      // empty pixel\n      return {};\n    },\n    drawScene: function(can, top) {\n      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas, top);\n\n      this._fire(DRAW, {\n        node: this\n      });\n\n      return this;\n    },\n    drawHit: function(can, top) {\n      var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n\n      if (layer && layer.getClearBeforeDraw()) {\n        layer.getHitCanvas().getContext().clear();\n      }\n\n      Konva.Container.prototype.drawHit.call(this, canvas, top);\n      this.imageData = null; // Clear imageData cache\n      return this;\n    },\n    clear: function(bounds) {\n      Konva.BaseLayer.prototype.clear.call(this, bounds);\n      this.getHitCanvas().getContext().clear(bounds);\n      this.imageData = null; // Clear getImageData cache\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n        this.hitCanvas._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n        this.hitCanvas._canvas.style.display = 'none';\n      }\n      return this;\n    },\n    /**\n         * enable hit graph\n         * @name enableHitGraph\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @returns {Layer}\n         */\n    enableHitGraph: function() {\n      this.setHitGraphEnabled(true);\n      return this;\n    },\n    /**\n         * disable hit graph\n         * @name disableHitGraph\n         * @method\n         * @memberof Konva.Layer.prototype\n         * @returns {Layer}\n         */\n    disableHitGraph: function() {\n      this.setHitGraphEnabled(false);\n      return this;\n    },\n    setSize: function(width, height) {\n      Konva.BaseLayer.prototype.setSize.call(this, width, height);\n      this.hitCanvas.setSize(width, height);\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\n  Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n  /**\n     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n     *  draw performance because the hit graph will not be redrawn each time the layer is\n     *  drawn.  This, however, also disables mouse/touch event detection\n     * @name hitGraphEnabled\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @param {Boolean} enabled\n     * @returns {Boolean}\n     * @example\n     * // get hitGraphEnabled flag\n     * var hitGraphEnabled = layer.hitGraphEnabled();\n     *\n     * // disable hit graph\n     * layer.hitGraphEnabled(false);\n     *\n     * // enable hit graph\n     * layer.hitGraphEnabled(true);\n     */\n  Konva.Collection.mapMethods(Konva.Layer);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * FastLayer constructor. Layers are tied to their own canvas element and are used\n     * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n     * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n     * It renders about 2x faster than normal layers.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.BaseLayer\n     * @param {Object} config\n     * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n     * to clear the canvas before each layer draw.  The default value is true.\n     * @param {Boolean} [config.visible]\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var layer = new Konva.FastLayer();\n     */\n  Konva.FastLayer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.FastLayer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Shape') {\n        Konva.Util.throw('You may only add shapes to a fast layer.');\n      }\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n    },\n    hitGraphEnabled: function() {\n      return false;\n    },\n    getIntersection: function() {\n      return null;\n    },\n    drawScene: function(can) {\n      var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas);\n\n      return this;\n    },\n    draw: function() {\n      this.drawScene();\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n      }\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\n  Konva.Collection.mapMethods(Konva.FastLayer);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Group constructor.  Groups are used to contain shapes or other groups.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Container\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n     * @example\n     * var group = new Konva.Group();\n     */\n  Konva.Group = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Group, {\n    ___init: function(config) {\n      this.nodeType = 'Group';\n      // call super constructor\n      Konva.Container.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to groups.');\n      }\n    }\n  });\n  Konva.Util.extend(Konva.Group, Konva.Container);\n\n  Konva.Collection.mapMethods(Konva.Group);\n})();\n\n(function(Konva) {\n  'use strict';\n  var now = (function() {\n    if (Konva.global.performance && Konva.global.performance.now) {\n      return function() {\n        return Konva.global.performance.now();\n      };\n    }\n\n    return function() {\n      return new Date().getTime();\n    };\n  })();\n\n  function FRAF(callback) {\n    setTimeout(callback, 1000 / 60);\n  }\n\n  var RAF = (function() {\n    return (\n      Konva.global.requestAnimationFrame ||\n      Konva.global.webkitRequestAnimationFrame ||\n      Konva.global.mozRequestAnimationFrame ||\n      Konva.global.oRequestAnimationFrame ||\n      Konva.global.msRequestAnimationFrame ||\n      FRAF\n    );\n  })();\n\n  function requestAnimFrame() {\n    return RAF.apply(Konva.global, arguments);\n  }\n\n  /**\n     * Animation constructor.  A stage is used to contain multiple layers and handle\n     * @constructor\n     * @memberof Konva\n     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n     *  if you don't need to redraw layer/layers on some frames.\n     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n     *  Not specifying a node will result in no redraw.\n     * @example\n     * // move a node to the right at 50 pixels / second\n     * var velocity = 50;\n     *\n     * var anim = new Konva.Animation(function(frame) {\n     *   var dist = velocity * (frame.timeDiff / 1000);\n     *   node.move(dist, 0);\n     * }, layer);\n     *\n     * anim.start();\n     */\n  Konva.Animation = function(func, layers) {\n    var Anim = Konva.Animation;\n    this.func = func;\n    this.setLayers(layers);\n    this.id = Anim.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now()\n    };\n  };\n  /*\n     * Animation methods\n     */\n  Konva.Animation.prototype = {\n    /**\n         * set layers to be redrawn on each animation frame\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n         * @return {Konva.Animation} this\n         */\n    setLayers: function(layers) {\n      var lays = [];\n      // if passing in no layers\n      if (!layers) {\n        lays = [];\n      } else if (layers.length > 0) {\n        // if passing in an array of Layers\n        // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n        // the length property to check for both cases\n        lays = layers;\n      } else {\n        // if passing in a Layer\n        lays = [layers];\n      }\n\n      this.layers = lays;\n      return this;\n    },\n    /**\n         * get layers\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Array} Array of Konva.Layer\n         */\n    getLayers: function() {\n      return this.layers;\n    },\n    /**\n         * add layer.  Returns true if the layer was added, and false if it was not\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @param {Konva.Layer} layer to add\n         * @return {Bool} true if layer is added to animation, otherwise false\n         */\n    addLayer: function(layer) {\n      var layers = this.layers, len = layers.length, n;\n\n      // don't add the layer if it already exists\n      for (n = 0; n < len; n++) {\n        if (layers[n]._id === layer._id) {\n          return false;\n        }\n      }\n\n      this.layers.push(layer);\n      return true;\n    },\n    /**\n         * determine if animation is running or not.  returns true or false\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Bool} is animation running?\n         */\n    isRunning: function() {\n      var a = Konva.Animation,\n        animations = a.animations,\n        len = animations.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === this.id) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n         * start animation\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Konva.Animation} this\n         */\n    start: function() {\n      var Anim = Konva.Animation;\n      this.stop();\n      this.frame.timeDiff = 0;\n      this.frame.lastTime = now();\n      Anim._addAnimation(this);\n      return this;\n    },\n    /**\n         * stop animation\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @return {Konva.Animation} this\n         */\n    stop: function() {\n      Konva.Animation._removeAnimation(this);\n      return this;\n    },\n    _updateFrameObject: function(time) {\n      this.frame.timeDiff = time - this.frame.lastTime;\n      this.frame.lastTime = time;\n      this.frame.time += this.frame.timeDiff;\n      this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n  };\n  Konva.Animation.animations = [];\n  Konva.Animation.animIdCounter = 0;\n  Konva.Animation.animRunning = false;\n\n  Konva.Animation._addAnimation = function(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  };\n  Konva.Animation._removeAnimation = function(anim) {\n    var id = anim.id, animations = this.animations, len = animations.length, n;\n\n    for (n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  };\n\n  Konva.Animation._runFrames = function() {\n    var layerHash = {},\n      animations = this.animations,\n      anim,\n      layers,\n      func,\n      n,\n      i,\n      layersLen,\n      layer,\n      key,\n      needRedraw;\n    /*\n         * loop through all animations and execute animation\n         *  function.  if the animation object has specified node,\n         *  we can add the node to the nodes hash to eliminate\n         *  drawing the same node multiple times.  The node property\n         *  can be the stage itself or a layer\n         */\n    /*\n         * WARNING: don't cache animations.length because it could change while\n         * the for loop is running, causing a JS error\n         */\n\n    for (n = 0; n < animations.length; n++) {\n      anim = animations[n];\n      layers = anim.layers;\n      func = anim.func;\n\n      anim._updateFrameObject(now());\n      layersLen = layers.length;\n\n      // if animation object has a function, execute it\n      if (func) {\n        // allow anim bypassing drawing\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (i = 0; i < layersLen; i++) {\n        layer = layers[i];\n\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n\n    for (key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].draw();\n    }\n  };\n  Konva.Animation._animationLoop = function() {\n    var Anim = Konva.Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  };\n  Konva.Animation._handleAnimation = function() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      requestAnimFrame(this._animationLoop);\n    }\n  };\n\n  /**\n     * batch draw. this function will not do immediate draw\n     * but it will schedule drawing to next tick (requestAnimFrame)\n     * @method\n     * @return {Konva.Layer} this\n     * @memberof Konva.Base.prototype\n     */\n  Konva.BaseLayer.prototype.batchDraw = function() {\n    var that = this, Anim = Konva.Animation;\n\n    if (!this.batchAnim) {\n      this.batchAnim = new Anim(function() {\n        // stop animation after first tick\n        that.batchAnim.stop();\n      }, this);\n    }\n\n    if (!this.batchAnim.isRunning()) {\n      this.batchAnim.start();\n    }\n    return this;\n  };\n\n  /**\n     * batch draw\n     * @method\n     * @return {Konva.Stage} this\n     * @memberof Konva.Stage.prototype\n     */\n  Konva.Stage.prototype.batchDraw = function() {\n    this.getChildren().each(function(layer) {\n      layer.batchDraw();\n    });\n    return this;\n  };\n})(Konva);\n\n(function() {\n  'use strict';\n  var blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1\n  },\n    PAUSED = 1,\n    PLAYING = 2,\n    REVERSING = 3,\n    idCounter = 0,\n    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\n  var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n    this.prop = prop;\n    this.propFunc = propFunc;\n    this.begin = begin;\n    this._pos = begin;\n    this.duration = duration;\n    this._change = 0;\n    this.prevPos = 0;\n    this.yoyo = yoyo;\n    this._time = 0;\n    this._position = 0;\n    this._startTime = 0;\n    this._finish = 0;\n    this.func = func;\n    this._change = finish - this.begin;\n    this.pause();\n  };\n  /*\n     * Tween methods\n     */\n  Tween.prototype = {\n    fire: function(str) {\n      var handler = this[str];\n      if (handler) {\n        handler();\n      }\n    },\n    setTime: function(t) {\n      if (t > this.duration) {\n        if (this.yoyo) {\n          this._time = this.duration;\n          this.reverse();\n        } else {\n          this.finish();\n        }\n      } else if (t < 0) {\n        if (this.yoyo) {\n          this._time = 0;\n          this.play();\n        } else {\n          this.reset();\n        }\n      } else {\n        this._time = t;\n        this.update();\n      }\n    },\n    getTime: function() {\n      return this._time;\n    },\n    setPosition: function(p) {\n      this.prevPos = this._pos;\n      this.propFunc(p);\n      this._pos = p;\n    },\n    getPosition: function(t) {\n      if (t === undefined) {\n        t = this._time;\n      }\n      return this.func(t, this.begin, this._change, this.duration);\n    },\n    play: function() {\n      this.state = PLAYING;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onPlay');\n    },\n    reverse: function() {\n      this.state = REVERSING;\n      this._time = this.duration - this._time;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onReverse');\n    },\n    seek: function(t) {\n      this.pause();\n      this._time = t;\n      this.update();\n      this.fire('onSeek');\n    },\n    reset: function() {\n      this.pause();\n      this._time = 0;\n      this.update();\n      this.fire('onReset');\n    },\n    finish: function() {\n      this.pause();\n      this._time = this.duration;\n      this.update();\n      this.fire('onFinish');\n    },\n    update: function() {\n      this.setPosition(this.getPosition(this._time));\n    },\n    onEnterFrame: function() {\n      var t = this.getTimer() - this._startTime;\n      if (this.state === PLAYING) {\n        this.setTime(t);\n      } else if (this.state === REVERSING) {\n        this.setTime(this.duration - t);\n      }\n    },\n    pause: function() {\n      this.state = PAUSED;\n      this.fire('onPause');\n    },\n    getTimer: function() {\n      return new Date().getTime();\n    }\n  };\n\n  /**\n     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n     *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n     * @constructor\n     * @memberof Konva\n     * @example\n     * // instantiate new tween which fully rotates a node in 1 second\n     * var tween = new Konva.Tween({\n     *   node: node,\n     *   rotationDeg: 360,\n     *   duration: 1,\n     *   easing: Konva.Easings.EaseInOut\n     * });\n     *\n     * // play tween\n     * tween.play();\n     *\n     * // pause tween\n     * tween.pause();\n     */\n  Konva.Tween = function(config) {\n    var that = this,\n      node = config.node,\n      nodeId = node._id,\n      duration,\n      easing = config.easing || Konva.Easings.Linear,\n      yoyo = !!config.yoyo,\n      key;\n\n    if (typeof config.duration === 'undefined') {\n      duration = 1;\n    } else if (config.duration === 0) {\n      // zero is bad value for duration\n      duration = 0.001;\n    } else {\n      duration = config.duration;\n    }\n    this.node = node;\n    this._id = idCounter++;\n\n    var layers =\n      node.getLayer() ||\n      (node instanceof Konva.Stage ? node.getLayers() : null);\n    if (!layers) {\n      Konva.Util.error(\n        'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n      );\n    }\n    this.anim = new Konva.Animation(function() {\n      that.tween.onEnterFrame();\n    }, layers);\n\n    this.tween = new Tween(\n      key,\n      function(i) {\n        that._tweenFunc(i);\n      },\n      easing,\n      0,\n      1,\n      duration * 1000,\n      yoyo\n    );\n\n    this._addListeners();\n\n    // init attrs map\n    if (!Konva.Tween.attrs[nodeId]) {\n      Konva.Tween.attrs[nodeId] = {};\n    }\n    if (!Konva.Tween.attrs[nodeId][this._id]) {\n      Konva.Tween.attrs[nodeId][this._id] = {};\n    }\n    // init tweens map\n    if (!Konva.Tween.tweens[nodeId]) {\n      Konva.Tween.tweens[nodeId] = {};\n    }\n\n    for (key in config) {\n      if (blacklist[key] === undefined) {\n        this._addAttr(key, config[key]);\n      }\n    }\n\n    this.reset();\n\n    // callbacks\n    this.onFinish = config.onFinish;\n    this.onReset = config.onReset;\n  };\n\n  // start/diff object = attrs.nodeId.tweenId.attr\n  Konva.Tween.attrs = {};\n  // tweenId = tweens.nodeId.attr\n  Konva.Tween.tweens = {};\n\n  Konva.Tween.prototype = {\n    _addAttr: function(key, end) {\n      var node = this.node,\n        nodeId = node._id,\n        start,\n        diff,\n        tweenId,\n        n,\n        len,\n        trueEnd,\n        trueStart;\n\n      // remove conflict from tween map if it exists\n      tweenId = Konva.Tween.tweens[nodeId][key];\n\n      if (tweenId) {\n        delete Konva.Tween.attrs[nodeId][tweenId][key];\n      }\n\n      // add to tween map\n      start = node.getAttr(key);\n\n      if (Konva.Util._isArray(end)) {\n        diff = [];\n        len = Math.max(end.length, start.length);\n\n        if (key === 'points' && end.length !== start.length) {\n          // before tweening points we need to make sure that start.length === end.length\n          // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\n          if (end.length > start.length) {\n            // so in this case we will increase number of starting points\n            trueStart = start;\n            start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n          } else {\n            // in this case we will increase number of eding points\n            trueEnd = end;\n            end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n          }\n        }\n\n        for (n = 0; n < len; n++) {\n          diff.push(end[n] - start[n]);\n        }\n      } else if (colorAttrs.indexOf(key) !== -1) {\n        start = Konva.Util.colorToRGBA(start);\n        var endRGBA = Konva.Util.colorToRGBA(end);\n        diff = {\n          r: endRGBA.r - start.r,\n          g: endRGBA.g - start.g,\n          b: endRGBA.b - start.b,\n          a: endRGBA.a - start.a\n        };\n      } else {\n        diff = end - start;\n      }\n\n      Konva.Tween.attrs[nodeId][this._id][key] = {\n        start: start,\n        diff: diff,\n        end: end,\n        trueEnd: trueEnd,\n        trueStart: trueStart\n      };\n      Konva.Tween.tweens[nodeId][key] = this._id;\n    },\n    _tweenFunc: function(i) {\n      var node = this.node,\n        attrs = Konva.Tween.attrs[node._id][this._id],\n        key,\n        attr,\n        start,\n        diff,\n        newVal,\n        n,\n        len,\n        end;\n\n      for (key in attrs) {\n        attr = attrs[key];\n        start = attr.start;\n        diff = attr.diff;\n        end = attr.end;\n\n        if (Konva.Util._isArray(start)) {\n          newVal = [];\n          len = Math.max(start.length, end.length);\n          for (n = 0; n < len; n++) {\n            newVal.push((start[n] || 0) + diff[n] * i);\n          }\n        } else if (colorAttrs.indexOf(key) !== -1) {\n          newVal =\n            'rgba(' +\n            Math.round(start.r + diff.r * i) +\n            ',' +\n            Math.round(start.g + diff.g * i) +\n            ',' +\n            Math.round(start.b + diff.b * i) +\n            ',' +\n            (start.a + diff.a * i) +\n            ')';\n        } else {\n          newVal = start + diff * i;\n        }\n\n        node.setAttr(key, newVal);\n      }\n    },\n    _addListeners: function() {\n      var that = this;\n\n      // start listeners\n      this.tween.onPlay = function() {\n        that.anim.start();\n      };\n      this.tween.onReverse = function() {\n        that.anim.start();\n      };\n\n      // stop listeners\n      this.tween.onPause = function() {\n        that.anim.stop();\n      };\n      this.tween.onFinish = function() {\n        var node = that.node;\n\n        // after tweening  points of line we need to set original end\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueEnd) {\n          node.points(attrs.points.trueEnd);\n        }\n\n        if (that.onFinish) {\n          that.onFinish.call(that);\n        }\n      };\n      this.tween.onReset = function() {\n        var node = that.node;\n        // after tweening  points of line we need to set original start\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueStart) {\n          node.points(attrs.points.trueStart);\n        }\n\n        if (that.onReset) {\n          that.onReset();\n        }\n      };\n    },\n    /**\n         * play\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    play: function() {\n      this.tween.play();\n      return this;\n    },\n    /**\n         * reverse\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    reverse: function() {\n      this.tween.reverse();\n      return this;\n    },\n    /**\n         * reset\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    reset: function() {\n      this.tween.reset();\n      return this;\n    },\n    /**\n         * seek\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @param {Integer} t time in seconds between 0 and the duration\n         * @returns {Tween}\n         */\n    seek: function(t) {\n      this.tween.seek(t * 1000);\n      return this;\n    },\n    /**\n         * pause\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    pause: function() {\n      this.tween.pause();\n      return this;\n    },\n    /**\n         * finish\n         * @method\n         * @memberof Konva.Tween.prototype\n         * @returns {Tween}\n         */\n    finish: function() {\n      this.tween.finish();\n      return this;\n    },\n    /**\n         * destroy\n         * @method\n         * @memberof Konva.Tween.prototype\n         */\n    destroy: function() {\n      var nodeId = this.node._id,\n        thisId = this._id,\n        attrs = Konva.Tween.tweens[nodeId],\n        key;\n\n      this.pause();\n\n      for (key in attrs) {\n        delete Konva.Tween.tweens[nodeId][key];\n      }\n\n      delete Konva.Tween.attrs[nodeId][thisId];\n    }\n  };\n\n  /**\n     * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n     *\n     * @method Konva.Node#to\n     * @memberof Konva.Node\n     * @param {Object} [params] tween params\n     * @example\n     *\n     * circle.to({\n     *  x : 50,\n     *  duration : 0.5\n     * });\n     */\n  Konva.Node.prototype.to = function(params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function() {\n      this.destroy();\n      if (onFinish) {\n        onFinish();\n      }\n    };\n    var tween = new Konva.Tween(params);\n    tween.play();\n  };\n\n  /*\n    * These eases were ported from an Adobe Flash tweening library to JavaScript\n    * by Xaric\n    */\n\n  /**\n     * @namespace Easings\n     * @memberof Konva\n     */\n  Konva.Easings = {\n    /**\n        * back ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    BackEaseIn: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    /**\n        * back ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BackEaseOut: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    /**\n        * back ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BackEaseInOut: function(t, b, c, d) {\n      var s = 1.70158;\n      if ((t /= d / 2) < 1) {\n        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      }\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    /**\n        * elastic ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    ElasticEaseIn: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        -(a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p)) + b\n      );\n    },\n    /**\n        * elastic ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    ElasticEaseOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) +\n        c +\n        b\n      );\n    },\n    /**\n        * elastic ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    ElasticEaseInOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d / 2) === 2) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * (0.3 * 1.5);\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      if (t < 1) {\n        return (\n          -0.5 *\n            (a *\n              Math.pow(2, 10 * (t -= 1)) *\n              Math.sin((t * d - s) * (2 * Math.PI) / p)) +\n          b\n        );\n      }\n      return (\n        a *\n          Math.pow(2, -10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p) *\n          0.5 +\n        c +\n        b\n      );\n    },\n    /**\n        * bounce ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BounceEaseOut: function(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n      }\n    },\n    /**\n        * bounce ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    BounceEaseIn: function(t, b, c, d) {\n      return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    /**\n        * bounce ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    BounceEaseInOut: function(t, b, c, d) {\n      if (t < d / 2) {\n        return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n      } else {\n        return (\n          Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b\n        );\n      }\n    },\n    /**\n        * ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    EaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    /**\n        * ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    EaseOut: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    /**\n        * ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    EaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n    /**\n        * strong ease in\n        * @function\n        * @memberof Konva.Easings\n        */\n    StrongEaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    /**\n        * strong ease out\n        * @function\n        * @memberof Konva.Easings\n        */\n    StrongEaseOut: function(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    /**\n        * strong ease in out\n        * @function\n        * @memberof Konva.Easings\n        */\n    StrongEaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t * t * t + b;\n      }\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    /**\n        * linear\n        * @function\n        * @memberof Konva.Easings\n        */\n    Linear: function(t, b, c, d) {\n      return c * t / d + b;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  Konva.DD = {\n    // properties\n    anim: new Konva.Animation(function() {\n      var b = this.dirty;\n      this.dirty = false;\n      return b;\n    }),\n    isDragging: false,\n    justDragged: false,\n    offset: {\n      x: 0,\n      y: 0\n    },\n    node: null,\n\n    // methods\n    _drag: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node;\n      if (node) {\n        if (!dd.isDragging) {\n          var pos = node.getStage().getPointerPosition();\n          // it is possible that pos is undefined\n          // reattach it\n          if (!pos) {\n            node.getStage()._setPointerPosition(evt);\n            pos = node.getStage().getPointerPosition();\n          }\n          var dragDistance = node.dragDistance();\n          var distance = Math.max(\n            Math.abs(pos.x - dd.startPointerPos.x),\n            Math.abs(pos.y - dd.startPointerPos.y)\n          );\n          if (distance < dragDistance) {\n            return;\n          }\n        }\n\n        node.getStage()._setPointerPosition(evt);\n        node._setDragPosition(evt);\n        if (!dd.isDragging) {\n          dd.isDragging = true;\n          node.fire(\n            'dragstart',\n            {\n              type: 'dragstart',\n              target: node,\n              evt: evt\n            },\n            true\n          );\n        }\n\n        // execute ondragmove if defined\n        node.fire(\n          'dragmove',\n          {\n            type: 'dragmove',\n            target: node,\n            evt: evt\n          },\n          true\n        );\n      }\n    },\n    _endDragBefore: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node,\n        layer;\n\n      if (node) {\n        layer = node.getLayer();\n        dd.anim.stop();\n\n        // only fire dragend event if the drag and drop\n        // operation actually started.\n        if (dd.isDragging) {\n          dd.isDragging = false;\n          dd.justDragged = true;\n          Konva.listenClickTap = false;\n\n          if (evt) {\n            evt.dragEndNode = node;\n          }\n        }\n\n        delete dd.node;\n\n        if (node.getLayer() || layer || node instanceof Konva.Stage) {\n          (layer || node).draw();\n        }\n      }\n    },\n    _endDragAfter: function(evt) {\n      evt = evt || {};\n      var dragEndNode = evt.dragEndNode;\n\n      if (evt && dragEndNode) {\n        dragEndNode.fire(\n          'dragend',\n          {\n            type: 'dragend',\n            target: dragEndNode,\n            evt: evt\n          },\n          true\n        );\n      }\n    }\n  };\n\n  // Node extenders\n\n  /**\n   * initiate drag and drop\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.startDrag = function() {\n    var dd = Konva.DD,\n      stage = this.getStage(),\n      layer = this.getLayer(),\n      pos = stage.getPointerPosition(),\n      ap = this.getAbsolutePosition();\n\n    if (pos) {\n      if (dd.node) {\n        dd.node.stopDrag();\n      }\n\n      dd.node = this;\n      dd.startPointerPos = pos;\n      dd.offset.x = pos.x - ap.x;\n      dd.offset.y = pos.y - ap.y;\n      dd.anim.setLayers(layer || this.getLayers());\n      dd.anim.start();\n\n      this._setDragPosition();\n    }\n  };\n\n  Konva.Node.prototype._setDragPosition = function(evt) {\n    var dd = Konva.DD,\n      pos = this.getStage().getPointerPosition(),\n      dbf = this.getDragBoundFunc();\n    if (!pos) {\n      return;\n    }\n    var newNodePos = {\n      x: pos.x - dd.offset.x,\n      y: pos.y - dd.offset.y\n    };\n\n    if (dbf !== undefined) {\n      newNodePos = dbf.call(this, newNodePos, evt);\n    }\n    this.setAbsolutePosition(newNodePos);\n\n    if (\n      !this._lastPos ||\n      this._lastPos.x !== newNodePos.x ||\n      this._lastPos.y !== newNodePos.y\n    ) {\n      dd.anim.dirty = true;\n    }\n\n    this._lastPos = newNodePos;\n  };\n\n  /**\n   * stop drag and drop\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.stopDrag = function() {\n    var dd = Konva.DD,\n      evt = {};\n    dd._endDragBefore(evt);\n    dd._endDragAfter(evt);\n  };\n\n  Konva.Node.prototype.setDraggable = function(draggable) {\n    this._setAttr('draggable', draggable);\n    this._dragChange();\n  };\n\n  var origRemove = Konva.Node.prototype.remove;\n\n  Konva.Node.prototype.__originalRemove = origRemove;\n  Konva.Node.prototype.remove = function() {\n    var dd = Konva.DD;\n\n    // stop DD\n    if (dd.node && dd.node._id === this._id) {\n      this.stopDrag();\n    }\n\n    origRemove.call(this);\n  };\n\n  /**\n   * determine if node is currently in drag and drop mode\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.isDragging = function() {\n    var dd = Konva.DD;\n    return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n  };\n\n  Konva.Node.prototype._listenDrag = function() {\n    var that = this;\n\n    this._dragCleanup();\n\n    if (this.getClassName() === 'Stage') {\n      this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    } else {\n      this.on('mousedown.konva touchstart.konva', function(evt) {\n        // ignore right and middle buttons\n        if (evt.evt.button === 1 || evt.evt.button === 2) {\n          return;\n        }\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    }\n\n    // listening is required for drag and drop\n    /*\n        this._listeningEnabled = true;\n        this._clearSelfAndAncestorCache('listeningEnabled');\n        */\n  };\n\n  Konva.Node.prototype._dragChange = function() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      // remove event listeners\n      this._dragCleanup();\n\n      /*\n             * force drag and drop to end\n             * if this node is currently in\n             * drag and drop mode\n             */\n      var stage = this.getStage();\n      var dd = Konva.DD;\n      if (stage && dd.node && dd.node._id === this._id) {\n        dd.node.stopDrag();\n      }\n    }\n  };\n\n  Konva.Node.prototype._dragCleanup = function() {\n    if (this.getClassName() === 'Stage') {\n      this.off('contentMousedown.konva');\n      this.off('contentTouchstart.konva');\n    } else {\n      this.off('mousedown.konva');\n      this.off('touchstart.konva');\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\n  /**\n   * get/set drag bound function.  This is used to override the default\n   *  drag and drop position.\n   * @name dragBoundFunc\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Function} dragBoundFunc\n   * @returns {Function}\n   * @example\n   * // get drag bound function\n   * var dragBoundFunc = node.dragBoundFunc();\n   *\n   * // create vertical drag and drop\n   * node.dragBoundFunc(function(pos){\n   *   // important pos - is absolute position of the node\n   *   // you should return absolute position too\n   *   return {\n   *     x: this.getAbsolutePosition().x,\n   *     y: pos.y\n   *   };\n   * });\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\n  /**\n   * get/set draggable flag\n   * @name draggable\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean} draggable\n   * @returns {Boolean}\n   * @example\n   * // get draggable flag\n   * var draggable = node.draggable();\n   *\n   * // enable drag and drop\n   * node.draggable(true);\n   *\n   * // disable drag and drop\n   * node.draggable(false);\n   */\n\n  if (Konva.isBrowser) {\n    var html = Konva.document.documentElement;\n    html.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n    html.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\n    html.addEventListener('mousemove', Konva.DD._drag);\n    html.addEventListener('touchmove', Konva.DD._drag);\n\n    html.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n    html.addEventListener('touchend', Konva.DD._endDragAfter, false);\n  }\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Rect constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} [config.cornerRadius]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var rect = new Konva.Rect({\n     *   width: 100,\n     *   height: 50,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 5\n     * });\n     */\n  Konva.Rect = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Rect.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Rect';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var cornerRadius = this.getCornerRadius(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n\n      if (!cornerRadius) {\n        // simple rect - don't bother doing all that complicated maths stuff.\n        context.rect(0, 0, width, height);\n      } else {\n        // arcTo would be nicer, but browser support is patchy (Opera)\n        cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n        context.moveTo(cornerRadius, 0);\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  };\n\n  Konva.Util.extend(Konva.Rect, Konva.Shape);\n\n  Konva.Factory.addGetterSetter(Konva.Rect, 'cornerRadius', 0);\n  /**\n     * get/set corner radius\n     * @name cornerRadius\n     * @method\n     * @memberof Konva.Rect.prototype\n     * @param {Number} cornerRadius\n     * @returns {Number}\n     * @example\n     * // get corner radius\n     * var cornerRadius = rect.cornerRadius();\n     *\n     * // set corner radius\n     * rect.cornerRadius(10);\n     */\n\n  Konva.Collection.mapMethods(Konva.Rect);\n})();\n\n(function(Konva) {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001, CIRCLE = 'Circle';\n\n  /**\n     * Circle constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // create circle\n     * var circle = new Konva.Circle({\n     *   radius: 40,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5\n     * });\n     */\n  Konva.Circle = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Circle.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = CIRCLE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Circle, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Circle, 'radius', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\n  /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Circle.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radius\n     * var radius = circle.radius();\n     *\n     * // set radius\n     * circle.radius(10);\n     */\n\n  Konva.Collection.mapMethods(Konva.Circle);\n})(Konva);\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001, ELLIPSE = 'Ellipse';\n\n  /**\n     * Ellipse constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Object} config.radius defines x and y radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var ellipse = new Konva.Ellipse({\n     *   radius : {\n     *     x : 50,\n     *     y : 50\n     *   },\n     *   fill: 'red'\n     * });\n     */\n  Konva.Ellipse = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ellipse.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = ELLIPSE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var rx = this.getRadiusX(), ry = this.getRadiusY();\n\n      context.beginPath();\n      context.save();\n      if (rx !== ry) {\n        context.scale(1, ry / rx);\n      }\n      context.arc(0, 0, rx, 0, PIx2, false);\n      context.restore();\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadiusX() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadiusY() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this.setRadius({\n        x: width / 2\n      });\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this.setRadius({\n        y: height / 2\n      });\n    }\n  };\n  Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\n  /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Object} radius\n     * @param {Number} radius.x\n     * @param {Number} radius.y\n     * @returns {Object}\n     * @example\n     * // get radius\n     * var radius = ellipse.radius();\n     *\n     * // set radius\n     * ellipse.radius({\n     *   x: 200,\n     *   y: 100\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusX', 0);\n  /**\n     * get/set radius x\n     * @name radiusX\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get radius x\n     * var radiusX = ellipse.radiusX();\n     *\n     * // set radius x\n     * ellipse.radiusX(200);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Ellipse, 'radiusY', 0);\n  /**\n     * get/set radius y\n     * @name radiusY\n     * @method\n     * @memberof Konva.Ellipse.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get radius y\n     * var radiusY = ellipse.radiusY();\n     *\n     * // set radius y\n     * ellipse.radiusY(200);\n     */\n\n  Konva.Collection.mapMethods(Konva.Ellipse);\n})();\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001;\n  /**\n     * Ring constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var ring = new Konva.Ring({\n     *   innerRadius: 40,\n     *   outerRadius: 80,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 5\n     * });\n     */\n  Konva.Ring = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ring.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Ring';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n      context.moveTo(this.getOuterRadius(), 0);\n      context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    },\n    setOuterRadius: function(val) {\n      this._setAttr('outerRadius', val);\n      this.setWidth(val * 2);\n      this.setHeight(val * 2);\n    }\n  };\n  Konva.Util.extend(Konva.Ring, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Ring, 'innerRadius', 0);\n\n  /**\n     * get/set innerRadius\n     * @name innerRadius\n     * @method\n     * @memberof Konva.Ring.prototype\n     * @param {Number} innerRadius\n     * @returns {Number}\n     * @example\n     * // get inner radius\n     * var innerRadius = ring.innerRadius();\n     *\n     * // set inner radius\n     * ring.innerRadius(20);\n     */\n  Konva.Factory.addGetter(Konva.Ring, 'outerRadius', 0);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\n  /**\n     * get/set outerRadius\n     * @name outerRadius\n     * @method\n     * @memberof Konva.Ring.prototype\n     * @param {Number} outerRadius\n     * @returns {Number}\n     * @example\n     * // get outer radius\n     * var outerRadius = ring.outerRadius();\n     *\n     * // set outer radius\n     * ring.outerRadius(20);\n     */\n\n  Konva.Collection.mapMethods(Konva.Ring);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Wedge constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.angle in degrees\n     * @param {Number} config.radius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // draw a wedge that's pointing downwards\n     * var wedge = new Konva.Wedge({\n     *   radius: 40,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5,\n     *   angleDeg: 60,\n     *   rotationDeg: -120\n     * });\n     */\n  Konva.Wedge = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Wedge.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Wedge';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(\n        0,\n        0,\n        this.getRadius(),\n        0,\n        Konva.getAngle(this.getAngle()),\n        this.getClockwise()\n      );\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'radius', 0);\n\n  /**\n     * get/set radius\n     * @name radius\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} radius\n     * @returns {Number}\n     * @example\n     * // get radius\n     * var radius = wedge.radius();\n     *\n     * // set radius\n     * wedge.radius(10);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'angle', 0);\n\n  /**\n     * get/set angle in degrees\n     * @name angle\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} angle\n     * @returns {Number}\n     * @example\n     * // get angle\n     * var angle = wedge.angle();\n     *\n     * // set angle\n     * wedge.angle(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\n  /**\n     * get/set clockwise flag\n     * @name clockwise\n     * @method\n     * @memberof Konva.Wedge.prototype\n     * @param {Number} clockwise\n     * @returns {Number}\n     * @example\n     * // get clockwise flag\n     * var clockwise = wedge.clockwise();\n     *\n     * // draw wedge counter-clockwise\n     * wedge.clockwise(false);\n     *\n     * // draw wedge clockwise\n     * wedge.clockwise(true);\n     */\n\n  Konva.Factory.backCompat(Konva.Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle'\n  });\n\n  Konva.Collection.mapMethods(Konva.Wedge);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n     * Arc constructor\n     * @constructor\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.angle in degrees\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {Boolean} [config.clockwise]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // draw a Arc that's pointing downwards\n     * var arc = new Konva.Arc({\n     *   innerRadius: 40,\n     *   outerRadius: 80,\n     *   fill: 'red',\n     *   stroke: 'black'\n     *   strokeWidth: 5,\n     *   angle: 60,\n     *   rotationDeg: -120\n     * });\n     */\n  Konva.Arc = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Arc.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Arc';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n\n      context.beginPath();\n      context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n      context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.getOuterRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.getOuterRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Arc, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Arc, 'innerRadius', 0);\n\n  /**\n     * get/set innerRadius\n     * @name innerRadius\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} innerRadius\n     * @returns {Number}\n     * @example\n     * // get inner radius\n     * var innerRadius = arc.innerRadius();\n     *\n     * // set inner radius\n     * arc.innerRadius(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'outerRadius', 0);\n\n  /**\n     * get/set outerRadius\n     * @name outerRadius\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} outerRadius\n     * @returns {Number}\n     * @example\n     * // get outer radius\n     * var outerRadius = arc.outerRadius();\n     *\n     * // set outer radius\n     * arc.outerRadius(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'angle', 0);\n\n  /**\n     * get/set angle in degrees\n     * @name angle\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Number} angle\n     * @returns {Number}\n     * @example\n     * // get angle\n     * var angle = arc.angle();\n     *\n     * // set angle\n     * arc.angle(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\n  /**\n     * get/set clockwise flag\n     * @name clockwise\n     * @method\n     * @memberof Konva.Arc.prototype\n     * @param {Boolean} clockwise\n     * @returns {Boolean}\n     * @example\n     * // get clockwise flag\n     * var clockwise = arc.clockwise();\n     *\n     * // draw arc counter-clockwise\n     * arc.clockwise(false);\n     *\n     * // draw arc clockwise\n     * arc.clockwise(true);\n     */\n\n  Konva.Collection.mapMethods(Konva.Arc);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var IMAGE = 'Image';\n\n  /**\n     * Image constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Image} config.image\n     * @param {Object} [config.crop]\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   var image = new Konva.Image({\n     *     x: 200,\n     *     y: 50,\n     *     image: imageObj,\n     *     width: 100,\n     *     height: 100\n     *   });\n     * };\n     * imageObj.src = '/path/to/image.jpg'\n     */\n  Konva.Image = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Image.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = IMAGE;\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke() &&\n        this.getStage()\n      );\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        image = this.getImage(),\n        cropWidth,\n        cropHeight,\n        params;\n\n      if (image) {\n        cropWidth = this.getCropWidth();\n        cropHeight = this.getCropHeight();\n        if (cropWidth && cropHeight) {\n          params = [\n            image,\n            this.getCropX(),\n            this.getCropY(),\n            cropWidth,\n            cropHeight,\n            0,\n            0,\n            width,\n            height\n          ];\n        } else {\n          params = [image, 0, 0, width, height];\n        }\n      }\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        context.drawImage.apply(context, params);\n      }\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(), height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      var image = this.getImage();\n      return this.attrs.width || (image ? image.width : 0);\n    },\n    getHeight: function() {\n      var image = this.getImage();\n      return this.attrs.height || (image ? image.height : 0);\n    }\n  };\n  Konva.Util.extend(Konva.Image, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\n  /**\n     * set image\n     * @name setImage\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Image} image\n     */\n\n  /**\n     * get image\n     * @name getImage\n     * @method\n     * @memberof Konva.Image.prototype\n     * @returns {Image}\n     */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n     * get/set crop\n     * @method\n     * @name crop\n     * @memberof Konva.Image.prototype\n     * @param {Object} crop\n     * @param {Number} crop.x\n     * @param {Number} crop.y\n     * @param {Number} crop.width\n     * @param {Number} crop.height\n     * @returns {Object}\n     * @example\n     * // get crop\n     * var crop = image.crop();\n     *\n     * // set crop\n     * image.crop({\n     *   x: 20,\n     *   y: 20,\n     *   width: 20,\n     *   height: 20\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropX', 0);\n  /**\n     * get/set crop x\n     * @method\n     * @name cropX\n     * @memberof Konva.Image.prototype\n     * @param {Number} x\n     * @returns {Number}\n     * @example\n     * // get crop x\n     * var cropX = image.cropX();\n     *\n     * // set crop x\n     * image.cropX(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropY', 0);\n  /**\n     * get/set crop y\n     * @name cropY\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} y\n     * @returns {Number}\n     * @example\n     * // get crop y\n     * var cropY = image.cropY();\n     *\n     * // set crop y\n     * image.cropY(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropWidth', 0);\n  /**\n     * get/set crop width\n     * @name cropWidth\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} width\n     * @returns {Number}\n     * @example\n     * // get crop width\n     * var cropWidth = image.cropWidth();\n     *\n     * // set crop width\n     * image.cropWidth(20);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Image, 'cropHeight', 0);\n  /**\n     * get/set crop height\n     * @name cropHeight\n     * @method\n     * @memberof Konva.Image.prototype\n     * @param {Number} height\n     * @returns {Number}\n     * @example\n     * // get crop height\n     * var cropHeight = image.cropHeight();\n     *\n     * // set crop height\n     * image.cropHeight(20);\n     */\n\n  Konva.Collection.mapMethods(Konva.Image);\n\n  /**\n     * load image from given url and create `Konva.Image` instance\n     * @method\n     * @memberof Konva.Image\n     * @param {String} url image source\n     * @param {Function} callback with Konva.Image instance as first argument\n     * @example\n     *  Konva.Image.fromURL(imageURL, function(image){\n     *    // image is Konva.Image instance\n     *    layer.add(image);\n     *    layer.draw();\n     *  });\n     */\n  Konva.Image.fromURL = function(url, callback) {\n    var img = new Image();\n    img.onload = function() {\n      var image = new Konva.Image({\n        image: img\n      });\n      callback(image);\n    };\n    img.crossOrigin = 'Anonymous';\n    img.src = url;\n  };\n})();\n\n/*eslint-disable max-depth */\n(function() {\n  'use strict';\n  // var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  // constants\n  var AUTO = 'auto',\n    //CANVAS = 'canvas',\n    CENTER = 'center',\n    JUSTIFY = 'justify',\n    CHANGE_KONVA = 'Change.konva',\n    CONTEXT_2D = '2d',\n    DASH = '-',\n    EMPTY_STRING = '',\n    LEFT = 'left',\n    TEXT = 'text',\n    TEXT_UPPER = 'Text',\n    MIDDLE = 'middle',\n    NORMAL = 'normal',\n    PX_SPACE = 'px ',\n    SPACE = ' ',\n    RIGHT = 'right',\n    WORD = 'word',\n    CHAR = 'char',\n    NONE = 'none',\n    ELLIPSIS = '…',\n    ATTR_CHANGE_LIST = [\n      'fontFamily',\n      'fontSize',\n      'fontStyle',\n      'fontVariant',\n      'padding',\n      'align',\n      'lineHeight',\n      'text',\n      'width',\n      'height',\n      'wrap',\n      'ellipsis',\n      'letterSpacing'\n    ],\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n  var dummyContext;\n  function getDummyContext() {\n    if (dummyContext) {\n      return dummyContext;\n    }\n    dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n  }\n\n  /**\n   * Text constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} [config.fontFamily] default is Arial\n   * @param {Number} [config.fontSize] in pixels.  Default is 12\n   * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n   * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n   * @param {String} config.text\n   * @param {String} [config.align] can be left, center, or right\n   * @param {Number} [config.padding]\n   * @param {Number} [config.lineHeight] default is 1\n   * @param {String} [config.wrap] can be word, char, or none. Default is word\n   * @param {Boolean} [config.ellipsis] can be true or false. Default is false. if Konva.Text config is set to wrap=\"none\" and ellipsis=true, then it will add \"...\" to the end\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var text = new Konva.Text({\n   *   x: 10,\n   *   y: 15,\n   *   text: 'Simple Text',\n   *   fontSize: 30,\n   *   fontFamily: 'Calibri',\n   *   fill: 'green'\n   * });\n   */\n  Konva.Text = function(config) {\n    this.___init(config);\n  };\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.Text.prototype = {\n    ___init: function(config) {\n      config = config || {};\n\n      // set default color to black\n      if (\n        !config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops\n      ) {\n        config.fill = config.fill || 'black';\n      }\n      //\n      // if (config.width === undefined) {\n      //     config.width = AUTO;\n      // }\n      // if (config.height === undefined) {\n      //     config.height = AUTO;\n      // }\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this.className = TEXT_UPPER;\n\n      // update text data for certain attr changes\n      for (var n = 0; n < attrChangeListLen; n++) {\n        this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n      }\n\n      this._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var p = this.getPadding(),\n        textHeight = this.getTextHeight(),\n        lineHeightPx = this.getLineHeight() * textHeight,\n        textArr = this.textArr,\n        textArrLen = textArr.length,\n        align = this.getAlign(),\n        totalWidth = this.getWidth(),\n        letterSpacing = this.getLetterSpacing(),\n        textDecoration = this.textDecoration(),\n        fill = this.fill(),\n        fontSize = this.fontSize(),\n        n;\n\n      context.setAttr('font', this._getContextFont());\n\n      context.setAttr('textBaseline', MIDDLE);\n      context.setAttr('textAlign', LEFT);\n      context.save();\n      if (p) {\n        context.translate(p, 0);\n        context.translate(0, p + textHeight / 2);\n      } else {\n        context.translate(0, textHeight / 2);\n      }\n\n      // draw text lines\n      for (n = 0; n < textArrLen; n++) {\n        var obj = textArr[n],\n          text = obj.text,\n          width = obj.width;\n\n        // horizontal alignment\n        context.save();\n        if (align === RIGHT) {\n          context.translate(totalWidth - width - p * 2, 0);\n        } else if (align === CENTER) {\n          context.translate((totalWidth - width - p * 2) / 2, 0);\n        }\n\n        if (textDecoration.indexOf('underline') !== -1) {\n          context.save();\n          context.beginPath();\n          context.moveTo(0, Math.round(lineHeightPx / 2));\n          context.lineTo(Math.round(width), Math.round(lineHeightPx / 2));\n          // TODO: I have no idea what is real ratio\n          // just /20 looks good enough\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (textDecoration.indexOf('line-through') !== -1) {\n          context.save();\n          context.beginPath();\n          context.moveTo(0, 0);\n          context.lineTo(Math.round(width), 0);\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (letterSpacing !== 0 || align === JUSTIFY) {\n          //   var words = text.split(' ');\n          var spacesNumber = text.split(' ').length - 1;\n          for (var li = 0; li < text.length; li++) {\n            var letter = text[li];\n            // skip justify for the last line\n            if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n              context.translate(\n                Math.floor((totalWidth - width) / spacesNumber),\n                0\n              );\n            }\n            this.partialText = letter;\n            context.fillStrokeShape(this);\n            context.translate(\n              Math.round(this._getTextSize(letter).width) + letterSpacing,\n              0\n            );\n          }\n        } else {\n          this.partialText = text;\n\n          context.fillStrokeShape(this);\n        }\n        context.restore();\n        context.translate(0, lineHeightPx);\n      }\n      context.restore();\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    setText: function(text) {\n      var str = Konva.Util._isString(text) ? text : (text || '').toString();\n      this._setAttr(TEXT, str);\n      return this;\n    },\n    /**\n     * get width of text area, which includes padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getWidth: function() {\n      var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n      return isAuto\n        ? this.getTextWidth() + this.getPadding() * 2\n        : this.attrs.width;\n    },\n    /**\n     * get the height of the text area, which takes into account multi-line text, line heights, and padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getHeight: function() {\n      var isAuto =\n        this.attrs.height === AUTO || this.attrs.height === undefined;\n      return isAuto\n        ? this.getTextHeight() * this.textArr.length * this.getLineHeight() +\n            this.getPadding() * 2\n        : this.attrs.height;\n    },\n    /**\n     * get text width\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n     * get text height\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    _getTextSize: function(text) {\n      var _context = getDummyContext(),\n        fontSize = this.getFontSize(),\n        metrics;\n\n      _context.save();\n      _context.font = this._getContextFont();\n\n      metrics = _context.measureText(text);\n      _context.restore();\n      return {\n        width: metrics.width,\n        height: parseInt(fontSize, 10)\n      };\n    },\n    _getContextFont: function() {\n      // IE don't want to work with usual font style\n      // bold was not working\n      // removing font variant will solve\n      // fix for: https://github.com/konvajs/konva/issues/94\n      if (Konva.UA.isIE) {\n        return (\n          this.getFontStyle() +\n          SPACE +\n          this.getFontSize() +\n          PX_SPACE +\n          this.getFontFamily()\n        );\n      }\n      return (\n        this.getFontStyle() +\n        SPACE +\n        this.getFontVariant() +\n        SPACE +\n        this.getFontSize() +\n        PX_SPACE +\n        this.getFontFamily()\n      );\n    },\n    _addTextLine: function(line) {\n      if (this.align() === JUSTIFY) {\n        line = line.trim();\n      }\n      var width = this._getTextWidth(line);\n      return this.textArr.push({ text: line, width: width });\n    },\n    _getTextWidth: function(text) {\n      var latterSpacing = this.getLetterSpacing();\n      var length = text.length;\n      return (\n        getDummyContext().measureText(text).width +\n        (length ? latterSpacing * (length - 1) : 0)\n      );\n    },\n    _setTextData: function() {\n      var lines = this.getText().split('\\n'),\n        fontSize = +this.getFontSize(),\n        textWidth = 0,\n        lineHeightPx = this.getLineHeight() * fontSize,\n        width = this.attrs.width,\n        height = this.attrs.height,\n        fixedWidth = width !== AUTO,\n        fixedHeight = height !== AUTO,\n        padding = this.getPadding(),\n        maxWidth = width - padding * 2,\n        maxHeightPx = height - padding * 2,\n        currentHeightPx = 0,\n        wrap = this.getWrap(),\n        shouldWrap = wrap !== NONE,\n        wrapAtWord = wrap !== CHAR && shouldWrap,\n        shouldAddEllipsis = this.getEllipsis() && !shouldWrap;\n\n      this.textArr = [];\n      getDummyContext().save();\n      getDummyContext().font = this._getContextFont();\n      for (var i = 0, max = lines.length; i < max; ++i) {\n        var line = lines[i];\n        var additionalWidth = shouldAddEllipsis\n          ? this._getTextWidth(ELLIPSIS)\n          : 0;\n\n        var lineWidth = this._getTextWidth(line);\n        if (fixedWidth && lineWidth > maxWidth) {\n          /*\n          * if width is fixed and line does not fit entirely\n          * break the line into multiple fitting lines\n          */\n          while (line.length > 0) {\n            /*\n            * use binary search to find the longest substring that\n            * that would fit in the specified width\n            */\n            var low = 0,\n              high = line.length,\n              match = '',\n              matchWidth = 0;\n            while (low < high) {\n              var mid = (low + high) >>> 1,\n                substr = line.slice(0, mid + 1),\n                substrWidth = this._getTextWidth(substr) + additionalWidth;\n              if (substrWidth <= maxWidth) {\n                low = mid + 1;\n                match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\n                matchWidth = substrWidth;\n              } else {\n                high = mid;\n              }\n            }\n            /*\n                         * 'low' is now the index of the substring end\n                         * 'match' is the substring\n                         * 'matchWidth' is the substring width in px\n                         */\n            if (match) {\n              // a fitting substring was found\n              if (wrapAtWord) {\n                // try to find a space or dash where wrapping could be done\n                var wrapIndex =\n                  Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                  1;\n                if (wrapIndex > 0) {\n                  // re-cut the substring found at the space/dash position\n                  low = wrapIndex;\n                  match = match.slice(0, low);\n                  matchWidth = this._getTextWidth(match);\n                }\n              }\n              this._addTextLine(match);\n              textWidth = Math.max(textWidth, matchWidth);\n              currentHeightPx += lineHeightPx;\n              if (\n                !shouldWrap ||\n                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)\n              ) {\n                /*\n                * stop wrapping if wrapping is disabled or if adding\n                * one more line would overflow the fixed height\n                */\n                break;\n              }\n              line = line.slice(low);\n              if (line.length > 0) {\n                // Check if the remaining text would fit on one line\n                lineWidth = this._getTextWidth(line);\n                if (lineWidth <= maxWidth) {\n                  // if it does, add the line and break out of the loop\n                  this._addTextLine(line);\n                  currentHeightPx += lineHeightPx;\n                  textWidth = Math.max(textWidth, lineWidth);\n                  break;\n                }\n              }\n            } else {\n              // not even one character could fit in the element, abort\n              break;\n            }\n          }\n        } else {\n          // element width is automatically adjusted to max line width\n          this._addTextLine(line);\n          currentHeightPx += lineHeightPx;\n          textWidth = Math.max(textWidth, lineWidth);\n        }\n        // if element height is fixed, abort if adding one more line would overflow\n        if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n          break;\n        }\n      }\n      getDummyContext().restore();\n      this.textHeight = fontSize;\n      // var maxTextWidth = 0;\n      // for(var j = 0; j < this.textArr.length; j++) {\n      //     maxTextWidth = Math.max(maxTextWidth, this.textArr[j].width);\n      // }\n      this.textWidth = textWidth;\n    }\n  };\n  Konva.Util.extend(Konva.Text, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\n  /**\n   * get/set font family\n   * @name fontFamily\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontFamily\n   * @returns {String}\n   * @example\n   * // get font family\n   * var fontFamily = text.fontFamily();\n   *\n   * // set font family\n   * text.fontFamily('Arial');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontSize', 12);\n\n  /**\n   * get/set font size in pixels\n   * @name fontSize\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} fontSize\n   * @returns {Number}\n   * @example\n   * // get font size\n   * var fontSize = text.fontSize();\n   *\n   * // set font size to 22px\n   * text.fontSize(22);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\n  /**\n   * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n   * @name fontStyle\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontStyle\n   * @returns {String}\n   * @example\n   * // get font style\n   * var fontStyle = text.fontStyle();\n   *\n   * // set font style\n   * text.fontStyle('bold');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\n  /**\n   * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n   * @name fontVariant\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontVariant\n   * @returns {String}\n   * @example\n   * // get font variant\n   * var fontVariant = text.fontVariant();\n   *\n   * // set font variant\n   * text.fontVariant('small-caps');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'padding', 0);\n\n  /**\n   * set padding\n   * @name padding\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} padding\n   * @returns {Number}\n   * @example\n   * // get padding\n   * var padding = text.padding();\n   *\n   * // set padding to 10 pixels\n   * text.padding(10);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\n  /**\n   * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n   * @name align\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} align\n   * @returns {String}\n   * @example\n   * // get text align\n   * var align = text.align();\n   *\n   * // center text\n   * text.align('center');\n   *\n   * // align text to right\n   * text.align('right');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'lineHeight', 1);\n\n  /**\n   * get/set line height.  The default is 1.\n   * @name lineHeight\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} lineHeight\n   * @returns {Number}\n   * @example\n   * // get line height\n   * var lineHeight = text.lineHeight();\n   *\n   * // set the line height\n   * text.lineHeight(2);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\n  /**\n   * get/set wrap.  Can be word, char, or none. Default is word.\n   * @name wrap\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} wrap\n   * @returns {String}\n   * @example\n   * // get wrap\n   * var wrap = text.wrap();\n   *\n   * // set wrap\n   * text.wrap('word');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'ellipsis', false);\n\n  /**\n   * get/set ellipsis.  Can be true or false. Default is false.\n   * if Konva.Text config is set to wrap=\"none\" and ellipsis=true, then it will add \"...\" to the end\n   * @name ellipsis\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Boolean} ellipsis\n   * @returns {Boolean}\n   * @example\n   * // get ellipsis\n   * var ellipsis = text.ellipsis();\n   *\n   * // set ellipsis\n   * text.ellipsis(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'letterSpacing', 0);\n\n  /**\n   * set letter spacing property. Default value is 0.\n   * @name letterSpacing\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} letterSpacing\n   */\n\n  Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\n  /**\n   * get/set text\n   * @name getText\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} text\n   * @returns {String}\n   * @example\n   * // get text\n   * var text = text.text();\n   *\n   * // set text\n   * text.text('Hello world!');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'textDecoration', EMPTY_STRING);\n\n  /**\n   * get/set text decoration of a text.  Possible values are 'underline', 'line-through' or combination of these values separated by space\n   * @name textDecoration\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} textDecoration\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var textDecoration = text.textDecoration();\n   *\n   * // underline text\n   * text.textDecoration('underline');\n   *\n   * // strike text\n   * text.textDecoration('line-through');\n   *\n   * // underline and strike text\n   * text.textDecoration('underline line-through');\n   */\n\n  Konva.Collection.mapMethods(Konva.Text);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Line constructor.&nbsp; Lines are defined by an array of points and\n   *  a tension\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Array} config.points Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3].\n   * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n   * @param {Boolean} [config.bezier] if no tension is provided but bezier=true, we draw the line as a bezier using the passed points\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var line = new Konva.Line({\n   *   x: 100,\n   *   y: 50,\n   *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n   *   stroke: 'red',\n   *   tension: 1\n   * });\n   */\n  Konva.Line = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Line.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Line';\n\n      this.on(\n        'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva',\n        function() {\n          this._clearCache('tensionPoints');\n        }\n      );\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var points = this.getPoints(),\n        length = points.length,\n        tension = this.getTension(),\n        closed = this.getClosed(),\n        bezier = this.getBezier(),\n        tp,\n        len,\n        n;\n\n      if (!length) {\n        return;\n      }\n\n      context.beginPath();\n      context.moveTo(points[0], points[1]);\n\n      // tension\n      if (tension !== 0 && length > 4) {\n        tp = this.getTensionPoints();\n        len = tp.length;\n        n = closed ? 0 : 4;\n\n        if (!closed) {\n          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n        }\n\n        while (n < len - 2) {\n          context.bezierCurveTo(\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++]\n          );\n        }\n\n        if (!closed) {\n          context.quadraticCurveTo(\n            tp[len - 2],\n            tp[len - 1],\n            points[length - 2],\n            points[length - 1]\n          );\n        }\n      } else if (bezier) {\n        // no tension but bezier\n        n = 2;\n\n        while (n < length) {\n          context.bezierCurveTo(\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++]\n          );\n        }\n      } else {\n        // no tension\n        for (n = 2; n < length; n += 2) {\n          context.lineTo(points[n], points[n + 1]);\n        }\n      }\n\n      // closed e.g. polygons and blobs\n      if (closed) {\n        context.closePath();\n        context.fillStrokeShape(this);\n      } else {\n        // open e.g. lines and splines\n        context.strokeShape(this);\n      }\n    },\n    getTensionPoints: function() {\n      return this._getCache('tensionPoints', this._getTensionPoints);\n    },\n    _getTensionPoints: function() {\n      if (this.getClosed()) {\n        return this._getTensionPointsClosed();\n      } else {\n        return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n      }\n    },\n    _getTensionPointsClosed: function() {\n      var p = this.getPoints(),\n        len = p.length,\n        tension = this.getTension(),\n        util = Konva.Util,\n        firstControlPoints = util._getControlPoints(\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          p[2],\n          p[3],\n          tension\n        ),\n        lastControlPoints = util._getControlPoints(\n          p[len - 4],\n          p[len - 3],\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          tension\n        ),\n        middle = Konva.Util._expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]]\n          .concat(middle)\n          .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n          ]);\n\n      return tp;\n    },\n    getWidth: function() {\n      return this.getSelfRect().width;\n    },\n    getHeight: function() {\n      return this.getSelfRect().height;\n    },\n    // overload size detection\n    getSelfRect: function() {\n      var points;\n      if (this.getTension() !== 0) {\n        points = this._getTensionPoints();\n      } else {\n        points = this.getPoints();\n      }\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  };\n  Konva.Util.extend(Konva.Line, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\n  /**\n   * get/set closed flag.  The default is false\n   * @name closed\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Boolean} closed\n   * @returns {Boolean}\n   * @example\n   * // get closed flag\n   * var closed = line.closed();\n   *\n   * // close the shape\n   * line.closed(true);\n   *\n   * // open the shape\n   * line.closed(false);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'bezier', false);\n\n  /**\n   * get/set bezier flag.  The default is false\n   * @name bezier\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Boolean} bezier\n   * @returns {Boolean}\n   * @example\n   * // get whether the line is a bezier\n   * var isBezier = line.bezier();\n   *\n   * // set whether the line is a bezier\n   * line.bezier(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'tension', 0);\n\n  /**\n   * get/set tension\n   * @name tension\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var tension = line.tension();\n   *\n   * // set tension\n   * line.tension(3);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'points', []);\n  /**\n   * get/set points array\n   * @name points\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Array} points\n   * @returns {Array}\n   * @example\n   * // get points\n   * var points = line.points();\n   *\n   * // set points\n   * line.points([10, 20, 30, 40, 50, 60]);\n   *\n   * // push a new point\n   * line.points(line.points().concat([70, 80]));\n   */\n\n  Konva.Collection.mapMethods(Konva.Line);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Sprite constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {String} config.animation animation key\n     * @param {Object} config.animations animation map\n     * @param {Integer} [config.frameIndex] animation frame index\n     * @param {Image} config.image image object\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var imageObj = new Image();\n     * imageObj.onload = function() {\n     *   var sprite = new Konva.Sprite({\n     *     x: 200,\n     *     y: 100,\n     *     image: imageObj,\n     *     animation: 'standing',\n     *     animations: {\n     *       standing: [\n     *         // x, y, width, height (6 frames)\n     *         0, 0, 49, 109,\n     *         52, 0, 49, 109,\n     *         105, 0, 49, 109,\n     *         158, 0, 49, 109,\n     *         210, 0, 49, 109,\n     *         262, 0, 49, 109\n     *       ],\n     *       kicking: [\n     *         // x, y, width, height (6 frames)\n     *         0, 109, 45, 98,\n     *         45, 109, 45, 98,\n     *         95, 109, 63, 98,\n     *         156, 109, 70, 98,\n     *         229, 109, 60, 98,\n     *         287, 109, 41, 98\n     *       ]\n     *     },\n     *     frameRate: 7,\n     *     frameIndex: 0\n     *   });\n     * };\n     * imageObj.src = '/path/to/image.jpg'\n     */\n  Konva.Sprite = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Sprite.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Sprite';\n\n      this._updated = true;\n      var that = this;\n      this.anim = new Konva.Animation(function() {\n        // if we don't need to redraw layer we should return false\n        var updated = that._updated;\n        that._updated = false;\n        return updated;\n      });\n      this.on('animationChange.konva', function() {\n        // reset index when animation changes\n        this.frameIndex(0);\n      });\n      this.on('frameIndexChange.konva', function() {\n        this._updated = true;\n      });\n      // smooth change for frameRate\n      this.on('frameRateChange.konva', function() {\n        if (!this.anim.isRunning()) {\n          return;\n        }\n        clearInterval(this.interval);\n        this._setInterval();\n      });\n\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        x = set[ix4 + 0],\n        y = set[ix4 + 1],\n        width = set[ix4 + 2],\n        height = set[ix4 + 3],\n        image = this.getImage();\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        if (offsets) {\n          var offset = offsets[anim], ix2 = index * 2;\n          context.drawImage(\n            image,\n            x,\n            y,\n            width,\n            height,\n            offset[ix2 + 0],\n            offset[ix2 + 1],\n            width,\n            height\n          );\n        } else {\n          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n      }\n    },\n    _hitFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        width = set[ix4 + 2],\n        height = set[ix4 + 3];\n\n      context.beginPath();\n      if (offsets) {\n        var offset = offsets[anim];\n        var ix2 = index * 2;\n        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.rect(0, 0, width, height);\n      }\n      context.closePath();\n      context.fillShape(this);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke()\n      );\n    },\n    _setInterval: function() {\n      var that = this;\n      this.interval = setInterval(function() {\n        that._updateIndex();\n      }, 1000 / this.getFrameRate());\n    },\n    /**\n         * start sprite animation\n         * @method\n         * @memberof Konva.Sprite.prototype\n         */\n    start: function() {\n      var layer = this.getLayer();\n\n      /*\n             * animation object has no executable function because\n             *  the updates are done with a fixed FPS with the setInterval\n             *  below.  The anim object only needs the layer reference for\n             *  redraw\n             */\n      this.anim.setLayers(layer);\n      this._setInterval();\n      this.anim.start();\n    },\n    /**\n         * stop sprite animation\n         * @method\n         * @memberof Konva.Sprite.prototype\n         */\n    stop: function() {\n      this.anim.stop();\n      clearInterval(this.interval);\n    },\n    /**\n         * determine if animation of sprite is running or not.  returns true or false\n         * @method\n         * @memberof Konva.Animation.prototype\n         * @returns {Boolean}\n         */\n    isRunning: function() {\n      return this.anim.isRunning();\n    },\n    _updateIndex: function() {\n      var index = this.frameIndex(),\n        animation = this.getAnimation(),\n        animations = this.getAnimations(),\n        anim = animations[animation],\n        len = anim.length / 4;\n\n      if (index < len - 1) {\n        this.frameIndex(index + 1);\n      } else {\n        this.frameIndex(0);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\n  /**\n     * get/set animation key\n     * @name animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {String} anim animation key\n     * @returns {String}\n     * @example\n     * // get animation key\n     * var animation = sprite.animation();\n     *\n     * // set animation key\n     * sprite.animation('kicking');\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\n  /**\n     * get/set animations map\n     * @name animations\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Object} animations\n     * @returns {Object}\n     * @example\n     * // get animations map\n     * var animations = sprite.animations();\n     *\n     * // set animations map\n     * sprite.animations({\n     *   standing: [\n     *     // x, y, width, height (6 frames)\n     *     0, 0, 49, 109,\n     *     52, 0, 49, 109,\n     *     105, 0, 49, 109,\n     *     158, 0, 49, 109,\n     *     210, 0, 49, 109,\n     *     262, 0, 49, 109\n     *   ],\n     *   kicking: [\n     *     // x, y, width, height (6 frames)\n     *     0, 109, 45, 98,\n     *     45, 109, 45, 98,\n     *     95, 109, 63, 98,\n     *     156, 109, 70, 98,\n     *     229, 109, 60, 98,\n     *     287, 109, 41, 98\n     *   ]\n     * });\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\n  /**\n    * get/set offsets map\n    * @name offsets\n    * @method\n    * @memberof Konva.Sprite.prototype\n    * @param {Object} offsets\n    * @returns {Object}\n    * @example\n    * // get offsets map\n    * var offsets = sprite.offsets();\n    *\n    * // set offsets map\n    * sprite.offsets({\n    *   standing: [\n    *     // x, y (6 frames)\n    *     0, 0,\n    *     0, 0,\n    *     5, 0,\n    *     0, 0,\n    *     0, 3,\n    *     2, 0\n    *   ],\n    *   kicking: [\n    *     // x, y (6 frames)\n    *     0, 5,\n    *     5, 0,\n    *     10, 0,\n    *     0, 0,\n    *     2, 1,\n    *     0, 0\n    *   ]\n    * });\n    */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\n  /**\n     * get/set image\n     * @name image\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Image} image\n     * @returns {Image}\n     * @example\n     * // get image\n     * var image = sprite.image();\n     *\n     * // set image\n     * sprite.image(imageObj);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameIndex', 0);\n\n  /**\n     * set/set animation frame index\n     * @name frameIndex\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Integer} frameIndex\n     * @returns {Integer}\n     * @example\n     * // get animation frame index\n     * var frameIndex = sprite.frameIndex();\n     *\n     * // set animation frame index\n     * sprite.frameIndex(3);\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameRate', 17);\n\n  /**\n     * get/set frame rate in frames per second.  Increase this number to make the sprite\n     *  animation run faster, and decrease the number to make the sprite animation run slower\n     *  The default is 17 frames per second\n     * @name frameRate\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @param {Integer} frameRate\n     * @returns {Integer}\n     * @example\n     * // get frame rate\n     * var frameRate = sprite.frameRate();\n     *\n     * // set frame rate to 2 frames per second\n     * sprite.frameRate(2);\n     */\n\n  Konva.Factory.backCompat(Konva.Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex'\n  });\n\n  Konva.Collection.mapMethods(Konva.Sprite);\n})();\n\n/*eslint-disable  no-shadow, max-len, max-depth */\n(function() {\n  'use strict';\n  /**\n   * Path constructor.\n   * @author Jason Follas\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} config.data SVG data string\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var path = new Konva.Path({\n   *   x: 240,\n   *   y: 40,\n   *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n   *   fill: 'green',\n   *   scale: 2\n   * });\n   */\n  Konva.Path = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Path.prototype = {\n    ___init: function(config) {\n      this.dataArray = [];\n      var that = this;\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Path';\n\n      this.dataArray = Konva.Path.parsePathData(this.getData());\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.getData());\n      });\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var ca = this.dataArray;\n\n      // context position\n      context.beginPath();\n      for (var n = 0; n < ca.length; n++) {\n        var c = ca[n].command;\n        var p = ca[n].points;\n        switch (c) {\n          case 'L':\n            context.lineTo(p[0], p[1]);\n            break;\n          case 'M':\n            context.moveTo(p[0], p[1]);\n            break;\n          case 'C':\n            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n            break;\n          case 'Q':\n            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n            break;\n          case 'A':\n            var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n\n            context.translate(cx, cy);\n            context.rotate(psi);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n            context.scale(1 / scaleX, 1 / scaleY);\n            context.rotate(-psi);\n            context.translate(-cx, -cy);\n\n            break;\n          case 'z':\n            context.closePath();\n            break;\n        }\n      }\n\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var points = [];\n      this.dataArray.forEach(function(data) {\n        points = points.concat(data.points);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  };\n  Konva.Util.extend(Konva.Path, Konva.Shape);\n\n  Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  };\n  Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    if (fromX === undefined) {\n      fromX = P1x;\n    }\n    if (fromY === undefined) {\n      fromY = P1y;\n    }\n\n    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n    if (P2x < P1x) {\n      run *= -1;\n    }\n    var rise = m * run;\n    var pt;\n\n    if (P2x === P1x) {\n      // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix, iy;\n\n      var len = this.getLineLength(P1x, P1y, P2x, P2y);\n      if (len < 0.00000001) {\n        return undefined;\n      }\n      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n      u = u / (len * len);\n      ix = P1x + u * (P2x - P1x);\n      iy = P1y + u * (P2y - P1y);\n\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n      if (P2x < P1x) {\n        run *= -1;\n      }\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n\n    return pt;\n  };\n\n  Konva.Path.getPointOnCubicBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y,\n    P4x,\n    P4y\n  ) {\n    function CB1(t) {\n      return t * t * t;\n    }\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnQuadraticBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y\n  ) {\n    function QB1(t) {\n      return t * t;\n    }\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi),\n      sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  };\n  /*\n     * get parsed data array from the data\n     *  string.  V, v, H, h, and l data are converted to\n     *  L data for the purpose of high performance Path\n     *  rendering\n     */\n  Konva.Path.parsePathData = function(data) {\n    // Path Data Segment must begin with a moveTo\n    //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n    //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n    //l (x y)+  Relative lineTo\n    //L (x y)+  Absolute LineTo\n    //h (x)+    Relative horizontal lineTo\n    //H (x)+    Absolute horizontal lineTo\n    //v (y)+    Relative vertical lineTo\n    //V (y)+    Absolute vertical lineTo\n    //z (closepath)\n    //Z (closepath)\n    //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n    //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n    //q (x1 y1 x y)+       Relative Quadratic Bezier\n    //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n    //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n    //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n    //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n    //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n    //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n    //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\n    // return early if data is not defined\n    if (!data) {\n      return [];\n    }\n\n    // command string\n    var cs = data;\n\n    // command chars\n    var cc = [\n      'm',\n      'M',\n      'l',\n      'L',\n      'v',\n      'V',\n      'h',\n      'H',\n      'z',\n      'Z',\n      'c',\n      'C',\n      'q',\n      'Q',\n      't',\n      'T',\n      's',\n      'S',\n      'a',\n      'A'\n    ];\n    // convert white spaces to commas\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n    // create pipes so that we can split the data\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n    // create array\n    var arr = cs.split('|');\n    var ca = [];\n    var coords = [];\n    // init context point\n    var cpx = 0;\n    var cpy = 0;\n\n    var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    var match;\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n\n      coords.length = 0;\n      while ((match = re.exec(str))) {\n        coords.push(match[0]);\n      }\n\n      // while ((match = re.exec(str))) {\n      //   coords.push(match[0]);\n      // }\n      var p = [];\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        var parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        }\n      }\n\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          // case for a trailing comma before next command\n          break;\n        }\n\n        var cmd = null;\n        var points = [];\n        var startX = cpx,\n          startY = cpy;\n        // Move var from within the switch to up here (jshint)\n        var prevCmd, ctlPtx, ctlPty; // Ss, Tt\n        var rx, ry, psi, fa, fs, x1, y1; // Aa\n\n        // convert l, H, h, V, and v to L\n        switch (c) {\n          // Note: Keep the lineTo's above the moveTo's in this switch\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          // Note: lineTo handlers need to be above this point\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n            // After closing the path move the current position\n            // to the the first point of the path (if any).\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n            points.push(cpx, cpy);\n            c = 'l';\n            // subsequent points are treated as relative lineTo\n            break;\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            // subsequent points are treated as absolute lineTo\n            break;\n\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'c':\n            points.push(\n              cpx + p.shift(),\n              cpy + p.shift(),\n              cpx + p.shift(),\n              cpy + p.shift()\n            );\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n        }\n\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n\n    return ca;\n  };\n  Konva.Path.calcLength = function(x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Konva.Path;\n\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n      case 'C':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnCubicBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          points[4],\n          points[5]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnCubicBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3],\n            points[4],\n            points[5]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'Q':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnQuadraticBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnQuadraticBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'A':\n        // Approximates by breaking curve into line segments\n        len = 0.0;\n        var start = points[4];\n        // 4 = theta\n        var dTheta = points[5];\n        // 5 = dTheta\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        // 1 degree resolution\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n        p1 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          start,\n          0\n        );\n        if (dTheta < 0) {\n          // clockwise\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          // counter-clockwise\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n        p2 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          end,\n          0\n        );\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\n        return len;\n    }\n\n    return 0;\n  };\n  Konva.Path.convertEndpointToCenterParameterization = function(\n    x1,\n    y1,\n    x2,\n    y2,\n    fa,\n    fs,\n    rx,\n    ry,\n    psiDeg\n  ) {\n    // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp =\n      -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n\n    var f = Math.sqrt(\n      (rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n        (rx * rx * (yp * yp) + ry * ry * (xp * xp))\n    );\n\n    if (fa === fs) {\n      f *= -1;\n    }\n    if (isNaN(f)) {\n      f = 0;\n    }\n\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n    var vMag = function(v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  };\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\n  /**\n   * set SVG path data string.  This method\n   *  also automatically parses the data string\n   *  into a data array.  Currently supported SVG data:\n   *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n   * @name setData\n   * @method\n   * @memberof Konva.Path.prototype\n   * @param {String} SVG path command string\n   */\n\n  /**\n   * get SVG path data string\n   * @name getData\n   * @method\n   * @memberof Konva.Path.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Path);\n})();\n\n(function() {\n  'use strict';\n  var EMPTY_STRING = '',\n    //CALIBRI = 'Calibri',\n    NORMAL = 'normal';\n\n  /**\n   * Path constructor.\n   * @author Jason Follas\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} [config.fontFamily] default is Calibri\n   * @param {Number} [config.fontSize] default is 12\n   * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n   * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n   * @param {String} config.text\n   * @param {String} config.data SVG data string\n   * @param {Function} config.getKerning a getter for kerning values for the specified characters\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var kerningPairs = {\n   *   'A': {\n   *     ' ': -0.05517578125,\n   *     'T': -0.07421875,\n   *     'V': -0.07421875,\n   *   },\n   *   'V': {\n   *     ',': -0.091796875,\n   *     \":\": -0.037109375,\n   *     \";\": -0.037109375,\n   *     \"A\": -0.07421875,\n   *   }\n   * }\n   * var textpath = new Konva.TextPath({\n   *   x: 100,\n   *   y: 50,\n   *   fill: '#333',\n   *   fontSize: '24',\n   *   fontFamily: 'Arial',\n   *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n   *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50',\n   *   getKerning: function(leftChar, rightChar) {\n   *     return kerningPairs.hasOwnProperty(leftChar) ? pairs[leftChar][rightChar] || 0 : 0\n   *   }\n   * });\n   */\n  Konva.TextPath = function(config) {\n    this.___init(config);\n  };\n\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.TextPath.prototype = {\n    ___init: function(config) {\n      var that = this;\n      this.dummyCanvas = Konva.Util.createCanvasElement();\n      this.dataArray = [];\n      this.getKerning = config && config.getKerning;\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      // overrides\n      // TODO: shouldn't this be on the prototype?\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFunc;\n      this._strokeFuncHit = _strokeFunc;\n\n      this.className = 'TextPath';\n\n      this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n        that._setTextData();\n      });\n\n      // update text data for certain attr changes\n      this.on(\n        'textChange.konva alignChange.konva letterSpacingChange.konva',\n        that._setTextData\n      );\n      that._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      context.setAttr('font', this._getContextFont());\n      context.setAttr('textBaseline', this.getTextBaseline());\n      context.setAttr('textAlign', 'left');\n      context.save();\n\n      var textDecoration = this.textDecoration();\n      var fill = this.fill();\n      var fontSize = this.fontSize();\n\n      var glyphInfo = this.glyphInfo;\n      if (textDecoration === 'underline') {\n        context.beginPath();\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        context.save();\n\n        var p0 = glyphInfo[i].p0;\n\n        context.translate(p0.x, p0.y);\n        context.rotate(glyphInfo[i].rotation);\n        this.partialText = glyphInfo[i].text;\n\n        context.fillStrokeShape(this);\n        if (textDecoration === 'underline') {\n          if (i === 0) {\n            context.moveTo(0, fontSize / 2 + 1);\n          }\n\n          context.lineTo(fontSize, fontSize / 2 + 1);\n        }\n        context.restore();\n\n        //// To assist with debugging visually, uncomment following\n        //\n        // if (i % 2)\n        // context.strokeStyle = 'cyan';\n        // else\n        // context.strokeStyle = 'green';\n        // var p1 = glyphInfo[i].p1;\n        // context.moveTo(p0.x, p0.y);\n        // context.lineTo(p1.x, p1.y);\n        // context.stroke();\n      }\n      if (textDecoration === 'underline') {\n        context.strokeStyle = fill;\n        context.lineWidth = fontSize / 20;\n        context.stroke();\n      }\n\n      context.restore();\n    },\n    _hitFunc: function(context) {\n      context.beginPath();\n\n      var glyphInfo = this.glyphInfo;\n      if (glyphInfo.length >= 1) {\n        var p0 = glyphInfo[0].p0;\n        context.moveTo(p0.x, p0.y);\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        var p1 = glyphInfo[i].p1;\n        context.lineTo(p1.x, p1.y);\n      }\n      context.setAttr('lineWidth', this.getFontSize());\n      context.setAttr('strokeStyle', this.colorKey);\n      context.stroke();\n    },\n    /**\n     * get text width in pixels\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n     * get text height in pixels\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    /**\n     * set text\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} text\n     */\n    setText: function(text) {\n      Konva.Text.prototype.setText.call(this, text);\n    },\n    _getTextSize: function(text) {\n      var dummyCanvas = this.dummyCanvas;\n      var _context = dummyCanvas.getContext('2d');\n\n      _context.save();\n\n      _context.font = this._getContextFont();\n      var metrics = _context.measureText(text);\n\n      _context.restore();\n\n      return {\n        width: metrics.width,\n        height: parseInt(this.attrs.fontSize, 10)\n      };\n    },\n    _setTextData: function() {\n      var that = this;\n      var size = this._getTextSize(this.attrs.text);\n      var letterSpacing = this.getLetterSpacing();\n      var align = this.align();\n\n      this.textWidth = size.width;\n      this.textHeight = size.height;\n\n      var textFullWidth = Math.max(\n        this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing,\n        0\n      );\n\n      this.glyphInfo = [];\n\n      var fullPathWidth = 0;\n      for (var l = 0; l < that.dataArray.length; l++) {\n        if (that.dataArray[l].pathLength > 0) {\n          fullPathWidth += that.dataArray[l].pathLength;\n        }\n      }\n\n      var offset = 0;\n      if (align === 'center') {\n        offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n      }\n      if (align === 'right') {\n        offset = Math.max(0, fullPathWidth - textFullWidth);\n      }\n\n      var charArr = this.getText().split('');\n      var spacesNumber = this.getText().split(' ').length - 1;\n\n      var p0, p1, pathCmd;\n\n      var pIndex = -1;\n      var currentT = 0;\n      // var sumLength = 0;\n      // for(var j = 0; j < that.dataArray.length; j++) {\n      //   if(that.dataArray[j].pathLength > 0) {\n      //\n      //     if (sumLength + that.dataArray[j].pathLength > offset) {}\n      //       fullPathWidth += that.dataArray[j].pathLength;\n      //   }\n      // }\n\n      var getNextPathSegment = function() {\n        currentT = 0;\n        var pathData = that.dataArray;\n\n        for (var j = pIndex + 1; j < pathData.length; j++) {\n          if (pathData[j].pathLength > 0) {\n            pIndex = j;\n\n            return pathData[j];\n          } else if (pathData[j].command === 'M') {\n            p0 = {\n              x: pathData[j].points[0],\n              y: pathData[j].points[1]\n            };\n          }\n        }\n\n        return {};\n      };\n\n      var findSegmentToFitCharacter = function(c) {\n        var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\n        if (c === ' ' && align === 'justify') {\n          glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n        }\n\n        var currLen = 0;\n        var attempts = 0;\n\n        p1 = undefined;\n        while (\n          Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n          attempts < 25\n        ) {\n          attempts++;\n          var cumulativePathLength = currLen;\n          while (pathCmd === undefined) {\n            pathCmd = getNextPathSegment();\n\n            if (\n              pathCmd &&\n              cumulativePathLength + pathCmd.pathLength < glyphWidth\n            ) {\n              cumulativePathLength += pathCmd.pathLength;\n              pathCmd = undefined;\n            }\n          }\n\n          if (pathCmd === {} || p0 === undefined) {\n            return undefined;\n          }\n\n          var needNewSegment = false;\n\n          switch (pathCmd.command) {\n            case 'L':\n              if (\n                Konva.Path.getLineLength(\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1]\n                ) > glyphWidth\n              ) {\n                p1 = Konva.Path.getPointOnLine(\n                  glyphWidth,\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1],\n                  p0.x,\n                  p0.y\n                );\n              } else {\n                pathCmd = undefined;\n              }\n              break;\n            case 'A':\n              var start = pathCmd.points[4];\n              // 4 = theta\n              var dTheta = pathCmd.points[5];\n              // 5 = dTheta\n              var end = pathCmd.points[4] + dTheta;\n\n              if (currentT === 0) {\n                currentT = start + 0.00000001;\n              } else if (glyphWidth > currLen) {\n                // Just in case start is 0\n                currentT += Math.PI / 180.0 * dTheta / Math.abs(dTheta);\n              } else {\n                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);\n              }\n\n              // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n              // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n              if (\n                (dTheta < 0 && currentT < end) ||\n                (dTheta >= 0 && currentT > end)\n              ) {\n                currentT = end;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnEllipticalArc(\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                currentT,\n                pathCmd.points[6]\n              );\n              break;\n            case 'C':\n              if (currentT === 0) {\n                if (glyphWidth > pathCmd.pathLength) {\n                  currentT = 0.00000001;\n                } else {\n                  currentT = glyphWidth / pathCmd.pathLength;\n                }\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnCubicBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                pathCmd.points[4],\n                pathCmd.points[5]\n              );\n              break;\n            case 'Q':\n              if (currentT === 0) {\n                currentT = glyphWidth / pathCmd.pathLength;\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnQuadraticBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3]\n              );\n              break;\n          }\n\n          if (p1 !== undefined) {\n            currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n          }\n\n          if (needNewSegment) {\n            needNewSegment = false;\n            pathCmd = undefined;\n          }\n        }\n      };\n\n      // fake search for offset, this is very bad approach\n      // TODO: find other way to add offset from start (for align)\n      var testChar = 'C';\n      var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n      for (var k = 0; k < offset / glyphWidth; k++) {\n        findSegmentToFitCharacter(testChar);\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n        p0 = p1;\n      }\n\n      for (var i = 0; i < charArr.length; i++) {\n        // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n        findSegmentToFitCharacter(charArr[i]);\n\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n\n        var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\n        var kern = 0;\n        if (this.getKerning) {\n          try {\n            // getKerning is a user provided getter. Make sure it never breaks our logic\n            kern =\n              this.getKerning(charArr[i - 1], charArr[i]) * this.fontSize();\n          } catch (e) {\n            kern = 0;\n          }\n        }\n\n        p0.x += kern;\n        p1.x += kern;\n        this.textWidth += kern;\n\n        var midpoint = Konva.Path.getPointOnLine(\n          kern + width / 2.0,\n          p0.x,\n          p0.y,\n          p1.x,\n          p1.y\n        );\n\n        var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n        this.glyphInfo.push({\n          transposeX: midpoint.x,\n          transposeY: midpoint.y,\n          text: charArr[i],\n          rotation: rotation,\n          p0: p0,\n          p1: p1\n        });\n        p0 = p1;\n      }\n    },\n    getSelfRect: function() {\n      var points = [];\n\n      this.glyphInfo.forEach(function(info) {\n        points.push(info.p0.x);\n        points.push(info.p0.y);\n        points.push(info.p1.x);\n        points.push(info.p1.y);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[0];\n      var maxY = points[0];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      var fontSize = this.fontSize();\n      return {\n        x: Math.round(minX) - fontSize / 2,\n        y: Math.round(minY) - fontSize / 2,\n        width: Math.round(maxX - minX) + fontSize,\n        height: Math.round(maxY - minY) + fontSize\n      };\n    }\n  };\n\n  // map TextPath methods to Text\n  Konva.TextPath.prototype._getContextFont =\n    Konva.Text.prototype._getContextFont;\n\n  Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\n  // add setters and getters\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\n  /**\n   * set font family\n   * @name setFontFamily\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontFamily\n   */\n\n  /**\n   * get font family\n   * @name getFontFamily\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontSize', 12);\n\n  /**\n   * set font size\n   * @name setFontSize\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {int} fontSize\n   */\n\n  /**\n   * get font size\n   * @name getFontSize\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\n  /**\n   * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n   * @name setFontStyle\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontStyle\n   */\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'align', 'left');\n\n  /**\n   * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n   * @name align\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} align\n   * @returns {String}\n   * @example\n   * // get text align\n   * var align = text.align();\n   *\n   * // center text\n   * text.align('center');\n   *\n   * // align text to right\n   * text.align('right');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'letterSpacing', 0);\n\n  /**\n   * set letter spacing property. Default value is 0.\n   * @name letterSpacing\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} letterSpacing\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\n  /**\n   * set textBaseline property. Default value is 'middle'.\n   * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n   * @name textBaseline\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} textBaseline\n   */\n\n  /**\n   * get font style\n   * @name getFontStyle\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\n  /**\n   * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n   * @name setFontVariant\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontVariant\n   */\n\n  /**\n   * @get font variant\n   * @name getFontVariant\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\n  /**\n   * get text\n   * @name getText\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textDecoration', null);\n\n  /**\n   * get/set text decoration of a text.  Can be '' or 'underline'\n   * @name textDecoration\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} textDecoration\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var textDecoration = text.textDecoration();\n   *\n   * // center text\n   * text.textDecoration('underline');\n   */\n\n  Konva.Collection.mapMethods(Konva.TextPath);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Number} config.sides\n     * @param {Number} config.radius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var hexagon = new Konva.RegularPolygon({\n     *   x: 100,\n     *   y: 200,\n     *   sides: 6,\n     *   radius: 70,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 4\n     * });\n     */\n  Konva.RegularPolygon = function(config) {\n    this.___init(config);\n  };\n\n  Konva.RegularPolygon.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'RegularPolygon';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var sides = this.attrs.sides, radius = this.attrs.radius, n, x, y;\n\n      context.beginPath();\n      context.moveTo(0, 0 - radius);\n\n      for (n = 1; n < sides; n++) {\n        x = radius * Math.sin(n * 2 * Math.PI / sides);\n        y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'radius', 0);\n\n  /**\n     * set radius\n     * @name setRadius\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     * @param {Number} radius\n     */\n\n  /**\n     * get radius\n     * @name getRadius\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.RegularPolygon, 'sides', 0);\n\n  /**\n     * set number of sides\n     * @name setSides\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     * @param {int} sides\n     */\n\n  /**\n     * get number of sides\n     * @name getSides\n     * @method\n     * @memberof Konva.RegularPolygon.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.RegularPolygon);\n})();\n\n(function() {\n  'use strict';\n  /**\n     * Star constructor\n     * @constructor\n     * @memberof Konva\n     * @augments Konva.Shape\n     * @param {Object} config\n     * @param {Integer} config.numPoints\n     * @param {Number} config.innerRadius\n     * @param {Number} config.outerRadius\n     * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * var star = new Konva.Star({\n     *   x: 100,\n     *   y: 200,\n     *   numPoints: 5,\n     *   innerRadius: 70,\n     *   outerRadius: 70,\n     *   fill: 'red',\n     *   stroke: 'black',\n     *   strokeWidth: 4\n     * });\n     */\n  Konva.Star = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Star.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Star';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var innerRadius = this.innerRadius(),\n        outerRadius = this.outerRadius(),\n        numPoints = this.numPoints();\n\n      context.beginPath();\n      context.moveTo(0, 0 - outerRadius);\n\n      for (var n = 1; n < numPoints * 2; n++) {\n        var radius = n % 2 === 0 ? outerRadius : innerRadius;\n        var x = radius * Math.sin(n * Math.PI / numPoints);\n        var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Star, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Star, 'numPoints', 5);\n\n  /**\n     * set number of points\n     * @name setNumPoints\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Integer} points\n     */\n\n  /**\n     * get number of points\n     * @name getNumPoints\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Star, 'innerRadius', 0);\n\n  /**\n     * set inner radius\n     * @name setInnerRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Number} radius\n     */\n\n  /**\n     * get inner radius\n     * @name getInnerRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Star, 'outerRadius', 0);\n\n  /**\n     * set outer radius\n     * @name setOuterRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     * @param {Number} radius\n     */\n\n  /**\n     * get outer radius\n     * @name getOuterRadius\n     * @method\n     * @memberof Konva.Star.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.Star);\n})();\n\n(function() {\n  'use strict';\n  // constants\n  var ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width'\n  ],\n    CHANGE_KONVA = 'Change.konva',\n    NONE = 'none',\n    UP = 'up',\n    RIGHT = 'right',\n    DOWN = 'down',\n    LEFT = 'left',\n    LABEL = 'Label',\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n\n  /**\n     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n     * @constructor\n     * @memberof Konva\n     * @param {Object} config\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n     * @example\n     * // create label\n     * var label = new Konva.Label({\n     *   x: 100,\n     *   y: 100,\n     *   draggable: true\n     * });\n     *\n     * // add a tag to the label\n     * label.add(new Konva.Tag({\n     *   fill: '#bbb',\n     *   stroke: '#333',\n     *   shadowColor: 'black',\n     *   shadowBlur: 10,\n     *   shadowOffset: [10, 10],\n     *   shadowOpacity: 0.2,\n     *   lineJoin: 'round',\n     *   pointerDirection: 'up',\n     *   pointerWidth: 20,\n     *   pointerHeight: 20,\n     *   cornerRadius: 5\n     * }));\n     *\n     * // add text to the label\n     * label.add(new Konva.Text({\n     *   text: 'Hello World!',\n     *   fontSize: 50,\n     *   lineHeight: 1.2,\n     *   padding: 10,\n     *   fill: 'green'\n     *  }));\n     */\n  Konva.Label = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Label.prototype = {\n    ____init: function(config) {\n      var that = this;\n\n      Konva.Group.call(this, config);\n      this.className = LABEL;\n\n      this.on('add.konva', function(evt) {\n        that._addListeners(evt.child);\n        that._sync();\n      });\n    },\n    /**\n         * get Text shape for the label.  You need to access the Text shape in order to update\n         * the text properties\n         * @name getText\n         * @method\n         * @memberof Konva.Label.prototype\n         */\n    getText: function() {\n      return this.find('Text')[0];\n    },\n    /**\n         * get Tag shape for the label.  You need to access the Tag shape in order to update\n         * the pointer properties and the corner radius\n         * @name getTag\n         * @method\n         * @memberof Konva.Label.prototype\n         */\n    getTag: function() {\n      return this.find('Tag')[0];\n    },\n    _addListeners: function(text) {\n      var that = this, n;\n      var func = function() {\n        that._sync();\n      };\n\n      // update text data for certain attr changes\n      for (n = 0; n < attrChangeListLen; n++) {\n        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n      }\n    },\n    getWidth: function() {\n      return this.getText().getWidth();\n    },\n    getHeight: function() {\n      return this.getText().getHeight();\n    },\n    _sync: function() {\n      var text = this.getText(),\n        tag = this.getTag(),\n        width,\n        height,\n        pointerDirection,\n        pointerWidth,\n        x,\n        y,\n        pointerHeight;\n\n      if (text && tag) {\n        width = text.getWidth();\n        height = text.getHeight();\n        pointerDirection = tag.getPointerDirection();\n        pointerWidth = tag.getPointerWidth();\n        pointerHeight = tag.getPointerHeight();\n        x = 0;\n        y = 0;\n\n        switch (pointerDirection) {\n          case UP:\n            x = width / 2;\n            y = -1 * pointerHeight;\n            break;\n          case RIGHT:\n            x = width + pointerWidth;\n            y = height / 2;\n            break;\n          case DOWN:\n            x = width / 2;\n            y = height + pointerHeight;\n            break;\n          case LEFT:\n            x = -1 * pointerWidth;\n            y = height / 2;\n            break;\n        }\n\n        tag.setAttrs({\n          x: -1 * x,\n          y: -1 * y,\n          width: width,\n          height: height\n        });\n\n        text.setAttrs({\n          x: -1 * x,\n          y: -1 * y\n        });\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Label, Konva.Group);\n\n  Konva.Collection.mapMethods(Konva.Label);\n\n  /**\n     * Tag constructor.&nbsp; A Tag can be configured\n     *  to have a pointer element that points up, right, down, or left\n     * @constructor\n     * @memberof Konva\n     * @param {Object} config\n     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n     * @param {Number} [config.pointerWidth]\n     * @param {Number} [config.pointerHeight]\n     * @param {Number} [config.cornerRadius]\n     */\n  Konva.Tag = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Tag.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Tag';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        pointerDirection = this.getPointerDirection(),\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\n      context.beginPath();\n      if (!cornerRadius) {\n        context.moveTo(0, 0);\n      } else {\n        context.moveTo(cornerRadius, 0);\n      }\n\n      if (pointerDirection === UP) {\n        context.lineTo((width - pointerWidth) / 2, 0);\n        context.lineTo(width / 2, -1 * pointerHeight);\n        context.lineTo((width + pointerWidth) / 2, 0);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, 0);\n      } else {\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n      }\n\n      if (pointerDirection === RIGHT) {\n        context.lineTo(width, (height - pointerHeight) / 2);\n        context.lineTo(width + pointerWidth, height / 2);\n        context.lineTo(width, (height + pointerHeight) / 2);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, height);\n      } else {\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n      }\n\n      if (pointerDirection === DOWN) {\n        context.lineTo((width + pointerWidth) / 2, height);\n        context.lineTo(width / 2, height + pointerHeight);\n        context.lineTo((width - pointerWidth) / 2, height);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(0, height);\n      } else {\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n      }\n\n      if (pointerDirection === LEFT) {\n        context.lineTo(0, (height + pointerHeight) / 2);\n        context.lineTo(-1 * pointerWidth, height / 2);\n        context.lineTo(0, (height - pointerHeight) / 2);\n      }\n\n      if (cornerRadius) {\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var x = 0,\n        y = 0,\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        direction = this.pointerDirection(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      if (direction === UP) {\n        y -= pointerHeight;\n        height += pointerHeight;\n      } else if (direction === DOWN) {\n        height += pointerHeight;\n      } else if (direction === LEFT) {\n        // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n        x -= pointerWidth * 1.5;\n        width += pointerWidth;\n      } else if (direction === RIGHT) {\n        width += pointerWidth * 1.5;\n      }\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n  };\n\n  Konva.Util.extend(Konva.Tag, Konva.Shape);\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\n  /**\n     * set pointer Direction\n     * @name setPointerDirection\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {String} pointerDirection can be up, right, down, left, or none.  The\n     *  default is none\n     */\n\n  /**\n     * get pointer Direction\n     * @name getPointerDirection\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerWidth', 0);\n\n  /**\n     * set pointer width\n     * @name setPointerWidth\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} pointerWidth\n     */\n\n  /**\n     * get pointer width\n     * @name getPointerWidth\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerHeight', 0);\n\n  /**\n     * set pointer height\n     * @name setPointerHeight\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} pointerHeight\n     */\n\n  /**\n     * get pointer height\n     * @name getPointerHeight\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Factory.addGetterSetter(Konva.Tag, 'cornerRadius', 0);\n\n  /**\n     * set corner radius\n     * @name setCornerRadius\n     * @method\n     * @memberof Konva.Tag.prototype\n     * @param {Number} corner radius\n     */\n\n  /**\n     * get corner radius\n     * @name getCornerRadius\n     * @method\n     * @memberof Konva.Tag.prototype\n     */\n\n  Konva.Collection.mapMethods(Konva.Tag);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Arrow constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Array} config.points Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3].\n   * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @param {Number} config.pointerLength Arrow pointer length. Default value is 10.\n   * @param {Number} config.pointerWidth Arrow pointer width. Default value is 10.\n   * @param {Boolean} config.pointerAtBeginning Do we need to draw pointer on both sides?. Default false.\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var line = new Konva.Line({\n   *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n   *   stroke: 'red',\n   *   tension: 1,\n   *   pointerLength : 10,\n   *   pointerWidth : 12\n   * });\n   */\n  Konva.Arrow = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Arrow.prototype = {\n    ____init: function(config) {\n      // call super constructor\n      Konva.Line.call(this, config);\n      this.className = 'Arrow';\n    },\n    _sceneFunc: function(ctx) {\n      Konva.Line.prototype._sceneFunc.apply(this, arguments);\n      var PI2 = Math.PI * 2;\n      var points = this.points();\n      var n = points.length;\n      var dx = points[n - 2] - points[n - 4];\n      var dy = points[n - 1] - points[n - 3];\n      var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n      var length = this.pointerLength();\n      var width = this.pointerWidth();\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n\n      if (this.pointerAtBeginning()) {\n        ctx.save();\n        ctx.translate(points[0], points[1]);\n        dx = points[2] - points[0];\n        dy = points[3] - points[1];\n        ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(-length, width / 2);\n        ctx.lineTo(-length, -width / 2);\n        ctx.closePath();\n        ctx.restore();\n      }\n\n      // here is a tricky part\n      // we need to disable dash for arrow pointers\n      var isDashEnabled = this.dashEnabled();\n      if (isDashEnabled) {\n        // manually disable dash for head\n        // it is better not to use setter here,\n        // because it will trigger attr change event\n        this.attrs.dashEnabled = false;\n        ctx.setLineDash([]);\n      }\n\n      ctx.fillStrokeShape(this);\n\n      // restore old value\n      if (isDashEnabled) {\n        this.attrs.dashEnabled = true;\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Arrow, Konva.Line);\n  /**\n   * get/set pointerLength\n   * @name pointerLength\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Length of pointer of arrow.\n   *   The default is 10.\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var pointerLength = line.pointerLength();\n   *\n   * // set tension\n   * line.pointerLength(15);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerLength', 10);\n  /**\n   * get/set pointerWidth\n   * @name pointerWidth\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Width of pointer of arrow.\n   *   The default is 10.\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var pointerWidth = line.pointerWidth();\n   *\n   * // set tension\n   * line.pointerWidth(15);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerWidth', 10);\n  /**\n   * get/set pointerAtBeginning\n   * @name pointerAtBeginning\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Should pointer displayed at beginning of arrow.\n   *   The default is false.\n   * @returns {Boolean}\n   * @example\n   * // get tension\n   * var pointerAtBeginning = line.pointerAtBeginning();\n   *\n   * // set tension\n   * line.pointerAtBeginning(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n  Konva.Collection.mapMethods(Konva.Arrow);\n})(Konva);\n\n(function(Konva) {\n  'use strict';\n\n  var ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateHandlerOffsetChange'\n  ].join(' ');\n\n  var NODE_RECT = 'nodeRect';\n\n  var TRANSFORM_CHANGE_STR = [\n    'xChange.resizer',\n    'yChange.resizer',\n    'widthChange.resizer',\n    'heightChange.resizer',\n    'scaleXChange.resizer',\n    'scaleYChange.resizer',\n    'skewXChange.resizer',\n    'skewYChange.resizer',\n    'rotationChange.resizer',\n    'offsetXChange.resizer',\n    'offsetYChange.resizer',\n    'transformsEnabledChange.resizer'\n  ].join(' ');\n\n  function getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n      return 'crosshair';\n    }\n\n    var angle = (Konva.Util._radToDeg(rad) % 360 + 360) % 360;\n\n    if (\n      Konva.Util._inRange(angle, 315 + 22.5, 360) ||\n      Konva.Util._inRange(angle, 0, 22.5)\n    ) {\n      // TOP\n      return 'ns-resize';\n    } else if (Konva.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n      // TOP - RIGHT\n      return 'nesw-resize';\n    } else if (Konva.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n      // RIGHT\n      return 'ew-resize';\n    } else if (Konva.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n      // BOTTOM - RIGHT\n      return 'nwse-resize';\n    } else if (Konva.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n      // BOTTOM\n      return 'ns-resize';\n    } else if (Konva.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n      // BOTTOM - LEFT\n      return 'nesw-resize';\n    } else if (Konva.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n      // RIGHT\n      return 'ew-resize';\n    } else if (Konva.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n      // BOTTOM - RIGHT\n      return 'nwse-resize';\n    } else {\n      // how can we can there?\n      // TODO: throw error\n      Konva.Util.error(\n        'Transformer has unknown angle for cursor detection: ' + angle\n      );\n      return 'pointer';\n    }\n  }\n\n  /**\n   * Transformer constructor.  Transformer is a special type of group that allow you transform Konva\n   * primitives and shapes.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {Boolean} [config.resizeEnabled] Default is true\n   * @param {Boolean} [config.rotateEnabled] Default is true\n   * @param {Array} [config.rotationSnaps] Array of angles for rotation snaps. Default is []\n   * @param {Number} [config.rotateHandlerOffset] Default is 50\n   * @param {Number} [config.padding] Default is 0\n   * @param {Number} [config.lineEnabled] Should we draw border? Default is true\n   * @param {Boolean} [config.keepRatio] Should we keep ratio when we are moving edges? Default is true\n   * @param {Array} [config.enabledHandlers] Array of names of enabled handles\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var transformer = new Konva.Transformer({\n   *   node: rectangle,\n   *   rotateHandlerOffset: 60,\n   *   enabledHandlers: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n   * });\n   * layer.add(transformer);\n   */\n\n  Konva.Transformer = function(config) {\n    this.____init(config);\n  };\n\n  var RESIZERS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right'\n  ];\n\n  var warningShowed = false;\n\n  Konva.Transformer.prototype = {\n    _centroid: false,\n    ____init: function(config) {\n      // call super constructor\n      Konva.Group.call(this, config);\n      this.className = 'Transformer';\n      this._createElements();\n\n      // bindings\n      this._handleMouseMove = this._handleMouseMove.bind(this);\n      this._handleMouseUp = this._handleMouseUp.bind(this);\n      this.update = this.update.bind(this);\n\n      // update transformer data for certain attr changes\n      this.on(ATTR_CHANGE_LIST, this.update);\n\n      if (!warningShowed) {\n        Konva.Util.warn(\n          'Konva.Transformer is currently experimental and may have bugs. Please report any issues to GitHub repo.'\n        );\n        warningShowed = true;\n      }\n\n      if (this.getNode()) {\n        this.update();\n      }\n    },\n\n    attachTo: function(node) {\n      this.setNode(node);\n    },\n\n    setNode: function(node) {\n      if (this._node) {\n        this.detach();\n      }\n      this._node = node;\n      this._clearCache(NODE_RECT);\n\n      node.on(\n        TRANSFORM_CHANGE_STR,\n        function() {\n          this._clearCache(NODE_RECT);\n          this._clearCache('transform');\n          this._clearSelfAndDescendantCache('absoluteTransform');\n        }.bind(this)\n      );\n      // node.on(TRANSFORM_CHANGE_STR, this.requestUpdate.bind(this));\n      // node.on('dragmove.resizer', this.requestUpdate.bind(this));\n\n      var elementsCreated = !!this.findOne('.top-left');\n      if (elementsCreated) {\n        this.update();\n      }\n    },\n\n    getNode: function() {\n      return this._node;\n    },\n\n    detach: function() {\n      if (this.getNode()) {\n        this.getNode().off('.resizer');\n        this._node = undefined;\n      }\n      this._clearCache(NODE_RECT);\n      this._clearCache('transform');\n      this._clearSelfAndDescendantCache('absoluteTransform');\n    },\n\n    _getNodeRect: function() {\n      return this._getCache(NODE_RECT, this.__getNodeRect);\n    },\n\n    __getNodeRect: function() {\n      var node = this.getNode();\n      if (!node) {\n        return {\n          x: -Number.MAX_SAFE_INTEGER,\n          y: -Number.MAX_SAFE_INTEGER,\n          width: 0,\n          height: 0,\n          rotation: 0\n        };\n      }\n      var rect = node.getClientRect({ skipTransform: true });\n      var rotation = Konva.getAngle(node.rotation());\n\n      var dx = rect.x * node.scaleX() - node.offsetX();\n      var dy = rect.y * node.scaleY() - node.offsetY();\n\n      return {\n        x: node.x() + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n        y: node.y() + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n        width: rect.width * node.scaleX(),\n        height: rect.height * node.scaleY(),\n        rotation: node.rotation()\n      };\n    },\n\n    getX: function() {\n      return this._getNodeRect().x;\n    },\n\n    getY: function() {\n      return this._getNodeRect().y;\n    },\n\n    getRotation: function() {\n      return this._getNodeRect().rotation;\n    },\n\n    getWidth: function() {\n      return this._getNodeRect().width;\n    },\n\n    getHeight: function() {\n      return this._getNodeRect().height;\n    },\n\n    _createElements: function() {\n      this._createBack();\n\n      RESIZERS_NAMES.forEach(\n        function(name) {\n          this._createAnchor(name);\n        }.bind(this)\n      );\n\n      this._createAnchor('rotater');\n    },\n\n    _createAnchor: function(name) {\n      var anchor = new Konva.Rect({\n        stroke: 'rgb(0, 161, 255)',\n        fill: 'white',\n        strokeWidth: 1,\n        name: name,\n        width: 10,\n        height: 10,\n        offsetX: 5,\n        offsetY: 5,\n        draggable: true,\n        dragDistance: 0\n      });\n      var self = this;\n      anchor.on('mousedown touchstart', function(e) {\n        self._handleMouseDown(e);\n      });\n\n      // add hover styling\n      anchor.on('mouseenter', function() {\n        var layer = this.getLayer();\n        var tr = this.getParent();\n\n        // TODO: I guess there are some ways to simplify that calculations\n        // the basic idea is to find \"angle\" of handler\n        var rad = Konva.getAngle(tr.rotation());\n\n        var cdx = tr.getWidth() / 2;\n        var cdy = tr.getHeight() / 2;\n\n        var parentPos = tr.getAbsolutePosition(tr.getParent());\n        var center = {\n          x: parentPos.x + (cdx * Math.cos(rad) + cdy * Math.sin(-rad)),\n          y: parentPos.y + (cdy * Math.cos(rad) + cdx * Math.sin(rad))\n        };\n\n        var pos = this.getAbsolutePosition(tr.getParent());\n\n        var dx = -pos.x + center.x;\n        var dy = -pos.y + center.y;\n\n        var angle = -Math.atan2(-dy, dx) - Math.PI / 2;\n\n        var cursor = getCursor(name, angle);\n        anchor.getStage().content.style.cursor = cursor;\n        layer.batchDraw();\n      });\n      anchor.on('mouseout', function() {\n        var layer = this.getLayer();\n        if (!layer) {\n          return;\n        }\n        anchor.getStage().content.style.cursor = '';\n        layer.batchDraw();\n      });\n      this.add(anchor);\n    },\n\n    _createBack: function() {\n      var back = new Konva.Shape({\n        stroke: 'rgb(0, 161, 255)',\n        name: 'back',\n        width: 0,\n        height: 0,\n        listening: false,\n        sceneFunc: function(ctx) {\n          var tr = this.getParent();\n          var padding = tr.getPadding();\n          ctx.beginPath();\n          ctx.rect(\n            -padding,\n            -padding,\n            this.width() + padding * 2,\n            this.height() + padding * 2\n          );\n          ctx.moveTo(this.width() / 2, -padding);\n          if (tr.rotateEnabled()) {\n            ctx.lineTo(\n              this.width() / 2,\n              -tr.rotateHandlerOffset() * Konva.Util._sign(this.height())\n            );\n          }\n\n          ctx.fillStrokeShape(this);\n        }\n      });\n      this.add(back);\n    },\n\n    _handleMouseDown: function(e) {\n      this.movingResizer = e.target.name();\n\n      // var node = this.getNode();\n      var attrs = this._getNodeRect();\n      var width = attrs.width;\n      var height = attrs.height;\n      var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n      this.sin = height / hypotenuse;\n      this.cos = width / hypotenuse;\n\n      window.addEventListener('mousemove', this._handleMouseMove);\n      window.addEventListener('touchmove', this._handleMouseMove);\n      window.addEventListener('mouseup', this._handleMouseUp, true);\n      window.addEventListener('touchend', this._handleMouseUp, true);\n\n      this._transforming = true;\n\n      this.fire('transformstart');\n      this.getNode().fire('transformstart');\n    },\n\n    _handleMouseMove: function(e) {\n      var x, y, newHypotenuse;\n      var resizerNode = this.findOne('.' + this.movingResizer);\n      var stage = resizerNode.getStage();\n\n      var box = stage.getContent().getBoundingClientRect();\n      var zeroPoint = {\n        x: box.left,\n        y: box.top\n      };\n      var pointerPos = {\n        left: e.clientX !== undefined ? e.clientX : e.touches[0].clientX,\n        top: e.clientX !== undefined ? e.clientY : e.touches[0].clientY\n      };\n      var newAbsPos = {\n        x: pointerPos.left - zeroPoint.x,\n        y: pointerPos.top - zeroPoint.y\n      };\n\n      resizerNode.setAbsolutePosition(newAbsPos);\n\n      var keepProportion = this.keepRatio() || e.shiftKey;\n\n      if (this.movingResizer === 'top-left') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-right').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.bottom-right').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.top-left').x(this.findOne('.bottom-right').x() - x);\n          this.findOne('.top-left').y(this.findOne('.bottom-right').y() - y);\n        }\n      } else if (this.movingResizer === 'top-center') {\n        this.findOne('.top-left').y(resizerNode.y());\n      } else if (this.movingResizer === 'top-right') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-left').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.bottom-left').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.top-right').x(x);\n          this.findOne('.top-right').y(this.findOne('.bottom-left').y() - y);\n        }\n        var pos = resizerNode.position();\n\n        this.findOne('.top-left').y(pos.y);\n        this.findOne('.bottom-right').x(pos.x);\n      } else if (this.movingResizer === 'middle-left') {\n        this.findOne('.top-left').x(resizerNode.x());\n      } else if (this.movingResizer === 'middle-right') {\n        this.findOne('.bottom-right').x(resizerNode.x());\n      } else if (this.movingResizer === 'bottom-left') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.top-right').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.top-right').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.bottom-left').x(this.findOne('.top-right').x() - x);\n          this.findOne('.bottom-left').y(y);\n        }\n\n        pos = resizerNode.position();\n\n        this.findOne('.top-left').x(pos.x);\n        this.findOne('.bottom-right').y(pos.y);\n      } else if (this.movingResizer === 'bottom-center') {\n        this.findOne('.bottom-right').y(resizerNode.y());\n      } else if (this.movingResizer === 'bottom-right') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-right').x(), 2) +\n              Math.pow(this.findOne('.bottom-right').y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.bottom-right').x(x);\n          this.findOne('.bottom-right').y(y);\n        }\n      } else if (this.movingResizer === 'rotater') {\n        var padding = this.getPadding();\n        var attrs = this._getNodeRect();\n        x = resizerNode.x() - attrs.width / 2;\n        y = -resizerNode.y() + attrs.height / 2;\n\n        var dAlpha = Math.atan2(-y, x) + Math.PI / 2;\n\n        if (attrs.height < 0) {\n          dAlpha -= Math.PI;\n        }\n\n        var rot = Konva.getAngle(this.rotation());\n\n        var newRotation =\n          Konva.Util._radToDeg(rot) + Konva.Util._radToDeg(dAlpha);\n\n        var alpha = Konva.getAngle(this.getNode().rotation());\n        var newAlpha = Konva.Util._degToRad(newRotation);\n\n        var snaps = this.rotationSnaps();\n        var offset = 0.1;\n        for (var i = 0; i < snaps.length; i++) {\n          var angle = Konva.getAngle(snaps[i]);\n\n          var dif =\n            Math.abs(angle - Konva.Util._degToRad(newRotation)) % (Math.PI * 2);\n\n          if (dif < offset) {\n            newRotation = Konva.Util._radToDeg(angle);\n            newAlpha = Konva.Util._degToRad(newRotation);\n          }\n        }\n\n        var dx = padding;\n        var dy = padding;\n\n        this._fitNodeInto({\n          rotation: Konva.angleDeg\n            ? newRotation\n            : Konva.Util._degToRad(newRotation),\n          x:\n            attrs.x +\n            (attrs.width / 2 + padding) *\n              (Math.cos(alpha) - Math.cos(newAlpha)) +\n            (attrs.height / 2 + padding) *\n              (Math.sin(-alpha) - Math.sin(-newAlpha)) -\n            (dx * Math.cos(rot) + dy * Math.sin(-rot)),\n          y:\n            attrs.y +\n            (attrs.height / 2 + padding) *\n              (Math.cos(alpha) - Math.cos(newAlpha)) +\n            (attrs.width / 2 + padding) *\n              (Math.sin(alpha) - Math.sin(newAlpha)) -\n            (dy * Math.cos(rot) + dx * Math.sin(rot)),\n          width: attrs.width + padding * 2,\n          height: attrs.height + padding * 2\n        });\n      } else {\n        console.error(\n          new Error(\n            'Wrong position argument of selection resizer: ',\n            this.movingResizer\n          )\n        );\n      }\n\n      if (this.movingResizer === 'rotater') {\n        return;\n      }\n\n      var absPos = this.findOne('.top-left').getAbsolutePosition(\n        this.getParent()\n      );\n\n      x = absPos.x;\n      y = absPos.y;\n      var width =\n        this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n\n      var height =\n        this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n\n      this._fitNodeInto({\n        x: x + this.offsetX(),\n        y: y + this.offsetY(),\n        width: width,\n        height: height\n      });\n    },\n\n    _handleMouseUp: function() {\n      this._removeEvents();\n    },\n\n    _removeEvents: function() {\n      if (this._transforming) {\n        this._transforming = false;\n        window.removeEventListener('mousemove', this._handleMouseMove);\n        window.removeEventListener('touchmove', this._handleMouseMove);\n        window.removeEventListener('mouseup', this._handleMouseUp, true);\n        window.removeEventListener('touchend', this._handleMouseUp, true);\n        this.fire('transformend');\n        this.getNode().fire('transformend');\n      }\n    },\n\n    _fitNodeInto: function(newAttrs) {\n      // waring! in this attrs padding may be included\n      var boundBoxFunc = this.getBoundBoxFunc();\n      if (boundBoxFunc) {\n        var oldAttrs = this._getNodeRect();\n        newAttrs = boundBoxFunc.call(this, oldAttrs, newAttrs);\n      }\n      this._settings = true;\n      var node = this.getNode();\n      if (newAttrs.rotation !== undefined) {\n        this.getNode().rotation(newAttrs.rotation);\n      }\n      var pure = node.getClientRect({ skipTransform: true });\n      var padding = this.getPadding();\n      var scaleX = (newAttrs.width - padding * 2) / pure.width;\n      var scaleY = (newAttrs.height - padding * 2) / pure.height;\n\n      var rotation = Konva.getAngle(node.getRotation());\n      var dx = pure.x * scaleX - padding;\n      var dy = pure.y * scaleY - padding;\n\n      this.getNode().setAttrs({\n        scaleX: scaleX,\n        scaleY: scaleY,\n        x: newAttrs.x - (dx * Math.cos(rotation) + dy * Math.sin(-rotation)),\n        y: newAttrs.y - (dy * Math.cos(rotation) + dx * Math.sin(rotation))\n      });\n      this._settings = false;\n\n      this.fire('transform');\n      this.getNode().fire('transform');\n      this.update();\n      this.getLayer().batchDraw();\n    },\n\n    requestUpdate: function() {\n      if (this.timeout) {\n        return;\n      }\n      this.timeout = setTimeout(\n        function() {\n          this.timeout = null;\n          this.update();\n        }.bind(this)\n      );\n    },\n\n    /**\n     * force update of Transformer\n     * @method\n     * @memberof Konva.Transformer.prototype\n     */\n    forceUpdate: function() {\n      this._clearCache(NODE_RECT);\n      this.update();\n    },\n    update: function() {\n      var attrs = this._getNodeRect();\n      var width = attrs.width;\n      var height = attrs.height;\n\n      var enabledHandlers = this.enabledHandlers();\n      var resizeEnabled = this.resizeEnabled();\n      var padding = this.getPadding();\n\n      this.findOne('.top-left').setAttrs({\n        x: -padding,\n        y: -padding,\n        visible: resizeEnabled && enabledHandlers.indexOf('top-left') >= 0\n      });\n      this.findOne('.top-center').setAttrs({\n        x: width / 2,\n        y: -padding,\n        visible: resizeEnabled && enabledHandlers.indexOf('top-center') >= 0\n      });\n      this.findOne('.top-right').setAttrs({\n        x: width + padding,\n        y: -padding,\n        visible: resizeEnabled && enabledHandlers.indexOf('top-right') >= 0\n      });\n      this.findOne('.middle-left').setAttrs({\n        x: -padding,\n        y: height / 2,\n        visible: resizeEnabled && enabledHandlers.indexOf('middle-left') >= 0\n      });\n      this.findOne('.middle-right').setAttrs({\n        x: width + padding,\n        y: height / 2,\n        visible: resizeEnabled && enabledHandlers.indexOf('middle-right') >= 0\n      });\n      this.findOne('.bottom-left').setAttrs({\n        x: -padding,\n        y: height + padding,\n        visible: resizeEnabled && enabledHandlers.indexOf('bottom-left') >= 0\n      });\n      this.findOne('.bottom-center').setAttrs({\n        x: width / 2,\n        y: height + padding,\n        visible: resizeEnabled && enabledHandlers.indexOf('bottom-center') >= 0\n      });\n      this.findOne('.bottom-right').setAttrs({\n        x: width + padding,\n        y: height + padding,\n        visible: resizeEnabled && enabledHandlers.indexOf('bottom-right') >= 0\n      });\n\n      this.findOne('.rotater').setAttrs({\n        x: width / 2,\n        y: -this.rotateHandlerOffset() * Konva.Util._sign(height),\n        visible: this.rotateEnabled()\n      });\n\n      this.findOne('.back').setAttrs({\n        width: width,\n        height: height,\n        visible: this.lineEnabled()\n      });\n    },\n    isTransforming: function() {\n      return this._transforming;\n    },\n    stopTransform: function() {\n      if (this._transforming) {\n        this._removeEvents();\n      }\n    },\n    destroy: function() {\n      Konva.Group.prototype.destroy.call(this);\n      this.detach();\n      this._removeEvents();\n    },\n    // do not work as a container\n    // we will recreate inner nodes manually\n    toObject: function() {\n      return Konva.Node.prototype.toObject.call(this);\n    }\n  };\n  Konva.Util.extend(Konva.Transformer, Konva.Group);\n\n  function validateResizers(val) {\n    if (!(val instanceof Array)) {\n      Konva.Util.warn('enabledHandlers value should be an array');\n    }\n    if (val instanceof Array) {\n      val.forEach(function(name) {\n        if (RESIZERS_NAMES.indexOf(name) === -1) {\n          Konva.Util.warn(\n            'Unknown resizer name: ' +\n              name +\n              '. Available names are: ' +\n              RESIZERS_NAMES.join(', ')\n          );\n        }\n      });\n    }\n    return val || [];\n  }\n\n  /**\n   * get/set enabled handlers\n   * @name enabledHandlers\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get list of handlers\n   * var enabledHandlers = shape.enabledHandlers();\n   *\n   * // set handlers\n   * shape.enabledHandlers(['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right']);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'enabledHandlers',\n    RESIZERS_NAMES,\n    validateResizers\n  );\n\n  /**\n   * get/set resize ability. If false it will automatically hide resizing handlers\n   * @name resizeEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var resizeEnabled = shape.resizeEnabled();\n   *\n   * // set\n   * shape.resizeEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'resizeEnabled', true);\n\n  /**\n   * get/set ability to rotate.\n   * @name rotateEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var rotateEnabled = shape.rotateEnabled();\n   *\n   * // set\n   * shape.rotateEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotateEnabled', true);\n\n  /**\n   * get/set rotation snaps angles.\n   * @name rotationSnaps\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var rotationSnaps = shape.rotationSnaps();\n   *\n   * // set\n   * shape.rotationSnaps([0, 90, 180, 270]);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotationSnaps', []);\n\n  /**\n   * get/set distance for rotation handler\n   * @name rotateHandlerOffset\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var rotateHandlerOffset = shape.rotateHandlerOffset();\n   *\n   * // set\n   * shape.rotateHandlerOffset(100);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotateHandlerOffset', 50);\n\n  /**\n   * get/set visibility of border\n   * @name lineEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var lineEnabled = shape.lineEnabled();\n   *\n   * // set\n   * shape.lineEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'lineEnabled', true);\n\n  /**\n   * get/set should we keep ration of resize?\n   * @name keepRatio\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var keepRatio = shape.keepRatio();\n   *\n   * // set\n   * shape.keepRatio(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'keepRatio', true);\n\n  /**\n   * get/set padding\n   * @name padding\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var padding = shape.padding();\n   *\n   * // set\n   * shape.padding(10);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'padding', 0);\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Transformer, 'node');\n\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'boundBoxFunc');\n\n  Konva.Collection.mapMethods(Konva.Transformer);\n})(Konva);\n","\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array ? array.length : 0;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeMax = Math.max;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property identifiers to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, props) {\n  object = Object(object);\n  return basePickBy(object, props, function(value, key) {\n    return key in object;\n  });\n}\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property identifiers to pick from.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, props, predicate) {\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key];\n\n    if (predicate(value, key)) {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Creates an array of the own and inherited enumerable symbol properties\n * of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable string keyed properties of `object` that are\n * not omitted.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [props] The property identifiers to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = baseRest(function(object, props) {\n  if (object == null) {\n    return {};\n  }\n  props = arrayMap(baseFlatten(props, 1), toKey);\n  return basePick(object, baseDifference(getAllKeysIn(object), props));\n});\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = omit;\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","export var red = {\"50\":\"#ffebee\",\"100\":\"#ffcdd2\",\"200\":\"#ef9a9a\",\"300\":\"#e57373\",\"400\":\"#ef5350\",\"500\":\"#f44336\",\"600\":\"#e53935\",\"700\":\"#d32f2f\",\"800\":\"#c62828\",\"900\":\"#b71c1c\",\"a100\":\"#ff8a80\",\"a200\":\"#ff5252\",\"a400\":\"#ff1744\",\"a700\":\"#d50000\"};\nexport var pink = {\"50\":\"#fce4ec\",\"100\":\"#f8bbd0\",\"200\":\"#f48fb1\",\"300\":\"#f06292\",\"400\":\"#ec407a\",\"500\":\"#e91e63\",\"600\":\"#d81b60\",\"700\":\"#c2185b\",\"800\":\"#ad1457\",\"900\":\"#880e4f\",\"a100\":\"#ff80ab\",\"a200\":\"#ff4081\",\"a400\":\"#f50057\",\"a700\":\"#c51162\"};\nexport var purple = {\"50\":\"#f3e5f5\",\"100\":\"#e1bee7\",\"200\":\"#ce93d8\",\"300\":\"#ba68c8\",\"400\":\"#ab47bc\",\"500\":\"#9c27b0\",\"600\":\"#8e24aa\",\"700\":\"#7b1fa2\",\"800\":\"#6a1b9a\",\"900\":\"#4a148c\",\"a100\":\"#ea80fc\",\"a200\":\"#e040fb\",\"a400\":\"#d500f9\",\"a700\":\"#aa00ff\"};\nexport var deepPurple = {\"50\":\"#ede7f6\",\"100\":\"#d1c4e9\",\"200\":\"#b39ddb\",\"300\":\"#9575cd\",\"400\":\"#7e57c2\",\"500\":\"#673ab7\",\"600\":\"#5e35b1\",\"700\":\"#512da8\",\"800\":\"#4527a0\",\"900\":\"#311b92\",\"a100\":\"#b388ff\",\"a200\":\"#7c4dff\",\"a400\":\"#651fff\",\"a700\":\"#6200ea\"};\nexport var indigo = {\"50\":\"#e8eaf6\",\"100\":\"#c5cae9\",\"200\":\"#9fa8da\",\"300\":\"#7986cb\",\"400\":\"#5c6bc0\",\"500\":\"#3f51b5\",\"600\":\"#3949ab\",\"700\":\"#303f9f\",\"800\":\"#283593\",\"900\":\"#1a237e\",\"a100\":\"#8c9eff\",\"a200\":\"#536dfe\",\"a400\":\"#3d5afe\",\"a700\":\"#304ffe\"};\nexport var blue = {\"50\":\"#e3f2fd\",\"100\":\"#bbdefb\",\"200\":\"#90caf9\",\"300\":\"#64b5f6\",\"400\":\"#42a5f5\",\"500\":\"#2196f3\",\"600\":\"#1e88e5\",\"700\":\"#1976d2\",\"800\":\"#1565c0\",\"900\":\"#0d47a1\",\"a100\":\"#82b1ff\",\"a200\":\"#448aff\",\"a400\":\"#2979ff\",\"a700\":\"#2962ff\"};\nexport var lightBlue = {\"50\":\"#e1f5fe\",\"100\":\"#b3e5fc\",\"200\":\"#81d4fa\",\"300\":\"#4fc3f7\",\"400\":\"#29b6f6\",\"500\":\"#03a9f4\",\"600\":\"#039be5\",\"700\":\"#0288d1\",\"800\":\"#0277bd\",\"900\":\"#01579b\",\"a100\":\"#80d8ff\",\"a200\":\"#40c4ff\",\"a400\":\"#00b0ff\",\"a700\":\"#0091ea\"};\nexport var cyan = {\"50\":\"#e0f7fa\",\"100\":\"#b2ebf2\",\"200\":\"#80deea\",\"300\":\"#4dd0e1\",\"400\":\"#26c6da\",\"500\":\"#00bcd4\",\"600\":\"#00acc1\",\"700\":\"#0097a7\",\"800\":\"#00838f\",\"900\":\"#006064\",\"a100\":\"#84ffff\",\"a200\":\"#18ffff\",\"a400\":\"#00e5ff\",\"a700\":\"#00b8d4\"};\nexport var teal = {\"50\":\"#e0f2f1\",\"100\":\"#b2dfdb\",\"200\":\"#80cbc4\",\"300\":\"#4db6ac\",\"400\":\"#26a69a\",\"500\":\"#009688\",\"600\":\"#00897b\",\"700\":\"#00796b\",\"800\":\"#00695c\",\"900\":\"#004d40\",\"a100\":\"#a7ffeb\",\"a200\":\"#64ffda\",\"a400\":\"#1de9b6\",\"a700\":\"#00bfa5\"};\nexport var green = {\"50\":\"#e8f5e9\",\"100\":\"#c8e6c9\",\"200\":\"#a5d6a7\",\"300\":\"#81c784\",\"400\":\"#66bb6a\",\"500\":\"#4caf50\",\"600\":\"#43a047\",\"700\":\"#388e3c\",\"800\":\"#2e7d32\",\"900\":\"#1b5e20\",\"a100\":\"#b9f6ca\",\"a200\":\"#69f0ae\",\"a400\":\"#00e676\",\"a700\":\"#00c853\"};\nexport var lightGreen = {\"50\":\"#f1f8e9\",\"100\":\"#dcedc8\",\"200\":\"#c5e1a5\",\"300\":\"#aed581\",\"400\":\"#9ccc65\",\"500\":\"#8bc34a\",\"600\":\"#7cb342\",\"700\":\"#689f38\",\"800\":\"#558b2f\",\"900\":\"#33691e\",\"a100\":\"#ccff90\",\"a200\":\"#b2ff59\",\"a400\":\"#76ff03\",\"a700\":\"#64dd17\"};\nexport var lime = {\"50\":\"#f9fbe7\",\"100\":\"#f0f4c3\",\"200\":\"#e6ee9c\",\"300\":\"#dce775\",\"400\":\"#d4e157\",\"500\":\"#cddc39\",\"600\":\"#c0ca33\",\"700\":\"#afb42b\",\"800\":\"#9e9d24\",\"900\":\"#827717\",\"a100\":\"#f4ff81\",\"a200\":\"#eeff41\",\"a400\":\"#c6ff00\",\"a700\":\"#aeea00\"};\nexport var yellow = {\"50\":\"#fffde7\",\"100\":\"#fff9c4\",\"200\":\"#fff59d\",\"300\":\"#fff176\",\"400\":\"#ffee58\",\"500\":\"#ffeb3b\",\"600\":\"#fdd835\",\"700\":\"#fbc02d\",\"800\":\"#f9a825\",\"900\":\"#f57f17\",\"a100\":\"#ffff8d\",\"a200\":\"#ffff00\",\"a400\":\"#ffea00\",\"a700\":\"#ffd600\"};\nexport var amber = {\"50\":\"#fff8e1\",\"100\":\"#ffecb3\",\"200\":\"#ffe082\",\"300\":\"#ffd54f\",\"400\":\"#ffca28\",\"500\":\"#ffc107\",\"600\":\"#ffb300\",\"700\":\"#ffa000\",\"800\":\"#ff8f00\",\"900\":\"#ff6f00\",\"a100\":\"#ffe57f\",\"a200\":\"#ffd740\",\"a400\":\"#ffc400\",\"a700\":\"#ffab00\"};\nexport var orange = {\"50\":\"#fff3e0\",\"100\":\"#ffe0b2\",\"200\":\"#ffcc80\",\"300\":\"#ffb74d\",\"400\":\"#ffa726\",\"500\":\"#ff9800\",\"600\":\"#fb8c00\",\"700\":\"#f57c00\",\"800\":\"#ef6c00\",\"900\":\"#e65100\",\"a100\":\"#ffd180\",\"a200\":\"#ffab40\",\"a400\":\"#ff9100\",\"a700\":\"#ff6d00\"};\nexport var deepOrange = {\"50\":\"#fbe9e7\",\"100\":\"#ffccbc\",\"200\":\"#ffab91\",\"300\":\"#ff8a65\",\"400\":\"#ff7043\",\"500\":\"#ff5722\",\"600\":\"#f4511e\",\"700\":\"#e64a19\",\"800\":\"#d84315\",\"900\":\"#bf360c\",\"a100\":\"#ff9e80\",\"a200\":\"#ff6e40\",\"a400\":\"#ff3d00\",\"a700\":\"#dd2c00\"};\nexport var brown = {\"50\":\"#efebe9\",\"100\":\"#d7ccc8\",\"200\":\"#bcaaa4\",\"300\":\"#a1887f\",\"400\":\"#8d6e63\",\"500\":\"#795548\",\"600\":\"#6d4c41\",\"700\":\"#5d4037\",\"800\":\"#4e342e\",\"900\":\"#3e2723\"};\nexport var grey = {\"50\":\"#fafafa\",\"100\":\"#f5f5f5\",\"200\":\"#eeeeee\",\"300\":\"#e0e0e0\",\"400\":\"#bdbdbd\",\"500\":\"#9e9e9e\",\"600\":\"#757575\",\"700\":\"#616161\",\"800\":\"#424242\",\"900\":\"#212121\"};\nexport var blueGrey = {\"50\":\"#eceff1\",\"100\":\"#cfd8dc\",\"200\":\"#b0bec5\",\"300\":\"#90a4ae\",\"400\":\"#78909c\",\"500\":\"#607d8b\",\"600\":\"#546e7a\",\"700\":\"#455a64\",\"800\":\"#37474f\",\"900\":\"#263238\"};\nexport var darkText = {\"primary\":\"rgba(0, 0, 0, 0.87)\",\"secondary\":\"rgba(0, 0, 0, 0.54)\",\"disabled\":\"rgba(0, 0, 0, 0.38)\",\"dividers\":\"rgba(0, 0, 0, 0.12)\"};\nexport var lightText = {\"primary\":\"rgba(255, 255, 255, 1)\",\"secondary\":\"rgba(255, 255, 255, 0.7)\",\"disabled\":\"rgba(255, 255, 255, 0.5)\",\"dividers\":\"rgba(255, 255, 255, 0.12)\"};\nexport var darkIcons = {\"active\":\"rgba(0, 0, 0, 0.54)\",\"inactive\":\"rgba(0, 0, 0, 0.38)\"};\nexport var lightIcons = {\"active\":\"rgba(255, 255, 255, 1)\",\"inactive\":\"rgba(255, 255, 255, 0.5)\"};\nexport var white = \"#ffffff\";\nexport var black = \"#000000\";\n\nexport default {\n  red: red,\n  pink: pink,\n  purple: purple,\n  deepPurple: deepPurple,\n  indigo: indigo,\n  blue: blue,\n  lightBlue: lightBlue,\n  cyan: cyan,\n  teal: teal,\n  green: green,\n  lightGreen: lightGreen,\n  lime: lime,\n  yellow: yellow,\n  amber: amber,\n  orange: orange,\n  deepOrange: deepOrange,\n  brown: brown,\n  grey: grey,\n  blueGrey: blueGrey,\n  darkText: darkText,\n  lightText: lightText,\n  darkIcons: darkIcons,\n  lightIcons: lightIcons,\n  white: white,\n  black: black\n};\n","/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","!function(e){var t={variable:[{pattern:/\\$?\\(\\([\\s\\S]+?\\)\\)/,inside:{variable:[{pattern:/(^\\$\\(\\([\\s\\S]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\([^)]+\\)|`[^`]+`/,greedy:!0,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},/\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]};e.languages.bash={shebang:{pattern:/^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},string:[{pattern:/((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,lookbehind:!0,greedy:!0,inside:t},{pattern:/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,greedy:!0,inside:t}],variable:t.variable,\"function\":{pattern:/(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,lookbehind:!0},\"boolean\":{pattern:/(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,lookbehind:!0},operator:/&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/};var a=t.variable[1].inside;a.string=e.languages.bash.string,a[\"function\"]=e.languages.bash[\"function\"],a.keyword=e.languages.bash.keyword,a.boolean=e.languages.bash.boolean,a.operator=e.languages.bash.operator,a.punctuation=e.languages.bash.punctuation,e.languages.shell=e.languages.bash}(Prism);","Prism.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,inside:{rule:/@[\\w-]+/}},url:/url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,selector:/[^{}\\s][^{};]*?(?=\\s*\\{)/,string:{pattern:/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},property:/[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,important:/\\B!important\\b/i,\"function\":/[-a-z0-9]+(?=\\()/i,punctuation:/[(){};:]/},Prism.languages.css.atrule.inside.rest=Prism.languages.css,Prism.languages.markup&&(Prism.languages.insertBefore(\"markup\",\"tag\",{style:{pattern:/(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,lookbehind:!0,inside:Prism.languages.css,alias:\"language-css\",greedy:!0}}),Prism.languages.insertBefore(\"inside\",\"attr-value\",{\"style-attr\":{pattern:/\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,inside:{\"attr-name\":{pattern:/^\\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\\s*=\\s*['\"]|['\"]\\s*$/,\"attr-value\":{pattern:/.+/i,inside:Prism.languages.css}},alias:\"language-css\"}},Prism.languages.markup.tag));","!function(t){var n=t.util.clone(t.languages.javascript);t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=/<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{[^}]*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>/i,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:t.languages.jsx},alias:\"language-javascript\"}},t.languages.jsx.tag);var e=function(t){return\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(e).join(\"\")},a=function(n){for(var s=[],g=0;g<n.length;g++){var o=n[g],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?s.length>0&&s[s.length-1].tagName===e(o.content[0].content[1])&&s.pop():\"/>\"===o.content[o.content.length-1].content||s.push({tagName:e(o.content[0].content[1]),openedBraces:0}):s.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?s[s.length-1].openedBraces++:s.length>0&&s[s.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?s[s.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&s.length>0&&0===s[s.length-1].openedBraces){var p=e(o);g<n.length-1&&(\"string\"==typeof n[g+1]||\"plain-text\"===n[g+1].type)&&(p+=e(n[g+1]),n.splice(g+1,1)),g>0&&(\"string\"==typeof n[g-1]||\"plain-text\"===n[g-1].type)&&(p=e(n[g-1])+p,n.splice(g-1,1),g--),n[g]=new t.Token(\"plain-text\",p,null,p)}o.content&&\"string\"!=typeof o.content&&a(o.content)}};t.hooks.add(\"after-tokenize\",function(t){(\"jsx\"===t.language||\"tsx\"===t.language)&&a(t.tokens)})}(Prism);","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o, visited) {\n\t\t\tvar type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = {};\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = [];\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = _.util.clone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tvar Token = _.Token;\n\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^|[^\\\\])[\"']/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n\t\talias: 'function'\n\t},\n\t'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript',\n\t\t\tgreedy: true\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (pre.hasAttribute('data-download-link') && Prism.plugins.toolbar) {\n\t\t\t\tPrism.plugins.toolbar.registerButton('download-file', function () {\n\t\t\t\t\tvar a = document.createElement('a');\n\t\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\t\ta.setAttribute('download', '');\n\t\t\t\t\ta.href = src;\n\t\t\t\t\treturn a;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}","/*\n    StackBlur - a fast almost Gaussian Blur For Canvas\n\n    Version:     0.5\n    Author:        Mario Klingemann\n    Contact:     mario@quasimondo.com\n    Website:    http://www.quasimondo.com/StackBlurForCanvas\n    Twitter:    @quasimondo\n\n    In case you find this class useful - especially in commercial projects -\n    I am not totally unhappy for a small donation to my PayPal account\n    mario@quasimondo.de\n\n    Or support me on flattr:\n    https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n    Copyright (c) 2010 Mario Klingemann\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n    */\n\n\nvar mul_table = [\n    512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,\n    454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,\n    482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,\n    437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,\n    497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,\n    320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,\n    446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,\n    329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,\n    505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,\n    399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,\n    324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,\n    268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,\n    451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,\n    385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,\n    332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,\n    289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];\n\n\nvar shg_table = [\n    9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\n    17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n    19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24 ];\n\n\nfunction processImage(img, canvas, radius, blurAlphaChannel)\n{\n    if (typeof(img) == 'string') {\n        var img = document.getElementById(img);\n    }\n    else if (typeof HTMLImageElement !== 'undefined' && !img instanceof HTMLImageElement) {\n        return;\n    }\n    var w = img.naturalWidth;\n    var h = img.naturalHeight;\n\n    if (typeof(canvas) == 'string') {\n        var canvas = document.getElementById(canvas);\n    }\n    else if (typeof HTMLCanvasElement !== 'undefined' && !canvas instanceof HTMLCanvasElement) {\n        return;\n    }\n\n    canvas.style.width  = w + 'px';\n    canvas.style.height = h + 'px';\n    canvas.width = w;\n    canvas.height = h;\n\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, w, h);\n    context.drawImage(img, 0, 0);\n\n    if (isNaN(radius) || radius < 1) return;\n\n    if (blurAlphaChannel)\n        processCanvasRGBA(canvas, 0, 0, w, h, radius);\n    else\n        processCanvasRGB(canvas, 0, 0, w, h, radius);\n}\n\nfunction getImageDataFromCanvas(canvas, top_x, top_y, width, height)\n{\n    if (typeof(canvas) == 'string')\n        var canvas  = document.getElementById(canvas);\n    else if (typeof HTMLCanvasElement !== 'undefined' && !canvas instanceof HTMLCanvasElement)\n        return;\n\n    var context = canvas.getContext('2d');\n    var imageData;\n\n    try {\n        try {\n            imageData = context.getImageData(top_x, top_y, width, height);\n        } catch(e) {\n            throw new Error(\"unable to access local image data: \" + e);\n            return;\n        }\n    } catch(e) {\n        throw new Error(\"unable to access image data: \" + e);\n    }\n\n    return imageData;\n}\n\nfunction processCanvasRGBA(canvas, top_x, top_y, width, height, radius)\n{\n    if (isNaN(radius) || radius < 1) return;\n    radius |= 0;\n\n    var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n\n    imageData = processImageDataRGBA(imageData, top_x, top_y, width, height, radius);\n\n    canvas.getContext('2d').putImageData(imageData, top_x, top_y);\n}\n\nfunction processImageDataRGBA(imageData, top_x, top_y, width, height, radius)\n{\n    var pixels = imageData.data;\n\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\n        r_out_sum, g_out_sum, b_out_sum, a_out_sum,\n        r_in_sum, g_in_sum, b_in_sum, a_in_sum,\n        pr, pg, pb, pa, rbs;\n\n    var div = radius + radius + 1;\n    var w4 = width << 2;\n    var widthMinus1  = width - 1;\n    var heightMinus1 = height - 1;\n    var radiusPlus1  = radius + 1;\n    var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n    var stackStart = new BlurStack();\n    var stack = stackStart;\n    for (i = 1; i < div; i++)\n    {\n        stack = stack.next = new BlurStack();\n        if (i == radiusPlus1) var stackEnd = stack;\n    }\n    stack.next = stackStart;\n    var stackIn = null;\n    var stackOut = null;\n\n    yw = yi = 0;\n\n    var mul_sum = mul_table[radius];\n    var shg_sum = shg_table[radius];\n\n    for (y = 0; y < height; y++)\n    {\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi+1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi+2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi+3]);\n\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n\n        stack = stackStart;\n\n        for (i = 0; i < radiusPlus1; i++)\n        {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n\n        for (i = 1; i < radiusPlus1; i++)\n        {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = (pg = pixels[p+1])) * rbs;\n            b_sum += (stack.b = (pb = pixels[p+2])) * rbs;\n            a_sum += (stack.a = (pa = pixels[p+3])) * rbs;\n\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n\n            stack = stack.next;\n        }\n\n\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++)\n        {\n            pixels[yi+3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa != 0)\n            {\n                pa = 255 / pa;\n                pixels[yi]   = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi+1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi+2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            } else {\n                pixels[yi] = pixels[yi+1] = pixels[yi+2] = 0;\n            }\n\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n\n            p =  (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n            r_in_sum += (stackIn.r = pixels[p]);\n            g_in_sum += (stackIn.g = pixels[p+1]);\n            b_in_sum += (stackIn.b = pixels[p+2]);\n            a_in_sum += (stackIn.a = pixels[p+3]);\n\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n\n            stackIn = stackIn.next;\n\n            r_out_sum += (pr = stackOut.r);\n            g_out_sum += (pg = stackOut.g);\n            b_out_sum += (pb = stackOut.b);\n            a_out_sum += (pa = stackOut.a);\n\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n\n            stackOut = stackOut.next;\n\n            yi += 4;\n        }\n        yw += width;\n    }\n\n\n    for (x = 0; x < width; x++)\n    {\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi+1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi+2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi+3]);\n\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n\n        stack = stackStart;\n\n        for (i = 0; i < radiusPlus1; i++)\n        {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n\n        yp = width;\n\n        for (i = 1; i <= radius; i++)\n        {\n            yi = (yp + x) << 2;\n\n            r_sum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = (pg = pixels[yi+1])) * rbs;\n            b_sum += (stack.b = (pb = pixels[yi+2])) * rbs;\n            a_sum += (stack.a = (pa = pixels[yi+3])) * rbs;\n\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n\n            stack = stack.next;\n\n            if(i < heightMinus1)\n            {\n                yp += width;\n            }\n        }\n\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++)\n        {\n            p = yi << 2;\n            pixels[p+3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0)\n            {\n                pa = 255 / pa;\n                pixels[p]   = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p+1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p+2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            } else {\n                pixels[p] = pixels[p+1] = pixels[p+2] = 0;\n            }\n\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n\n            p = (x + (((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width)) << 2;\n\n            r_sum += (r_in_sum += (stackIn.r = pixels[p]));\n            g_sum += (g_in_sum += (stackIn.g = pixels[p+1]));\n            b_sum += (b_in_sum += (stackIn.b = pixels[p+2]));\n            a_sum += (a_in_sum += (stackIn.a = pixels[p+3]));\n\n            stackIn = stackIn.next;\n\n            r_out_sum += (pr = stackOut.r);\n            g_out_sum += (pg = stackOut.g);\n            b_out_sum += (pb = stackOut.b);\n            a_out_sum += (pa = stackOut.a);\n\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n\n            stackOut = stackOut.next;\n\n            yi += width;\n        }\n    }\n    return imageData;\n}\n\nfunction processCanvasRGB(canvas, top_x, top_y, width, height, radius)\n{\n    if (isNaN(radius) || radius < 1) return;\n    radius |= 0;\n\n    var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n    imageData = processImageDataRGB(imageData, top_x, top_y, width, height, radius);\n\n    canvas.getContext('2d').putImageData(imageData, top_x, top_y);\n}\n\nfunction processImageDataRGB(imageData, top_x, top_y, width, height, radius)\n{\n    var pixels = imageData.data;\n\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum,\n        r_out_sum, g_out_sum, b_out_sum,\n        r_in_sum, g_in_sum, b_in_sum,\n        pr, pg, pb, rbs;\n\n    var div = radius + radius + 1;\n    var w4 = width << 2;\n    var widthMinus1  = width - 1;\n    var heightMinus1 = height - 1;\n    var radiusPlus1  = radius + 1;\n    var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n    var stackStart = new BlurStack();\n    var stack = stackStart;\n    for (i = 1; i < div; i++)\n    {\n        stack = stack.next = new BlurStack();\n        if (i == radiusPlus1) var stackEnd = stack;\n    }\n    stack.next = stackStart;\n    var stackIn = null;\n    var stackOut = null;\n\n    yw = yi = 0;\n\n    var mul_sum = mul_table[radius];\n    var shg_sum = shg_table[radius];\n\n    for (y = 0; y < height; y++)\n    {\n        r_in_sum = g_in_sum = b_in_sum = r_sum = g_sum = b_sum = 0;\n\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi+1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi+2]);\n\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n\n        stack = stackStart;\n\n        for (i = 0; i < radiusPlus1; i++)\n        {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack = stack.next;\n        }\n\n        for (i = 1; i < radiusPlus1; i++)\n        {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = (pg = pixels[p+1])) * rbs;\n            b_sum += (stack.b = (pb = pixels[p+2])) * rbs;\n\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n\n            stack = stack.next;\n        }\n\n\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++)\n        {\n            pixels[yi]   = (r_sum * mul_sum) >> shg_sum;\n            pixels[yi+1] = (g_sum * mul_sum) >> shg_sum;\n            pixels[yi+2] = (b_sum * mul_sum) >> shg_sum;\n\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n\n            p =  (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n            r_in_sum += (stackIn.r = pixels[p]);\n            g_in_sum += (stackIn.g = pixels[p+1]);\n            b_in_sum += (stackIn.b = pixels[p+2]);\n\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n\n            stackIn = stackIn.next;\n\n            r_out_sum += (pr = stackOut.r);\n            g_out_sum += (pg = stackOut.g);\n            b_out_sum += (pb = stackOut.b);\n\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n\n            stackOut = stackOut.next;\n\n            yi += 4;\n        }\n        yw += width;\n    }\n\n\n    for (x = 0; x < width; x++)\n    {\n        g_in_sum = b_in_sum = r_in_sum = g_sum = b_sum = r_sum = 0;\n\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi+1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi+2]);\n\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n\n        stack = stackStart;\n\n        for (i = 0; i < radiusPlus1; i++)\n        {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack = stack.next;\n        }\n\n        yp = width;\n\n        for (i = 1; i <= radius; i++)\n        {\n            yi = (yp + x) << 2;\n\n            r_sum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = (pg = pixels[yi+1])) * rbs;\n            b_sum += (stack.b = (pb = pixels[yi+2])) * rbs;\n\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n\n            stack = stack.next;\n\n            if(i < heightMinus1)\n            {\n                yp += width;\n            }\n        }\n\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++)\n        {\n            p = yi << 2;\n            pixels[p]   = (r_sum * mul_sum) >> shg_sum;\n            pixels[p+1] = (g_sum * mul_sum) >> shg_sum;\n            pixels[p+2] = (b_sum * mul_sum) >> shg_sum;\n\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n\n            p = (x + (((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width)) << 2;\n\n            r_sum += (r_in_sum += (stackIn.r = pixels[p]));\n            g_sum += (g_in_sum += (stackIn.g = pixels[p+1]));\n            b_sum += (b_in_sum += (stackIn.b = pixels[p+2]));\n\n            stackIn = stackIn.next;\n\n            r_out_sum += (pr = stackOut.r);\n            g_out_sum += (pg = stackOut.g);\n            b_out_sum += (pb = stackOut.b);\n\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n\n            stackOut = stackOut.next;\n\n            yi += width;\n        }\n    }\n\n    return imageData;\n}\n\nfunction BlurStack()\n{\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\n\nmodule.exports = {\n    image: processImage,\n    canvasRGBA: processCanvasRGBA,\n    canvasRGB: processCanvasRGB,\n    imageDataRGBA: processImageDataRGBA,\n    imageDataRGB: processImageDataRGB\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","module.exports = function(originalModule) {\r\n\tif (!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","import * as types from '../constants';\n\nexport const update = (payload, type) => ({\n  type,\n  payload,\n});\n\nexport const load = () => ({\n  type: types.LOAD,\n});\n","module.exports = \"assets/favicon.ico\";","export const GoogleFonts = [\n  'Roboto',\n  'Lobster',\n  'Open Sans',\n  'Permanent Marker',\n  'ABeeZee',\n];\n\nexport default [...GoogleFonts, 'Arial', 'Impact', 'system-ui'];\n","// Add assets in this folder then import them in this file\n// import './photo.png';\nimport './favicon.ico';\n\nexport fonts, { GoogleFonts } from './fonts';\n","import React from 'react';\nimport './AppStyles.less';\nimport Canvas from '../Canvas';\nimport Form from '../Form';\nimport Loader from '../Loader';\n\nconst App = () => (\n  <div className=\"App\">\n    <Loader />\n    <h1>Favicon Generator</h1>\n    <Canvas />\n    <Form />\n  </div>\n);\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\nimport WebfontLoader from '@dr-kobros/react-webfont-loader';\nimport { Button } from 'react-uwp';\nimport { changeFavicon } from '../../utils';\nimport { GoogleFonts } from '../../assets';\nimport './CanvasStyles.less';\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      config: {\n        google: {\n          families: GoogleFonts,\n        },\n      },\n    };\n  }\n  handleDownload = () => {\n    this.downloadButton.href = this.stage.getStage().toDataURL();\n  };\n  handleLoad = (status) => {\n    if (status === 'active') {\n      this.setState({ loaded: true });\n      this.props.load();\n      // changeFavicon(this.stage.getStage().toDataURL());\n    }\n  };\n  render() {\n    const {\n      fontSize, fontFamily, value, color, textWidth,\n    } = this.props.settings.text;\n    const { size, backgroundColor, background } = this.props.settings;\n    const { loaded, config } = this.state;\n    return (\n      <div className=\"Canvas\">\n        <Stage\n          ref={(node) => {\n            this.stage = node;\n          }}\n          width={size}\n          height={size}\n          onChange={() => console.log('FUCKA')}\n        >\n          <Layer>\n            {background && <Rect x={0} y={0} width={size} height={size} fill={backgroundColor} />}\n            <WebfontLoader config={config} onStatus={this.handleLoad}>\n              <React.Fragment>\n                {loaded && (\n                  <Text\n                    fill={color}\n                    fontSize={parseInt(fontSize, 10)}\n                    fontFamily={fontFamily}\n                    text={value}\n                    offsetY={fontSize / 2}\n                    offsetX={textWidth / 2}\n                    /* eslint-disable */\n                    x={size / 2 - 2}\n                    y={size / 2 + 2}\n                    /* eslint-enable */\n                  />\n                )}\n              </React.Fragment>\n            </WebfontLoader>\n          </Layer>\n        </Stage>\n        <div className=\"download\">\n          <a href=\"/download\" ref={node => (this.downloadButton = node)} download=\"favicon.ico\">\n            <Button icon=\"Download\" iconPosition=\"right\" onClick={this.handleDownload}>\n              Download\n            </Button>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","import { connect } from 'react-redux';\nimport Canvas from './Canvas';\nimport { load } from '../../actions';\n\nconst mapStateToProps = ({ mainReducer }) => ({\n  settings: mainReducer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  load: () => dispatch(load()),\n});\n\nconst CanvasContainer = connect(mapStateToProps, mapDispatchToProps)(Canvas);\n\nexport default CanvasContainer;\n","import React from 'react';\nimport { ChromePicker } from 'react-color';\nimport { Toggle } from 'react-uwp';\nimport Separator from 'react-uwp/Separator';\nimport { UPDATE_COLOR, BACKGROUND_COLOR, BACKGROUND } from '../../constants';\n\nconst Color = ({ update, settings }) => {\n  const colorChange = color => update(color.hex, UPDATE_COLOR);\n  const bgColorChange = (color) => {\n    update(color.hex, BACKGROUND_COLOR);\n  };\n  const toggleBackground = () => {\n    update(!settings.background, BACKGROUND);\n  };\n  return (\n    <div className=\"field Color\">\n      <div className=\"check\" onClick={toggleBackground}>\n        <h2>Background</h2>\n        <Toggle checked={settings.background} size={21} defaultToggled={settings.background} />\n      </div>\n      <Separator />\n      <div className=\"textColor\">\n        <div className=\"heading\">\n          <div style={{ background: settings.text.color }} className=\"cover\" />\n          <h2>Text color</h2>\n        </div>\n        <ChromePicker disableAlpha color={settings.text.color} onChange={colorChange} />\n      </div>\n\n      {settings.background && (\n        <div className=\"bgColor\">\n          <div className=\"heading\">\n            <div style={{ background: settings.backgroundColor }} className=\"cover\" />\n            <h2>Background color</h2>\n          </div>\n          <ChromePicker disableAlpha color={settings.backgroundColor} onChange={bgColorChange} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Color;\n","import React from 'react';\nimport { DropDownMenu } from 'react-uwp';\nimport { fonts } from '../../assets';\nimport { UPDATE_FONT } from '../../constants';\n\nlet fontList = fonts;\n\nconst Font = ({ handleChange }) => {\n  const fontChange = (value) => {\n    handleChange(value, UPDATE_FONT);\n    fontList = [value, ...fontList.filter(font => font !== value)];\n  };\n  return (\n    <div className=\"field Font\">\n      <h2>Font</h2>\n      <DropDownMenu itemHeight={40} itemWidth={302} values={fontList} onChangeValue={fontChange} />\n    </div>\n  );\n};\n\nexport default Font;\n","import React from 'react';\nimport Text from './Text';\nimport Slider from './Slider';\nimport Font from './Font';\nimport Color from './Color';\nimport './FormStyles.less';\n\nconst Form = ({ update, settings }) => (\n  <div className=\"Form\">\n    <Text handleChange={update} settings={settings} />\n    <Slider handleChange={update} settings={settings} />\n    <Font handleChange={update} />\n    <Color settings={settings} update={update} />\n  </div>\n);\n\nexport default Form;\n","import React from 'react';\nimport { Slider, TextBox } from 'react-uwp';\nimport { UPDATE_SIZE } from '../../constants';\n\nconst SliderComponent = ({ settings, handleChange }) => (\n  <div className=\"field Size\">\n    <h2>Font-size</h2>\n    <div>\n      {/* <Slider\n        initValue={settings.text.fontSize}\n        minValue={12}\n        maxValue={200}\n        useSimpleController\n        onChangeValue={value => handleChange(parseInt(value, 10), UPDATE_SIZE)}\n      /> */}\n      <TextBox\n        onChangeValue={value => handleChange(value, UPDATE_SIZE)}\n        className=\"ftzInput\"\n        value={parseInt(settings.text.fontSize, 10)}\n        type=\"number\"\n        max={200}\n        min={12}\n      />\n    </div>\n  </div>\n);\n\nexport default SliderComponent;\n","import React from 'react';\nimport { TextBox } from 'react-uwp';\nimport { UPDATE_TEXT } from '../../constants';\n\nconst Text = ({ handleChange, settings }) => {\n  const textUpdate = value => handleChange(value, UPDATE_TEXT);\n  return (\n    <div className=\"field Text\">\n      <h2>Text</h2>\n      <TextBox\n        onChangeValue={textUpdate}\n        background=\"none\"\n        defaultValue={settings.text.value}\n      />\n    </div>\n  );\n};\n\nexport default Text;\n","import { connect } from 'react-redux';\nimport Form from './Form';\nimport { update } from '../../actions';\n\nconst mapStateToProps = ({ mainReducer }) => ({\n  settings: mainReducer,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  update: (value, type) => dispatch(update(value, type)),\n});\n\nconst FormContainer = connect(mapStateToProps, mapDispatchToProps)(Form);\n\nexport default FormContainer;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport './LoaderStyles.less';\n\nconst Preloader = ({ loaded }) => (\n  <div className={`Loader ${loaded ? 'loaded' : 'loading'}`}>\n    <Loader type=\"TailSpin\" color=\"#0078D7\" height=\"100\" width=\"100\" />\n  </div>\n);\n\nexport default Preloader;\n","import { connect } from 'react-redux';\nimport Loader from './Loader';\n\nconst mapStateToProps = ({ loadReducer }) => ({\n  loaded: loadReducer,\n});\n\nconst LoaderContainer = connect(mapStateToProps)(Loader);\n\nexport default LoaderContainer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Theme as UWPThemeProvider, getTheme } from 'react-uwp/Theme';\nimport { hot } from 'react-hot-loader';\nimport App from '../App';\nimport configureStore from '../../store';\n\nconst store = configureStore();\n\nconst Root = () => (\n  <Provider store={store}>\n    <UWPThemeProvider\n      theme={getTheme({\n        themeName: 'light',\n        accent: '#0078D7',\n        useFluentDesign: true,\n      })}\n    >\n      <App />\n    </UWPThemeProvider>\n  </Provider>\n);\n\nexport default hot(module)(Root);\n","export const UPDATE_TEXT = 'UPDATE_TEXT';\nexport const UPDATE_SIZE = 'UPDATE_SIZE';\nexport const UPDATE_COLOR = 'UPDATE_COLOR';\nexport const UPDATE_FONT = 'UPDATE_FONT';\nexport const BACKGROUND = 'BACKGROUND';\nexport const BACKGROUND_COLOR = 'BACKGROUND_COLOR';\nexport const LOAD = 'LOAD';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/Root';\nimport './assets';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<Root />, document.getElementById('root'));\n","import { combineReducers } from 'redux';\nimport mainReducer from './mainReducer';\nimport loadReducer from './loadReducer';\n\nconst rootReducer = combineReducers({\n  loadReducer,\n  mainReducer,\n});\n\nexport default rootReducer;\n","import { LOAD } from '../constants';\n\nconst loaded = false;\n\nconst loadReducer = (state = loaded, action) => {\n  switch (action.type) {\n    case LOAD:\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default loadReducer;\n","import * as types from '../constants';\nimport { fonts } from '../assets';\nimport { calculateWidth } from '../utils';\n\nconst initialState = {\n  size: 128,\n  backgroundColor: '#0078D7',\n  background: true,\n  text: {\n    fontSize: 64,\n    fontFamily: fonts[0],\n    value: 'F',\n    color: '#E2E2E2',\n  },\n};\ninitialState.text.textWidth = calculateWidth(\n  initialState.text.value,\n  fonts[0],\n  initialState.text.fontSize,\n);\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.UPDATE_TEXT:\n      return {\n        ...state,\n        text: {\n          ...state.text,\n          value: action.payload,\n          textWidth: calculateWidth(action.payload, state.text.fontFamily, state.text.fontSize),\n        },\n      };\n    case types.UPDATE_COLOR:\n      return {\n        ...state,\n        text: { ...state.text, color: action.payload },\n      };\n    case types.UPDATE_FONT:\n      return {\n        ...state,\n        text: {\n          ...state.text,\n          textWidth: calculateWidth(state.text.value, action.payload, state.text.fontSize),\n          fontFamily: action.payload,\n        },\n      };\n    case types.UPDATE_SIZE:\n      return {\n        ...state,\n        text: {\n          ...state.text,\n          textWidth: calculateWidth(state.text.value, state.text.fontFamily, action.payload),\n          fontSize: action.payload,\n        },\n      };\n    case types.BACKGROUND:\n      return { ...state, background: action.payload };\n    case types.BACKGROUND_COLOR:\n      return { ...state, backgroundColor: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nexport default function configureStore() {\n  /* eslint-disable */\n  const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  );\n  if (module.hot) {\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers/index');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  /* eslint-enable */\n  return store;\n}\n","export function calculateWidth(text, fontFamily, fontSize) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = `${fontSize}px ${fontFamily}`;\n  return ctx.measureText(text).width;\n}\n\nexport function changeFavicon(data) {\n  const link = document.querySelector(\"link[rel*='icon']\") || document.createElement('link');\n  link.type = 'image/x-icon';\n  link.rel = 'shortcut icon';\n  link.href = data;\n  document.getElementsByTagName('head')[0].appendChild(link);\n}\n"],"sourceRoot":""}